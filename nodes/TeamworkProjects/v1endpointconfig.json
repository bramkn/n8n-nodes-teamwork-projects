[{"endpoint":"/account.json","method":"get","description":"Get Account Details","group":"Account"},{"endpoint":"/latestActivity.json","method":"get","parameters":[{"name":"page","in":"query","description":"page=1&pageSize=10","type":"string"},{"name":"pageSize","in":"query","description":"page=1&pageSize=10","type":"string"},{"name":"includeArchivedProjects","in":"query","type":"boolean"}],"description":"Latest Activity across all Projects","group":"Activity"},{"endpoint":"/projects/{id}/latestActivity.json","method":"get","parameters":[{"name":"maxItems","in":"query","description":"default=60, Max=200","type":"string","default":""},{"name":"onlyStarred","in":"query","type":"boolean"},{"name":"page","in":"query","description":"page=1&pageSize=10","type":"string"},{"name":"pageSize","in":"query","description":"page=1&pageSize=10","type":"string"}],"description":"List Latest Activity for a Specific Project","group":"Activity"},{"endpoint":"/tasks/{taskId}/activity.json","method":"get","description":"Get Task Activity","group":"Activity"},{"endpoint":"/tasks/{id}/audit.json","method":"get","description":"Get a Task's Audit History (Premium and Enterprise plans only)","group":"Activity"},{"endpoint":"/activity/{id}.json","method":"delete","description":"Delete an Activity Entry","group":"Activity"},{"endpoint":"/projects.json","method":"get","parameters":[{"name":"status","in":"query","description":"You can pass a status option to retrieve projects filtered by status (ALL, ACTIVE, ARCHIVED, CURRENT, LATE, COMPLETED)","type":"string","default":"active"},{"name":"updatedAfterDate","in":"query","description":"Send back only those projects recently updated after a certain date. Eg. 20100603 - datetime","type":"string"},{"name":"orderby","in":"query","description":"Order projects by a parameter, eg companyName, name, lastActivityDate","type":"string","default":"name"},{"name":"createdAfterDate","in":"query","type":"string"},{"name":"createdAfterTime","in":"query","description":"Return projects created after a certain time.","type":"string"},{"name":"catId","in":"query","description":"Return projects in a certain category, using cat Id","type":"integer"},{"name":"includePeople","in":"query","description":"You can pass includePeople=true as an optional parameter to get an array of ID's of all people associated with each project included in the response under the field people","type":"boolean"},{"name":"includeProjectOwner","in":"query","description":"The project owner can be returned by adding this parameter to the project's endpoint. ","type":"boolean","default":false},{"name":"page","in":"query","type":"string"},{"name":"pageSize","in":"query","description":"Max page size is 500.","type":"number","default":500},{"name":"orderMode","in":"query","type":"string","default":"asc"},{"name":"onlyStarredProjects","in":"query","type":"boolean"},{"name":"companyId","in":"query","type":"string"},{"name":"projectOwnerIds","in":"query","type":"string"},{"name":"searchTerm","in":"query","type":"string"},{"name":"getDeleted","in":"query","type":"boolean","default":false},{"name":"includeTags","in":"query","type":"boolean"},{"name":"userId","in":"query","type":"string"},{"name":"updatedAfterDateTime","in":"query","type":"string"}],"description":"Retrieve All Projects","group":"Projects"},{"endpoint":"/projects.json","method":"post","parameters":[{"name":"body","in":"body","schema":{"type":"object","properties":{"project":{"type":"object","properties":{"name":{"type":"string"},"description":{"type":"string"},"use-tasks":{"type":"boolean"},"use-milestones":{"type":"boolean"},"use-messages":{"type":"boolean"},"use-files":{"type":"boolean"},"use-time":{"type":"boolean"},"use-notebook":{"type":"boolean"},"use-riskregister":{"type":"boolean"},"use-links":{"type":"boolean"},"use-billing":{"type":"boolean"},"use-comments":{"type":"boolean"},"category-id":{"type":"integer"},"start-date":{"type":"string","default":"YYYYMMDD"},"end-date":{"type":"string","default":"YYYYMMDD"},"tagIds":{"type":"string"},"onboarding":{"type":"boolean"},"grant-access-to":{"type":"string"},"private":{"type":"boolean"},"customFields":{"type":"array","items":{"type":"object","properties":{"customFieldId":{"type":"integer"},"value":{"type":"string"}}}},"people":{"type":"integer","description":"List of Ids"},"projectOwnerId":{"type":"integer"},"companyId":{"type":"integer"}}}}}}],"description":"Create Project","group":"Projects"},{"endpoint":"/projects/{id}.json","method":"get","parameters":[{"name":"includePeople","in":"query","description":"You can pass includePeople=true as an optional parameter to get an array of ID's of all people associated with each project included in the response under the field people","type":"boolean"},{"name":"projectOwnerIds","in":"query","type":"string"},{"name":"projectHealth","in":"query","type":"string"},{"name":"includeProjectOwner","in":"query","type":"boolean","default":false},{"name":"userId","in":"query","type":"string"}],"description":"Retrieve a Single Project","group":"Projects"},{"endpoint":"/projects/{id}.json","method":"put","parameters":[{"name":"body","in":"body","schema":{"type":"object","properties":{"project":{"type":"object","properties":{"name":{"type":"string"},"description":{"type":"string"},"use-tasks":{"type":"boolean"},"use-milestones":{"type":"boolean"},"use-messages":{"type":"boolean"},"use-files":{"type":"boolean"},"use-time":{"type":"boolean"},"use-notebook":{"type":"boolean"},"use-riskregister":{"type":"boolean"},"use-links":{"type":"boolean"},"use-billing":{"type":"boolean"},"use-comments":{"type":"boolean"},"category-id":{"type":"integer"},"start-date":{"type":"string","description":"Passed in as string format: YYYYMMDD","example":"20210101"},"end-date":{"type":"string","description":"Passed in as string format: YYYYMMDD","example":"20211212"},"tagIds":{"type":"string"},"onboarding":{"type":"boolean"},"templateDateTargetDefault":{"type":"string"},"grant-access-to":{"type":"string"},"private":{"type":"boolean"},"customFields":{"type":"array","items":{"type":"object","properties":{"customFieldId":{"type":"integer"},"value":{"type":"string"}}}},"people":{"type":"string"},"projectOwnerId":{"type":"string"},"companyId":{"type":"integer"}}}}},"x-examples":{"application/json":{"project":{"name":"nostrud voluptate","description":"est incididunt in","use-tasks":false,"use-milestones":true,"use-messages":false,"use-files":false,"use-time":true,"use-notebook":false,"use-riskregister":false,"use-links":true,"use-billing":false,"use-comments":false,"category-id":24682889,"start-date":"commodo","end-date":"ex laboris deserunt","tagIds":"veniam","onboarding":false,"templateDateTargetDefault":"qui est occaecat culpa","grant-access-to":"nulla do non est","private":true,"customFields":[{"customFieldId":2945957,"value":"quis velit"},{"customFieldId":-72163045,"value":"in"},{"customFieldId":83284046,"value":"aliquip"},{"customFieldId":-10344423,"value":"quis consequa"},{"customFieldId":16143530,"value":"nostrud"}],"people":"non eu do occaecat sunt","projectOwnerId":"eiusmod aliquip cupidatat","companyId":57109184}}}}],"description":"Update Project","group":"Projects"},{"endpoint":"/projects/{id}.json","method":"delete","description":"Delete Project","group":"Projects"},{"endpoint":"/companies/{id}/projects.json","method":"get","parameters":[{"name":"includePeople","in":"query","description":"You can pass includePeople=true as an optional parameter to get an array of ID's of all people associated with each project included in the response under the field people","type":"boolean"}],"description":"Retrieve Projects assigned to a specific Company","group":"Projects"},{"endpoint":"/projects/starred.json","method":"get","description":"Retrieve your Starred Projects","group":"Projects"},{"endpoint":"/projects/{id}/rates.json","method":"get","parameters":[{"name":"page","in":"query","description":"The page number to show","type":"integer"},{"name":"pageSize","in":"query","description":"The number of results to show per page","type":"integer"}],"description":"Get Project Rates","group":"Projects"},{"endpoint":"/projects/{id}/rates.json","method":"post","parameters":[{"name":"body","in":"body","schema":{"type":"object","properties":{"rates":{"type":"object","properties":{"users":{"type":"object","properties":{"12345":{"type":"object","properties":{"rate":{"type":"integer"}}},"12346":{"type":"object","properties":{"rate":{"type":"integer"}}}}},"project-default":{"type":"integer"}}}},"example":{"rates":{"users":{"12345":{"rate":60},"12346":{"rate":35}},"project-default":20}}}}],"description":"Set Project Rates","group":"Projects"},{"endpoint":"/projects/{id}/stats.json","method":"get","parameters":[{"name":"responsible-party-ids","in":"query","type":"string"},{"name":"onlymyprojects","in":"query","type":"boolean"},{"name":"forStarredProjects","in":"query","type":"boolean"},{"name":"onlyMyEvents","in":"query","type":"boolean"},{"name":"getPermissions","in":"query","type":"boolean"},{"name":"eventsInNext","in":"query","type":"number"}],"description":"Get Project Stats","group":"Projects"},{"endpoint":"/projects/{id}/star.json","method":"put","description":"Star a Project","group":"Projects"},{"endpoint":"/projects/{id}/unstar.json","method":"put","parameters":[{"name":"body","in":"body","schema":{"type":"object","properties":{"STATUS":{"type":"string"}},"example":{"STATUS":"OK"}}}],"description":"Un-star a Project","group":"Projects"},{"endpoint":"/projectCategories.json","method":"get","description":"Retrieving all of a Project Categories","group":"Project Categories"},{"endpoint":"/projectCategories.json","method":"post","parameters":[{"name":"body","in":"body","schema":{"type":"object","properties":{"category":{"type":"object","properties":{"name":{"type":"string"},"parent-id":{"type":"string"}}}},"example":{"category":{"name":"Demo Projects","parent-id":"0"}}}}],"description":"Creating Project Categories","group":"Project Categories"},{"endpoint":"/projectCategories/{id}.json","method":"get","description":"Retrieve a Single Project Category","group":"Project Categories"},{"endpoint":"/projectCategories/{id}.json","method":"put","parameters":[{"name":"body","in":"body","schema":{"type":"object","properties":{"category":{"type":"object","properties":{"name":{"type":"string"},"parent-id":{"type":"string"}}}},"example":{"category":{"name":"Demo Category 1","parent-id":"999"}}}}],"description":"Updating a Project Category","group":"Project Categories"},{"endpoint":"/projectCategories/{id}.json","method":"delete","description":"Deleting a Project Category","group":"Project Categories"},{"endpoint":"/projectCategories/{categoryId}/tasks.json","method":"get","description":"Retrieving Tasks associated with the Category","group":"Project Categories"},{"endpoint":"/projects/{projectId}.json","method":"put","parameters":[{"name":"body","in":"body","schema":{"type":"object","properties":{"project":{"type":"object","properties":{"projectOwnerId":{"type":"string"}}}},"example":{"project":{"projectOwnerId":"12345"}}}}],"description":"Setting a Project Owner","group":"Project Owner"},{"endpoint":"/account/siteowner.json","method":"put","parameters":[{"name":"body","in":"body","schema":{"type":"object","properties":{"userId":{"type":"string"}},"example":{"userId":"159527"}}}],"description":"Change the Site Owner","group":"Site Owner"},{"endpoint":"/milestones.json","method":"get","parameters":[{"name":"pageSize","in":"query","description":"The amount of Milestones returned can be limited using this parameter. Normally used in conjunction with the page parameter.","type":"integer"},{"name":"page","in":"query","description":"Optionally, you can set the page from which to start retrieving results. This is usually used in conjunction with the parameter pageSize. For example: ?page=2&pageSize=10 will retrieve results 10-20.","type":"integer"},{"name":"find","in":"query","description":"Find certain milestones. Options: al|,complete,incomplete,late,upcoming\n","type":"string"},{"name":"getProgress","in":"query","description":"Use this parameter to return a field percentageComplete","type":"boolean"},{"name":"projectType","in":"query","description":"use ALL to bring back milestones related to archived projects.","type":"string","default":"ACTIVE"}],"description":"List All Milestones","group":"Milestones"},{"endpoint":"/projects/{id}/milestones.json","method":"get","parameters":[{"name":"pageSize","in":"query","description":"The amount of Milestones returned can be limited using this parameter. Normally used in conjunction with the page parameter.","type":"integer"},{"name":"page","in":"query","description":"Optionally, you can set the page from which to start retrieving results. This is usually used in conjunction with the parameter pageSize. For example: ?page=2&pageSize=10 will retrieve results 10-20.","type":"integer"},{"name":"find","in":"query","description":"Find certain milestones. Options: al|,complete,incomplete,late,upcoming\n","type":"string"},{"name":"getProgress","in":"query","description":"Use this parameter to return a field percentageComplete","type":"boolean"}],"description":"List Milestones on a Project","group":"Milestones"},{"endpoint":"/projects/{id}/milestones.json","method":"post","parameters":[{"name":"body","in":"body","schema":{"type":"object","properties":{"milestone":{"type":"object","properties":{"changeFollowerIds":{"type":"string"},"description":{"type":"string"},"deadline":{"type":"string","description":"Date field for milestone due date. Passed in as string format: YYYYMMDD","example":"20211212"},"notify":{"type":"boolean"},"responsible-party-ids":{"type":"string"},"tagIds":{"type":"string"},"reminder":{"type":"boolean"},"title":{"type":"string"},"taskListIds":{"type":"array","items":{"type":"string"}},"grant-access-to":{"type":"string"},"private":{"type":"boolean"}}},"move-upcoming-milestones":{"type":"boolean"},"move-upcoming-milestones-off-weekends":{"type":"boolean"}}}}],"description":"Create a Single Milestone","group":"Milestones"},{"endpoint":"/milestones/{id}.json","method":"get","parameters":[{"name":"showTaskLists","in":"query","description":"If you pass &showTaskLists=true you can also pass &showTasks=true to include a list of tasks in each list\n","type":"boolean"},{"name":"getProgress","in":"query","description":"Use this parameter to return a field percentageComplete","type":"boolean"}],"description":"Get a Single Milestone","group":"Milestones"},{"endpoint":"/milestones/{id}.json","method":"put","parameters":[{"name":"body","in":"body","schema":{"type":"object","properties":{"milestone":{"type":"object","properties":{"changeFollowerIds":{"type":"string"},"description":{"type":"string"},"deadline":{"type":"string","description":"Milestone due date. Passed in as string format: YYYYMMDD","example":"20211212"},"notify":{"type":"boolean"},"responsible-party-ids":{"type":"string"},"tagIds":{"type":"string"},"reminder":{"type":"boolean"},"title":{"type":"string"},"taskListIds":{"type":"array","items":{"type":"string"}},"grant-access-to":{"type":"string"},"private":{"type":"boolean"}}},"move-upcoming-milestones":{"type":"boolean"},"move-upcoming-milestones-off-weekends":{"type":"boolean"}}}}],"description":"Update a Single Milestone","group":"Milestones"},{"endpoint":"/milestones/{id}.json","method":"delete","description":"Delete a Milestone","group":"Milestones"},{"endpoint":"/milestones/{id}/complete.json","method":"put","description":"Complete a Milestone","group":"Milestones"},{"endpoint":"/milestones/{id}/uncomplete.json","method":"put","description":"Un-complete a Milestone","group":"Milestones"},{"endpoint":"/tasklists.json","method":"get","parameters":[{"name":"status","in":"query","description":"string Status: You can use the status option to restrict the Task Lists returned - valid values are all, active, and completed. The default is \"active\"\n","type":"string"},{"name":"page","in":"query","type":"string"},{"name":"pageSize","in":"query","type":"string"},{"name":"showDeleted","in":"query","type":"boolean"},{"name":"includeArchivedProjects","in":"query","type":"boolean"}],"description":"Get all Task Lists","group":"Task lists"},{"endpoint":"/projects/{id}/tasklists.json","method":"get","parameters":[{"name":"responsible-party-id","in":"query","type":"string"},{"name":"getOverdueCount","in":"query","description":"Passing getOverdueCount will return the number of overdue tasks overdue-count for each task list.","type":"boolean"},{"name":"status","in":"query","description":"\nstring\nStatus: You can use the status option to restrict the Task Lists returned - valid values are all, active, and completed. The default is \"active\"","type":"string"},{"name":"showMilestones","in":"query","description":"Passing showMilestones=1 will add Milestone information in to the response, if a Milestone is attached to the Task List\n","type":"boolean"},{"name":"getCompletedCount","in":"query","type":"boolean"},{"name":"filter","in":"query","description":"anytime, today, tomorrow, overdue, yesterday","type":"string"},{"in":"query","name":"updatedAfterDate","type":"string","description":"Get all tasklists updated after a certain date.\n"},{"name":"sortby","in":"query","description":"string - orders the results by one of the following: displayOrder, name, status, dateCreatedASC, dateCreatedDESC, dateUpdatedASC, dateUpdatedDESC, projectNameASC, projectNameDESC (Default is displayOrder)","type":"string"},{"in":"query","name":"searchTerm","type":"string"},{"in":"query","name":"projectStatus","type":"string"},{"in":"query","name":"showCompleted","type":"boolean","description":"Return completed tasklists."},{"in":"query","name":"showDeleted","type":"boolean","description":"Return deleted tasklists."}],"description":"Get all Task Lists for a Project","group":"Task lists"},{"endpoint":"/projects/{id}/tasklists.json","method":"post","parameters":[{"name":"body","in":"body","schema":{"type":"object","properties":{"applyDefaultsToExistingTasks":{"type":"boolean","description":"Will over ride existing tasks in the task list with these new defaults. ","default":false},"todo-list":{"type":"object","properties":{"new-task-defaults":{"type":"object","description":"The defaults you choose will apply to the individual tasks added to the task list.","properties":{"description":{"type":"string","description":"Default description on all tasks created in this task list. "},"start-date-offset":{"type":"string","example":"1","description":"Start date - Day 1 (Today), Day 2 (Tomorrow), through to day 365."},"due-date-offset":{"type":"string","description":"Due date - Day 1 (Today), Day 2 (Tomorrow), through to day 365.","example":"10"},"responsible-party-id":{"type":"string","description":"Who should do this - choose specific person id, company id, or team id to be assigned to tasks."},"priority":{"type":"integer"},"priorityText":{"type":"string","description":"low, medium, high prority of the tasks. "},"estimated-minutes":{"type":"integer"},"tags":{"type":"array","description":"Default tags for tasks in this task list.","items":{"type":"object","properties":{"id":{"type":"integer"},"color":{"type":"string"},"name":{"type":"string"},"projectId":{"type":"integer"}}}},"column-id":{"type":"integer"},"reminders":{"type":"array","items":{"type":"object","properties":{"user-id":{"type":"integer"},"type":{"type":"string"},"note":{"type":"string"},"people-assigned":{"type":"boolean"},"isRelative":{"type":"boolean"},"relative-number-days":{"type":"integer"},"usingOffSetDueDate":{"type":"boolean"},"time":{"type":"string"}}}},"removeAllReminders":{"type":"boolean"},"comment-follower-ids":{"type":"string","description":"ids of users, teams, companies that you want to follow these tasks. "},"change-follower-ids":{"type":"string","description":"ids of users, teams, companies that you want to follow these tasks. "},"grant-access-to":{"type":"string","description":"ids of users, teams, companies that you want to have access to these tasks. Default permissions will be used if none are provided here."},"private":{"type":"boolean"},"customFields":{"type":"array","description":"array of custom fields. Use the custom field endpoint in V3 to create a custom field.","items":{"type":"object","properties":{"customFieldId":{"type":"integer"},"value":{"type":"string"}}}},"pendingFileAttachments":{"type":"array","description":"Default attachments for tasks under this task list.","items":{"type":"object"}}}}}}}},"x-examples":{"application/json":{"applyDefaultsToExistingTasks":false,"todo-list":{"new-task-defaults":{"description":"New description for all tasks under this task list. ","start-date-offset":"4","due-date-offset":"32","responsible-party-id":"232000","priority":200,"estimated-minutes":3000,"tags":[{"id":102860,"color":"#2f8de4","name":"Zaps","projectId":0}],"column-id":0,"reminders":[{"user-id":232000,"type":"EMAIL","note":"Message reminder.","people-assigned":false,"isRelative":true,"relative-number-days":0,"usingOffSetDueDate":false,"time":"09:00:00"}],"removeAllReminders":false,"comment-follower-ids":"c107942","change-follower-ids":"c107942","grant-access-to":"c107942","private":true,"customFields":[{"customFieldId":567,"value":"Custom Text"}],"pendingFileAttachments":[]}}}}}],"description":"Create Task List","group":"Task lists"},{"endpoint":"/tasklists/{id}.json","method":"get","description":"Retrieve Single Task List","group":"Task lists"},{"endpoint":"/tasklists/{id}.json","method":"put","parameters":[{"name":"body","in":"body","schema":{"type":"object","properties":{"applyDefaultsToExistingTasks":{"type":"boolean","description":"Will over ride existing tasks in the task list with these new defaults. ","default":false},"todo-list":{"type":"object","properties":{"new-task-defaults":{"type":"object","description":"The defaults you choose will apply to the individual tasks added to the task list.","properties":{"description":{"type":"string","description":"Default description on all tasks created in this task list. "},"start-date-offset":{"type":"string","example":"1","description":"Start date - Day 1 (Today), Day 2 (Tomorrow), through to day 365."},"due-date-offset":{"type":"string","description":"Due date - Day 1 (Today), Day 2 (Tomorrow), through to day 365.","example":"10"},"responsible-party-id":{"type":"string","description":"Who should do this - choose specific person id, company id, or team id to be assigned to tasks."},"priority":{"type":"integer"},"priorityText":{"type":"string","description":"low, medium, high prority of the tasks. "},"estimated-minutes":{"type":"integer"},"tags":{"type":"array","description":"Default tags for tasks in this task list.","items":{"type":"object","properties":{"id":{"type":"integer"},"color":{"type":"string"},"name":{"type":"string"},"projectId":{"type":"integer"}}}},"column-id":{"type":"integer"},"reminders":{"type":"array","items":{"type":"object","properties":{"user-id":{"type":"integer"},"type":{"type":"string"},"note":{"type":"string"},"people-assigned":{"type":"boolean"},"isRelative":{"type":"boolean"},"relative-number-days":{"type":"integer"},"usingOffSetDueDate":{"type":"boolean"},"time":{"type":"string"}}}},"removeAllReminders":{"type":"boolean"},"comment-follower-ids":{"type":"string","description":"ids of users, teams, companies that you want to follow these tasks. "},"change-follower-ids":{"type":"string","description":"ids of users, teams, companies that you want to follow these tasks. "},"grant-access-to":{"type":"string","description":"ids of users, teams, companies that you want to have access to these tasks. Default permissions will be used if none are provided here."},"private":{"type":"boolean"},"customFields":{"type":"array","description":"array of custom fields. Use the custom field endpoint in V3 to create a custom field.","items":{"type":"object","properties":{"customFieldId":{"type":"integer"},"value":{"type":"string"}}}},"pendingFileAttachments":{"type":"array","description":"Default attachments for tasks under this task list.","items":{"type":"object"}}}}}}}},"x-examples":{"application/json":{"applyDefaultsToExistingTasks":false,"todo-list":{"new-task-defaults":{"description":"New description for all tasks under this task list. ","start-date-offset":"4","due-date-offset":"32","responsible-party-id":"232000","priority":200,"estimated-minutes":3000,"tags":[{"id":102860,"color":"#2f8de4","name":"Zaps","projectId":0}],"column-id":0,"reminders":[{"user-id":232000,"type":"EMAIL","note":"Message reminder.","people-assigned":false,"isRelative":true,"relative-number-days":0,"usingOffSetDueDate":false,"time":"09:00:00"}],"removeAllReminders":false,"comment-follower-ids":"c107942","change-follower-ids":"c107942","grant-access-to":"c107942","private":true,"customFields":[{"customFieldId":567,"value":"Custom Text"}],"pendingFileAttachments":[]}}}}}],"description":"Update Task List","group":"Task lists"},{"endpoint":"/tasklists/{id}.json","method":"delete","description":"Delete a Task List","group":"Task lists"},{"endpoint":"/tasklists/templates.json","method":"get","description":"Template Task Lists: get all template task lists","group":"Task lists"},{"endpoint":"/projects/{id}/tasklists/reorder.json","method":"put","parameters":[{"name":"body","in":"body","schema":{"type":"object","properties":{"todo-lists":{"type":"array","items":{"type":"object","properties":{"todo-list":{"type":"object","properties":{"id":{"type":"string"}}}}}}},"example":{"todo-lists":[{"todo-list":{"id":"1000"}},{"todo-list":{"id":"999"}}]}}}],"description":"Reorder Lists","group":"Task lists"},{"endpoint":"/tasklist/{id}/copy.json","method":"put","parameters":[{"name":"body","in":"body","schema":{"type":"object","properties":{"projectId":{"type":"integer"},"includeCompletedTasks":{"type":"integer"}},"example":{"projectId":999,"includeCompletedTasks":1}}}],"description":"Copy a Task List, or Copy a Task List to another Project","group":"Task lists"},{"endpoint":"/tasklist/{id}/move.json","method":"put","parameters":[{"name":"body","in":"body","schema":{"type":"object","properties":{"projectId":{"type":"string"}},"required":["projectId"],"example":{"projectId":"999"}}}],"description":"Move a Task List to another Project","group":"Task lists"},{"endpoint":"/tasks.json","method":"get","parameters":[{"name":"filter","in":"query","description":"Tasks can be filtered by due dates using the following options: all anytime overdue today tomorrow thisweek within7 within14 within30 within365 nodate nostartdate completed Additionally, you can choose to include the start dates in this critera by setting ignore-start-dates to false.","type":"string"},{"name":"page","in":"query","description":"Optionally, you can set the page from which to start retrieving results. This is usually used in conjunction with the parameter pageSize. For example: ?page=2&pageSize=10 will retrieve results 10-20.","type":"integer"},{"name":"pageSize","in":"query","description":"The amount of tasks returned can be limited using this parameter. Normally used in conjunction with the page parameter.","type":"integer"},{"name":"startDate","in":"query","description":"Tasks within a range of dates can be returned by setting a startdate and enddate. The format should be YYYYMMDD. For example: ?startdate=20140512&enddate=20140513 will get all of the tasks from the 12th of May 2014 till the 13th of May 2014. \n\nBy default ignore-start-dates=false and that means we list:\n\n- tasks started before or on specified startDate AND due before/on specified endDate\n- OR no start date but due date between specified dates\n- OR no duedate set but startdate has passed/is specified startDate\n- OR milestone due date set and its between specified dates","type":"string"},{"name":"endDate","in":"query","description":"Must be used in conjunction with startdate, see above.","type":"string"},{"name":"updatedAfterDate","in":"query","description":"Will only return tasks that have been updated after a specified date. This parameter will limit the response to return changes that happened within the last 6 months if the dataset is too large. Timestamp must be in the following format: YYYYMMDDHHMMSS. For example: ?updatedAfterDate=20191123201022 will only return tasks updated after 23rd of November 2019 at 20:10:22. It will limit this response to changes that occured in the last 6 months if data returned is too large.\n","type":"string"},{"name":"completedAfterDate","in":"query","description":"Will only return tasks that have been completed after a specified date. Timestamp must be in the following format: YYYYMMDDHHMMSS For example: ?completedAfterDate=20141123201022 will only return tasks completed after 23rd of November 2014 at 20:10:22. (UTC)","type":"string"},{"name":"completedBeforeDate","in":"query","description":"Will only return tasks that have been completed before a specified date. Timestamp must be in the following format: YYYYMMDDHHMMSS For example: ?completedBeforeDate=20150101235959 will only return tasks completed before 1st January 2015 at 23:59:59. (UTC)","type":"string"},{"name":"showDeleted","in":"query","description":"Tasks that have been deleted can be shown by setting this parameter to yes.","type":"string"},{"name":"includeCompletedTasks","in":"query","description":"Tasks that have been marked as completed can be shown by setting this parameter to true.","type":"boolean"},{"name":"includeCompletedSubtasks","in":"query","description":"Sub-tasks that have been marked as completed can be shown by setting this parameter to true if you have requested to include sub-tasks","type":"boolean"},{"name":"creator-ids","in":"query","description":"For requesting tasks made by a specific person or people. For example: 44 would return tasks made by user 44. 44,45 would return tasks made by users 44 and/or 45 etc.","type":"string"},{"name":"include","in":"query","description":"Extra tasks that can be included with the filter option. nodate nostartdate noduedate overdue","type":"string"},{"name":"responsible-party-ids","in":"query","description":"Tasks can be filtered by the person/people a task is assigned to. For example: -1 would return all tasks with an assigned person. 0 would return all tasks with no assignment. 32 would return tasks assigned to user 32. 32,55 would return tasks assigned to users 32 and/or 55 etc.","type":"string"},{"name":"sort","in":"query","description":"Tasks can be sorted by the following options: 'duedate', duedateDESC', 'startdate', 'dateadded', 'priority', 'project' ,'manual', 'duestartdate', 'duestartdatedesc', 'alldates', 'alldatesdesc', 'completedDateDESC', 'flattenedtasklist', 'company' or 'dateupdated'\". \n","type":"string"},{"name":"getSubTasks","in":"query","description":"Subtasks can be excluded from the results by adding this parameter with no as the value.","type":"string"},{"name":"nestSubTasks","in":"query","description":"Subtasks can be nested within the parent task object by adding this parameter with yes as the value.","type":"string"},{"name":"getFiles","in":"query","description":"Files attached to tasks can be returned within the task object by setting this parameter to true.","type":"boolean"},{"name":"includeToday","in":"query","description":"When using the filter option with any of the following options; within7,within14,within30,within365. You can choose to exclude deadlines for today by passing this parameter as false.\n","type":"boolean"},{"name":"ignore-start-dates","in":"query","description":"When using the filter option, you can choose to include start dates matching the filtering critera by passing this parameter as true. By default, only due dates are checked against the filter.","type":"boolean"},{"name":"tag-ids","in":"query","description":"A comma separated list of tag ids to filter tasks on","type":"string"},{"name":"includeTasksWithoutDueDates","in":"query","description":"Allows you to get back tasks with no due date if set to false.","type":"boolean","default":true},{"name":"includeTasksFromDeletedLists","in":"query","description":"Retrieve tasks from deleted task lists.","type":"boolean"},{"name":"includeArchivedProjects","in":"query","type":"boolean"},{"name":"dateupdatedASC","in":"query","description":"Tasks can be sorted by the following options: 'duedate', duedateDESC', 'startdate', 'dateadded', 'priority', 'project' ,'manual', 'duestartdate', 'duestartdatedesc', 'alldates', 'alldatesdesc', 'completedDateDESC', 'flattenedtasklist', 'company' or 'dateupdated'\".","type":"string"},{"in":"query","name":"projectIds","type":"string","description":"Use this to get back all tasks in a subset of projects. ","default":"projectIds=\"3444475, 345345\""},{"in":"query","name":"includeCompletedPredecessors","type":"boolean"},{"in":"query","name":"includeLoggedTime","type":"boolean"},{"in":"query","name":"includeReminders","type":"boolean"},{"in":"query","name":"includeTaskId","type":"boolean"},{"in":"query","name":"includeUntaggedTasks","type":"boolean"}],"description":"Get all Tasks across all Projects","group":"Tasks"},{"endpoint":"/projects/{id}/tasks.json","method":"get","parameters":[{"name":"filter","in":"query","description":"Tasks can be filtered by due dates using the following options: all anytime overdue today tomorrow thisweek within7 within14 within30 within365 nodate nostartdate completed Additionally, you can choose to include the start dates in this critera by setting ignore-start-dates to false.","type":"string"},{"name":"page","in":"query","description":"Optionally, you can set the page from which to start retrieving results. This is usually used in conjunction with the parameter pageSize. For example: ?page=2&pageSize=10 will retrieve results 10-20.","type":"integer"},{"name":"pageSize","in":"query","description":"The amount of tasks returned can be limited using this parameter. Normally used in conjunction with the page parameter.","type":"integer"},{"name":"startDate","in":"query","description":"Tasks within a range of dates can be returned by setting a startdate and enddate. The format should be YYYYMMDD. For example: ?startdate=20140512&enddate=20140513 will get all of the tasks from the 12th of May 2014 till the 13th of May 2014.\n\nBy default ignore-start-dates=false and that means we list:\n\n- tasks started before or on specified startDate AND due before/on specified endDate\n- OR no start date but due date between specified dates\n- OR no duedate set but startdate has passed/is specified startDate\n- OR milestone due date set and its between specified dates","type":"string"},{"name":"endDate","in":"query","description":"Must be used in conjunction with startdate, see above.","type":"string"},{"name":"updatedAfterDate","in":"query","description":"Will only return tasks that have been updated after a specified date. Timestamp must be in the following format: YYYYMMDDHHMMSS. For example: ?updatedAfterDate=20131123201022 will only return tasks updated after 23rd of November 2013 at 20:10:22. (UTC)","type":"string"},{"name":"completedAfterDate","in":"query","description":"Will only return tasks that have been completed after a specified date. Timestamp must be in the following format: YYYYMMDDHHMMSS For example: ?completedAfterDate=20141123201022 will only return tasks completed after 23rd of November 2014 at 20:10:22. (UTC)","type":"string"},{"name":"completedBeforeDate","in":"query","description":"Will only return tasks that have been completed before a specified date. Timestamp must be in the following format: YYYYMMDDHHMMSS For example: ?completedBeforeDate=20150101235959 will only return tasks completed before 1st January 2015 at 23:59:59. (UTC)","type":"string"},{"name":"showDeleted","in":"query","description":"Tasks that have been deleted can be shown by setting this parameter to yes.","type":"string"},{"name":"includeCompletedTasks","in":"query","description":"Tasks that have been marked as completed can be shown by setting this parameter to true.","type":"boolean"},{"name":"includeCompletedSubtasks","in":"query","description":"Sub-tasks that have been marked as completed can be shown by setting this parameter to true if you have requested to include sub-tasks","type":"boolean"},{"name":"creator-ids","in":"query","description":"For requesting tasks made by a specific person or people. For example: 44 would return tasks made by user 44. 44,45 would return tasks made by users 44 and/or 45 etc.","type":"string"},{"name":"include","in":"query","description":"Extra tasks that can be included with the filter option. nodate nostartdate noduedate overdue","type":"string"},{"name":"responsible-party-ids","in":"query","description":"Tasks can be filtered by the person/people a task is assigned to. For example: -1 would return all tasks with an assigned person. 0 would return all tasks with no assignment. 32 would return tasks assigned to user 32. 32,55 would return tasks assigned to users 32 and/or 55 etc.","type":"string"},{"name":"sort","in":"query","description":"Tasks can be sorted by the following options: 'duedate', duedateDESC', 'startdate', 'dateadded', 'priority', 'project' ,'manual', 'duestartdate', 'duestartdatedesc', 'alldates', 'alldatesdesc', 'completedDateDESC', 'flattenedtasklist', 'company' or 'dateupdated'\". ","type":"string"},{"name":"getSubTasks","in":"query","description":"Subtasks can be excluded from the results by adding this parameter with no as the value.","type":"string"},{"name":"nestSubTasks","in":"query","description":"no Subtasks can be nested within the parent task object by adding this paramter with yes as the value.","type":"string"},{"name":"getFiles","in":"query","description":"Files attached to tasks can be returned within the task object by setting this parameter to true.","type":"boolean"},{"name":"includeToday","in":"query","description":"When using the filter option with any of the following options; within7,within14,within30,within365. You can choose to exclude deadlines for today by passing this parameter as false.\n","type":"boolean"},{"name":"ignore-start-dates","in":"query","description":"When using the filter option, you can choose to include start dates matching the filtering critera by passing this parameter as true. By default, only due dates are checked against the filter.","type":"boolean"},{"name":"tag-ids","in":"query","description":"A comma separated list of tag ids to filter tasks on","type":"string"},{"name":"dateupdatedASC","in":"query","description":"Tasks can be sorted by the following options: 'duedate', duedateDESC', 'startdate', 'dateadded', 'priority', 'project' ,'manual', 'duestartdate', 'duestartdatedesc', 'alldates', 'alldatesdesc', 'completedDateDESC', 'flattenedtasklist', 'company' or 'dateupdated'\".\n","type":"string"}],"description":"Get all Tasks on a given Project","group":"Tasks"},{"endpoint":"/tasklists/{id}/tasks.json","method":"get","parameters":[{"name":"filter","in":"query","description":"Tasks can be filtered by due dates using the following options: all anytime overdue today tomorrow thisweek within7 within14 within30 within365 nodate nostartdate completed Additionally, you can choose to include the start dates in this critera by setting ignore-start-dates to false.","type":"string"},{"name":"page","in":"query","description":"Optionally, you can set the page from which to start retrieving results. This is usually used in conjunction with the parameter pageSize. For example: ?page=2&pageSize=10 will retrieve results 10-20.","type":"integer"},{"name":"pageSize","in":"query","description":"The amount of tasks returned can be limited using this parameter. Normally used in conjunction with the page parameter.","type":"integer"},{"name":"startDate","in":"query","description":"Tasks within a range of dates can be returned by setting a startdate and enddate. The format should be YYYYMMDD. For example: ?startdate=20140512&enddate=20140513 will get all of the tasks from the 12th of May 2014 till the 13th of May 2014.\n\nBy default ignore-start-dates=false and that means we list:\n\n- tasks started before or on specified startDate AND due before/on specified endDate\n- OR no start date but due date between specified dates\n- OR no duedate set but startdate has passed/is specified startDate\n- OR milestone due date set and its between specified dates","type":"string"},{"name":"endDate","in":"query","description":"Must be used in conjunction with startdate, see above.","type":"string"},{"name":"updatedAfterDate","in":"query","description":"Will only return tasks that have been updated after a specified date. Timestamp must be in the following format: YYYYMMDDHHMMSS. For example: ?updatedAfterDate=20131123201022 will only return tasks updated after 23rd of November 2013 at 20:10:22. (UTC)","type":"string"},{"name":"completedAfterDate","in":"query","description":"Will only return tasks that have been completed after a specified date. Timestamp must be in the following format: YYYYMMDDHHMMSS For example: ?completedAfterDate=20141123201022 will only return tasks completed after 23rd of November 2014 at 20:10:22. (UTC)","type":"string"},{"name":"completedBeforeDate","in":"query","description":"Will only return tasks that have been completed before a specified date. Timestamp must be in the following format: YYYYMMDDHHMMSS For example: ?completedBeforeDate=20150101235959 will only return tasks completed before 1st January 2015 at 23:59:59. (UTC)","type":"string"},{"name":"showDeleted","in":"query","description":"Tasks that have been deleted can be shown by setting this parameter to yes.","type":"string"},{"name":"includeCompletedTasks","in":"query","description":"Tasks that have been marked as completed can be shown by setting this parameter to true.","type":"boolean"},{"name":"includeCompletedSubtasks","in":"query","description":"Sub-tasks that have been marked as completed can be shown by setting this parameter to true if you have requested to include sub-tasks","type":"boolean"},{"name":"creator-ids","in":"query","description":"For requesting tasks made by a specific person or people. For example: 44 would return tasks made by user 44. 44,45 would return tasks made by users 44 and/or 45 etc.","type":"string"},{"name":"include","in":"query","description":"Extra tasks that can be included with the filter option. nodate nostartdate noduedate overdue","type":"string"},{"name":"responsible-party-ids","in":"query","description":"Tasks can be filtered by the person/people a task is assigned to. For example: -1 would return all tasks with an assigned person. 0 would return all tasks with no assignment. 32 would return tasks assigned to user 32. 32,55 would return tasks assigned to users 32 and/or 55 etc.","type":"string"},{"name":"sort","in":"query","description":"Tasks can be sorted by the following options: 'duedate', duedateDESC', 'startdate', 'dateadded', 'priority', 'project' ,'manual', 'duestartdate', 'duestartdatedesc', 'alldates', 'alldatesdesc', 'completedDateDESC', 'flattenedtasklist', 'company' or 'dateupdated'\". ","type":"string"},{"name":"getSubTasks","in":"query","description":"Subtasks can be excluded from the results by adding this parameter with no as the value.","type":"string"},{"name":"nestSubTasks","in":"query","description":"no Subtasks can be nested within the parent task object by adding this paramter with yes as the value.","type":"string"},{"name":"getFiles","in":"query","description":"Files attached to tasks can be returned within the task object by setting this parameter to true.","type":"boolean"},{"name":"includeToday","in":"query","description":"When using the filter option with any of the following options; within7,within14,within30,within365. You can choose to exclude deadlines for today by passing this parameter as false.\n","type":"boolean"},{"name":"ignore-start-dates","in":"query","description":"When using the filter option, you can choose to include start dates matching the filtering critera by passing this parameter as true. By default, only due dates are checked against the filter.","type":"boolean"},{"name":"tag-ids","in":"query","description":"A comma separated list of tag ids to filter tasks on","type":"string"},{"name":"dateupdatedASC","in":"query","description":"Tasks can be sorted by the following options: 'duedate', duedateDESC', 'startdate', 'dateadded', 'priority', 'project' ,'manual', 'duestartdate', 'duestartdatedesc', 'alldates', 'alldatesdesc', 'completedDateDESC', 'flattenedtasklist', 'company' or 'dateupdated'\".\n","type":"string"}],"description":"Get all Tasks on a given Task List","group":"Tasks"},{"endpoint":"/tasklists/{id}/tasks.json","method":"post","parameters":[{"name":"body","in":"body","schema":{"type":"object","properties":{"todo-item":{"type":"object","properties":{"use-defaults":{"type":"boolean"},"completed":{"type":"boolean"},"content":{"type":"string"},"tasklistId":{"type":"integer"},"creator-id":{"type":"integer"},"notify":{"type":"boolean"},"responsible-party-id":{"type":"string"},"start-date":{"type":"string"},"due-date":{"type":"string"},"description":{"type":"string"},"priority":{"type":"string"},"progress":{"type":"integer"},"parentTaskId":{"type":"integer"},"tagIds":{"type":"string"},"everyone-must-do":{"type":"boolean"},"predecessors":{"type":"array","items":{"type":"object","properties":{"id":{"type":"integer"},"name":{"type":"string"},"type":{"type":"string"},"status":{"type":"string"},"parentTaskId":{"type":"integer"}}}},"reminders":{"type":"array","items":{"type":"object","properties":{"user-id":{"type":"integer"},"date-time-utc":{"type":"string"},"type":{"type":"string"},"note":{"type":"string"},"people-assigned":{"type":"boolean"},"isRelative":{"type":"boolean"},"relative-number-days":{"type":"integer"},"usingOffSetDueDate":{"type":"boolean"}}}},"columnId":{"type":"integer"},"commentFollowerIds":{"type":"string"},"changeFollowerIds":{"type":"string"},"grant-access-to":{"type":"string"},"private":{"type":"boolean"},"customFields":{"type":"array","items":{"type":"object","properties":{"customFieldId":{"type":"integer"},"value":{"type":"string"}}}},"estimated-minutes":{"type":"integer"},"pendingFileAttachments":{"type":"array","items":{"type":"object"}},"updateFiles":{"type":"boolean"},"attachments":{"type":"string"},"removeOtherFiles":{"type":"boolean"},"attachmentsCategoryIds":{"type":"string"},"pendingFileAttachmentsCategoryIds":{"type":"string"},"repeatOptions":{"type":"object","properties":{"selecteddays":{"type":"string"},"repeatEndDate":{"type":"string"},"repeatsFreq":{"type":"string"},"monthlyRepeatType":{"type":"string"}}}}}}},"x-examples":{"application/json":{"todo-item":{"use-defaults":false,"completed":false,"content":"Check landing page design","tasklistId":123,"creator-id":0,"notify":false,"responsible-party-id":"0","start-date":"20210811","due-date":"20210818","description":"Task description","priority":"medium","progress":10,"parentTaskId":0,"tagIds":"1,2","everyone-must-do":false,"predecessors":[{"id":1,"name":"Fix  banner","type":"start","status":"new","parentTaskId":0}],"reminders":[{"user-id":1,"date-time-utc":"2021-08-17T08:00:00Z","type":"EMAIL","note":"This is the message of the reminder.","people-assigned":false,"isRelative":true,"relative-number-days":1,"usingOffSetDueDate":false}],"columnId":0,"commentFollowerIds":"3","changeFollowerIds":"3","grant-access-to":"4","private":true,"customFields":[{"customFieldId":3,"value":"Project ID Jira"}],"estimated-minutes":150,"pendingFileAttachments":[],"updateFiles":true,"attachments":"","removeOtherFiles":true,"attachmentsCategoryIds":"","pendingFileAttachmentsCategoryIds":"","repeatOptions":{"selecteddays":"","repeatEndDate":"noEndDate","repeatsFreq":"norepeat","monthlyRepeatType":"monthDay"}}}}}],"description":"Create a Task","group":"Tasks"},{"endpoint":"/tasks/{id}.json","method":"get","parameters":[{"name":"getFiles","in":"query","description":"Files attached to tasks can be returned within the task object by setting this parameter to true.","type":"boolean"},{"name":"nestSubTasks","in":"query","description":"Sub tasks can be nested within each returned task object by setting this parameter to true.","type":"boolean"},{"name":"includeCompletedSubtasks","in":"query","description":"Used in conjunction with nestSubTasks, this parameter can be used to include completed subtasks by setting it to true.","type":"boolean"}],"description":"Retrieve a Task","group":"Tasks"},{"endpoint":"/tasks/{id}.json","method":"post","parameters":[{"name":"body","in":"body","schema":{"type":"object","properties":{"todo-item":{"type":"object","properties":{"content":{"type":"string","description":"The name of the task you are adding."},"notify":{"type":"boolean","description":"This parameter can be set to true to notify people assigned to this task by email."},"description":{"type":"string","description":"Tasks can be assigned a description."},"due-date":{"type":"string","description":"Tasks can be assigned a date for when they are due to be finished. The format should be YYYYMMDD."},"start-date":{"type":"string","description":"Tasks can be assigned a date to start on. The format should be YYYYMMDD."},"estimated-minutes":{"type":"string","description":"Set an estimated number of minutes for a task to be completed by setting this parameter."},"private":{"type":"integer","description":"Set to 1 to make the task Private. Setting a 0 will set the Task back to normal"},"grant-access-to":{"type":"string","description":"Used in relation to private. If you set a Task as private (1), you can optionally add one or more User IDs to make the task visible to"},"priority":{"type":"string","description":"Tasks can be assigned the following priorities:\n- not set\n- low\n- medium\n- high"},"progress":{"type":"string","description":"Set the progress from 0 to 90"},"attachments":{"type":"array","description":"Existing files can be attached to the task by specifying a comma-separated list of File IDs.","items":{"type":"object","properties":{"":{"type":"string"}}}},"pendingFileAttachments":{"type":"string","description":"New files can be attached using this option (see the uploading files section for more info). This is a comma-separated list of PendingFileRef's."},"responsible-party-id":{"type":"integer","description":"This can be used to assign the new task to a person or group of people.\nFor example:\n-1 would assign the task to everyone\n32 would assign the task to user 32.\n32,55 would assign the task to users 32 and 55 etc."},"predecessors":{"type":"array","description":"An array of predecessor objects can be passed to specify which tasks need to have a specified state before this task can be marked as completed.\nEach predecessor object should contain two keys:\nid: The ID of the task that predecesses this one.\ntype: The state the task needs to be, can be \"complete\" or \"start\".","items":{"type":"object","properties":{"id":{"type":"integer"},"type":{"type":"string"}}}},"tags":{"type":"string","description":"A comma separated list of tags for the task"},"commentFollowerIds":{"type":"string","description":"id's of people which will be followers if someone creates a comment. Comment id means if notify=true they will get notified if any comments are created on that task."},"changeFollowerIds":{"type":"string","description":"id's of people which will be followers. Change id means if notify=true they will get notified if any changes occur on that task."},"positionAfterTask":{"type":"integer","description":"A task can be placed after another task by setting this parameter to a task ID.\nAdditionally, some other options are available:\n-2 - Ignore\n-1 - Place task at the top of the list\n0 - Place task at the bottom of the list"},"columnId":{"type":"string","description":"Used to put a new Task directly in to a Column in the Boards view"},"parentTaskId":{"type":"string","description":"Set this to the ID of a parent task if you wish to make your task a subtask."}},"required":["content"]}},"example":{"todo-item":{"content":"Test Task","notify":false,"description":"Test Task Sub Item","due-date":"20190405","start-date":"20190402","estimated-minutes":"0","private":0,"grant-access-to":"","priority":"low","progress":"20","attachments":[],"pendingFileAttachments":"","responsible-party-id":0,"predecessors":[{"id":439492,"type":"complete"}],"tags":"api,documentation","commentFollowerIds":"","changeFollowerIds":"","positionAfterTask":-1}}}}],"description":"Create a Sub Task","group":"Tasks"},{"endpoint":"/tasks/{id}.json","method":"put","parameters":[{"name":"body","in":"body","schema":{"type":"object","properties":{"todo-item":{"type":"object","properties":{"use-defaults":{"type":"boolean"},"completed":{"type":"boolean"},"content":{"type":"string"},"tasklistId":{"type":"integer"},"creator-id":{"type":"integer"},"notify":{"type":"boolean"},"responsible-party-id":{"type":"string"},"start-date":{"type":"string","description":"Passed in string format: YYYYMMDD","example":"20210908"},"due-date":{"type":"string","description":"Passed in string format: YYYYMMDD","example":"20211212"},"description":{"type":"string"},"priority":{"type":"string"},"progress":{"type":"integer"},"parentTaskId":{"type":"integer"},"tagIds":{"type":"string"},"everyone-must-do":{"type":"boolean"},"predecessors":{"type":"array","items":{"type":"object"}},"reminders":{"type":"null"},"columnId":{"type":"integer"},"commentFollowerIds":{"type":"string"},"changeFollowerIds":{"type":"string"},"grant-access-to":{"type":"string"},"private":{"type":"boolean"},"customFields":{"type":"array","items":{"type":"object","properties":{"customFieldId":{"type":"integer"},"value":{"type":"string"}}}},"estimated-minutes":{"type":"integer"},"pendingFileAttachments":{"type":"array","items":{"type":"object"}},"updateFiles":{"type":"boolean"},"attachments":{"type":"string"},"removeOtherFiles":{"type":"boolean"},"attachmentsCategoryIds":{"type":"string"},"pendingFileAttachmentsCategoryIds":{"type":"string"},"repeatOptions":{"type":"object","properties":{"selecteddays":{"type":"string"},"editRecurringOption":{"type":"string"},"repeatEndDate":{"type":"string"},"repeatsFreq":{"type":"string"},"monthlyRepeatType":{"type":"string"}}}}}}},"x-examples":{"application/json":{"todo-item":{"use-defaults":true,"completed":false,"content":"ipsu","tasklistId":-78825115,"creator-id":73590135,"notify":true,"responsible-party-id":"labore","start-date":"cillum sunt","due-date":"qui laboris ut fugiat Duis","description":"non","priority":"nostrud qui in ex do","progress":96289998,"parentTaskId":-59949932,"tagIds":"nisi nostrud incididunt","everyone-must-do":true,"predecessors":[{},{},{},{},{}],"reminders":null,"columnId":-14401228,"commentFollowerIds":"in sint","changeFollowerIds":"voluptate ad ullamco ut deserunt","grant-access-to":"qui anim ut incididunt sed","private":true,"customFields":[{"customFieldId":20748360,"value":"amet ad"},{"customFieldId":-591999,"value":"commodo aute nostrud"},{"customFieldId":-69953782,"value":"dolor magna"}],"estimated-minutes":78331337,"pendingFileAttachments":[{},{},{},{},{}],"updateFiles":true,"attachments":"sed dolor Ut","removeOtherFiles":false,"attachmentsCategoryIds":"consequat in commodo qui Ut","pendingFileAttachmentsCategoryIds":"in non cupidatat","repeatOptions":{"selecteddays":"dolore exercitation adipis","editRecurringOption":"proident","repeatEndDate":"aute ad voluptate do proident","repeatsFreq":"ex nostrud aute aliqua","monthlyRepeatType":"qui"}}}}}],"description":"Update a Task","group":"Tasks"},{"endpoint":"/tasks/{id}.json","method":"delete","parameters":[{"name":"body","in":"body","schema":{"type":"object","properties":{"STATUS":{"type":"string"}},"example":{"STATUS":"OK"}}}],"description":"Delete a Task","group":"Tasks"},{"endpoint":"/tasks/{id}/dependencies.json","method":"get","description":"Retrieve Task Dependencies","group":"Tasks"},{"endpoint":"/completedtasks.json","method":"get","parameters":[{"name":"page","in":"query","description":"Optionally, you can set the page from which to start retrieving results. This is usually used in conjunction with the parameter pageSize. For example: ?page=2&pageSize=10 will retrieve results 10-20.","type":"integer"},{"name":"pageSize","in":"query","description":"The amount of tasks returned can be limited using this parameter. Normally used in conjunction with the page parameter.","type":"integer"},{"name":"startdate","in":"query","description":"Tasks within a range of dates can be returned by setting a startdate and enddate. The format should be YYYYMMDD. For example: ?startdate=20140512&enddate=20140513 will get all of the tasks from the 12th of May 2014 till the 13th of May 2014.","type":"string"},{"name":"enddate","in":"query","description":"Must be used in conjunction with startdate, see above.","type":"string"},{"name":"includeArchivedProjects","in":"query","description":"Set to true or false to include archived Projects in the response","type":"boolean"}],"description":"Get completed Tasks","group":"Tasks"},{"endpoint":"/tasks/{id}/followers.json","method":"get","parameters":[{"name":"returnUserInfo","in":"query","description":"Optionally, you can pass a returnUserInfo=true paramter to expand on the user information.","type":"boolean"}],"description":"Get Task Followers","group":"Tasks"},{"endpoint":"/tasks/{id}/predecessors.json","method":"get","description":"Get Task Predecessors","group":"Tasks"},{"endpoint":"/tasks/{parentTaskId}/subtasks.json","method":"get","description":"Get Sub Tasks of a Task","group":"Tasks"},{"endpoint":"/tasks/{taskId}/recurring.json","method":"get","parameters":[{"name":"onlyFutureDates","in":"query","type":"boolean"}],"description":"Get Recurring Tasks related to original Task.","group":"Tasks"},{"endpoint":"/projects/{projectId}/tasks.json","method":"post","parameters":[{"name":"body","in":"body","schema":{"type":"object","properties":{"todo-item":{"type":"object","properties":{"use-defaults":{"type":"boolean"},"completed":{"type":"boolean"},"content":{"type":"string","description":"The name of the task you are adding."},"tasklistId":{"type":"integer"},"creator-id":{"type":"integer"},"notify":{"type":"boolean","description":"This parameter can be set to true to notify people assigned to this task by email."},"responsible-party-id":{"type":"string","description":"ID of the person or team responsible for completing the task."},"start-date":{"type":"string","description":"Passed in as string format: YYYYMMDD","example":"20201210"},"due-date":{"type":"string","description":"Passed in as string format: YYYYMMDD","example":"20201215"},"description":{"type":"string"},"priority":{"type":"string"},"progress":{"type":"integer","description":"Set an estimated percentage of task completion by setting this parameter."},"parentTaskId":{"type":"integer"},"tagIds":{"type":"string","description":"A comma separated list of tags for the task","example":"12, 12423, 123214"},"everyone-must-do":{"type":"boolean"},"predecessors":{"type":"array","items":{"type":"object"}},"reminders":{"type":"null"},"columnId":{"type":"integer"},"commentFollowerIds":{"type":"string"},"changeFollowerIds":{"type":"string"},"grant-access-to":{"type":"string","description":"Used in relation to private. If you set a Task as private (1), you can optionally add one or more User IDs to make the task visible to"},"private":{"type":"boolean","description":"Set to 1 to make the task Private. Setting a 0 will set the Task back to normal"},"customFields":{"type":"array","description":"Custom field passed in using \"customFields\" array. Inside this array you pass the id of the field you want to add, along with it's value. ","items":{"type":"object","properties":{"customFieldId":{"type":"integer"},"value":{"type":"string"}}}},"estimated-minutes":{"type":"integer","description":"Set an estimated number of minutes for a task to be completed by setting this parameter."},"pendingFileAttachments":{"type":"array","items":{"type":"object"}},"updateFiles":{"type":"boolean"},"attachments":{"type":"string"},"removeOtherFiles":{"type":"boolean"},"attachmentsCategoryIds":{"type":"string"},"pendingFileAttachmentsCategoryIds":{"type":"string"},"repeatOptions":{"type":"object","properties":{"selecteddays":{"type":"string"},"editRecurringOption":{"type":"string"},"repeatEndDate":{"type":"string"},"repeatsFreq":{"type":"string"},"monthlyRepeatType":{"type":"string"}}}}}}}}],"description":"Create a Task on a Project","group":"Tasks"},{"endpoint":"/tasks/{id}/quickadd.json","method":"post","parameters":[{"name":"body","in":"body","schema":{"type":"object","example":{"content":"this is task one\n this is task two\nthis is task three","tasklistId":1,"creator-id":123,"notify":false,"private":false,"todo-item":{"responsible-party-id":"0","start-date":"","due-date":"","priority":"","description":""}},"properties":{"content":{"type":"string"},"tasklistId":{"type":"integer"},"creator-id":{"type":"integer"},"notify":{"type":"boolean"},"private":{"type":"boolean"},"todo-item":{"type":"object","properties":{"responsible-party-id":{"type":"string"},"start-date":{"type":"string","description":"String format: YYYMMDD","example":"20211212"},"due-date":{"type":"string","description":"String format: YYYYMMDD","example":"20210212"},"priority":{"type":"string"},"description":{"type":"string"}}}}}}],"description":"Quickly add multiple Sub Tasks","group":"Tasks"},{"endpoint":"/projects/{projectId}/tasks/quickadd.json","method":"post","parameters":[{"name":"body","in":"body","schema":{"type":"object","example":{"content":"this is task one\n this is task two\nthis is task three","tasklistId":1,"creator-id":123,"notify":false,"private":false,"todo-item":{"responsible-party-id":"0","start-date":"","due-date":"","priority":"","description":""}},"properties":{"content":{"type":"string"},"tasklistId":{"type":"integer"},"creator-id":{"type":"integer"},"notify":{"type":"boolean"},"private":{"type":"boolean"},"todo-item":{"type":"object","properties":{"responsible-party-id":{"type":"string"},"start-date":{"type":"string","description":"String format: YYYMMDD"},"due-date":{"type":"string"},"priority":{"type":"string"},"description":{"type":"string"}}}},"required":["content"]}}],"description":"Quickly add multiple Tasks","group":"Tasks"},{"endpoint":"/tasks/{id}/complete.json","method":"put","description":"Mark a Task complete","group":"Tasks"},{"endpoint":"/tasks/{id}/uncomplete.json","method":"put","description":"Mark a Task uncomplete","group":"Tasks"},{"endpoint":"/tasklists/{id}/tasks/reorder.json","method":"put","parameters":[{"name":"body","in":"body","schema":{"type":"object","properties":{"todo-items":{"type":"array","items":{"type":"object","properties":{"todo-item":{"type":"object","properties":{"id":{"type":"string"}}}}}}},"example":{"todo-items":[{"todo-item":{"id":"1000"}},{"todo-item":{"id":"999"}}]}}}],"description":"Reorder the Tasks","group":"Tasks"},{"endpoint":"/tasks/{taskId}.json","method":"put","parameters":[{"name":"body","in":"body","schema":{"type":"object","properties":{"todo-item":{"type":"object","properties":{"predecessors":{"type":"array","items":{"type":"object","properties":{"id":{"type":"integer"},"type":{"type":"string"}}}}}}},"example":{"todo-item":{"predecessors":[{"id":439492,"type":"complete"}]}}}}],"description":"Editing Task Predecessors","group":"Tasks"},{"endpoint":"/tasks/{taskId}/move.json","method":"put","parameters":[{"name":"body","in":"body","schema":{"type":"object","properties":{"taskId":{"type":"integer"},"projectId":{"type":"integer"},"tasklistId":{"type":"integer"}},"example":{"taskId":1,"projectId":2,"tasklistId":3}}}],"description":"Move a Task from one Project to Another","group":"Tasks"},{"endpoint":"/tasks/{taskId}/copy.json","method":"put","parameters":[{"name":"body","in":"body","schema":{"type":"object","properties":{"taskId":{"type":"integer"},"projectId":{"type":"integer"},"tasklistId":{"type":"integer"}},"example":{"taskId":1,"projectId":2,"tasklistId":3}}}],"description":"Copy a Task from one Project to Another","group":"Tasks"},{"endpoint":"/tasks/{id}/reminders.json","method":"get","description":"Get all Reminders on a Task","group":"Task Reminders"},{"endpoint":"/tasks/{id}/reminders.json","method":"post","parameters":[{"name":"body","in":"body","schema":{"type":"object","properties":{"reminder":{"type":"object","properties":{"note":{"type":"string"},"date-time-utc":{"type":"string"},"user-id":{"type":"string"},"type":{"type":"string"}},"required":["note","date-time-utc","user-id"]}},"example":{"reminder":{"note":"","date-time-utc":"2015-06-16T14:45:00Z","user-id":"414","type":"EMAIL"}}}}],"description":"Create a Reminder on a Task","group":"Task Reminders"},{"endpoint":"/taskreminders/{id}.json","method":"put","parameters":[{"name":"body","in":"body","schema":{"type":"object","properties":{"reminder":{"type":"object","properties":{"note":{"type":"string"},"date-time-utc":{"type":"string"},"user-id":{"type":"string"},"type":{"type":"string"}}}},"example":{"reminder":{"note":"","date-time-utc":"2015-06-16T14:45:00Z","user-id":"414","type":"SMS"}}}}],"description":"Update an Existing Reminder on a Task","group":"Task Reminders"},{"endpoint":"/taskreminders/{id}.json","method":"delete","description":"Delete an existing reminder on a Task","group":"Task Reminders"},{"endpoint":"/companies.json","method":"get","parameters":[{"name":"page","in":"query","description":"Optionally, you can set the page from which to start retrieving results. This is usually used in conjunction with the parameter pageSize. For example: ?page=2&pageSize=10 will retrieve results 10-20.","type":"integer"},{"name":"pageSize","in":"query","description":"The amount of companies returned can be limited using this parameter. Normally used in conjunction with the page parameter","type":"integer"}],"description":"Retrieve Companies","group":"Companies"},{"endpoint":"/companies.json","method":"post","parameters":[{"name":"body","in":"body","schema":{"type":"object","properties":{"company":{"type":"object","required":["name"],"properties":{"name":{"type":"string"},"address_one":{"type":"string"},"address_two":{"type":"string"},"zip":{"type":"string"},"city":{"type":"string"},"state":{"type":"string"},"countrycode":{"type":"string"},"phone":{"type":"string"},"fax":{"type":"string"},"email_one":{"type":"string"},"email_two":{"type":"string"},"email_three":{"type":"string"},"website":{"type":"string"}}}},"required":["company"],"example":{"company":{"name":"Demo 2 Company","address_one":"Address Line 1","address_two":"Address Line 2","zip":"","city":"City","state":"State","countrycode":"IE","phone":"","fax":"","email_one":"","email_two":"","email_three":"","website":""}}}}],"description":"Create A Company","group":"Companies"},{"endpoint":"/projects/{id}/companies.json","method":"get","description":"Retrieving Companies within a Project","group":"Companies"},{"endpoint":"/companies/{id}.json","method":"get","description":"Retrieve a Single Company","group":"Companies"},{"endpoint":"/companies/{id}.json","method":"put","parameters":[{"name":"body","in":"body","schema":{"type":"object","properties":{"company":{"type":"object","properties":{"name":{"type":"string"},"address_one":{"type":"string"},"address_two":{"type":"string"},"city":{"type":"string"},"state":{"type":"string"},"countrycode":{"type":"string"},"zip":{"type":"string"},"email_one":{"type":"string"},"email_two":{"type":"string"},"email_three":{"type":"string"},"website":{"type":"string"},"cid":{"type":"string"},"fax":{"type":"string"},"phone":{"type":"string"},"industryCatId":{"type":"string"},"tagIds":{"type":"string"},"logoPendingFileRef":{"type":"string"},"removeLogo":{"type":"boolean"},"profile":{"type":"string"},"privateNotes":{"type":"string"}}}}}}],"description":"Update A Company","group":"Companies"},{"endpoint":"/companies/{id}.json","method":"delete","description":"Delete A Company","group":"Companies"},{"endpoint":"/people.json","method":"get","parameters":[{"name":"projectId","in":"query","type":"integer"},{"name":"page","in":"query","type":"integer"},{"name":"pageSize","in":"query","type":"integer"},{"name":"groupByCompany","in":"query","type":"boolean"},{"name":"sort","in":"query","type":"string","default":"firstname","description":"Options for sort:\n* company \n* logincount\n* lastlogin \n* lastactive\n* projectlastactive\n* firstName\n* lastName\n* title\n* dateAdded"},{"name":"sortOrder","in":"query","type":"string","default":"asc"},{"name":"fullprofile","in":"query","type":"boolean"},{"in":"query","name":"onlyids","type":"boolean"},{"in":"query","name":"getProjectRoles","type":"boolean"},{"in":"query","name":"userIds","type":"string"},{"in":"query","name":"includeTags","type":"boolean"},{"in":"query","name":"projectCompanyId","type":"integer"},{"in":"query","name":"countOnly","type":"boolean"},{"in":"query","name":"fullprofile","type":"boolean"},{"in":"query","name":"includeCompanyDetails","type":"boolean"},{"in":"query","name":"getCounts","type":"boolean"},{"in":"query","name":"includeObservers","type":"boolean","default":true},{"in":"query","name":"getWorkingHours","type":"string"},{"in":"query","name":"updatedAfterDate","type":"string"}],"description":"Get All People","group":"People"},{"endpoint":"/people.json","method":"post","parameters":[{"name":"body","in":"body","schema":{"type":"object","properties":{"person":{"type":"object","properties":{"email-address":{"type":"string"},"first-name":{"type":"string"},"last-name":{"type":"string"},"company-id":{"type":"integer"},"sendInvite":{"type":"boolean"},"title":{"type":"string"},"phone-number-office":{"type":"string"},"phone-number-office-ext":{"type":"string"},"phone-number-mobile-countrycode":{"type":"string"},"phone-number-mobile-prefix":{"type":"string"},"phone-number-mobile":{"type":"string"},"phone-number-home":{"type":"string"},"phone-number-fax":{"type":"string"},"email-alt-1":{"type":"string"},"email-alt-2":{"type":"string"},"email-alt-3":{"type":"string"},"address":{"type":"object","properties":{"line1":{"type":"string"},"line2":{"type":"string"},"city":{"type":"string"},"state":{"type":"string"},"zipcode":{"type":"string"},"countrycode":{"type":"string"}}},"profile":{"type":"string"},"userTwitterName":{"type":"string"},"userLinkedin":{"type":"string"},"userFacebook":{"type":"string"},"userWebsite":{"type":"string"},"im-service":{"type":"string"},"im-handle":{"type":"string"},"language":{"type":"string"},"dateFormatId":{"type":"integer"},"timeFormatId":{"type":"integer"},"timezoneId":{"type":"integer"},"calendarStartsOnSunday":{"type":"string"},"lengthOfDay":{"type":"integer"},"workingHours":{"type":"object","properties":{"entries":{"type":"array","items":{"type":"object","properties":{"weekday":{"type":"string"},"taskHours":{"type":"integer"}}}}}},"changeForEveryone":{"type":"boolean"},"administrator":{"type":"boolean"},"canAddProjects":{"type":"boolean"},"canManagePeople":{"type":"boolean"},"autoGiveProjectAccess":{"type":"boolean"},"canAccessCalendar":{"type":"boolean"},"canAccessTemplates":{"type":"boolean"},"canAccessPortfolio":{"type":"boolean"},"canManageCustomFields":{"type":"boolean"},"canManagePortfolio":{"type":"boolean"},"canManageProjectTemplates":{"type":"boolean"},"canViewProjectTemplates":{"type":"boolean"},"notifyOnTaskComplete":{"type":"boolean"},"notify-on-added-as-follower":{"type":"boolean"},"notify-on-status-update":{"type":"boolean"},"textFormat":{"type":"string"},"useShorthandDurations":{"type":"boolean"},"userReceiveNotifyWarnings":{"type":"boolean"},"userReceiveMyNotificationsOnly":{"type":"boolean"},"receiveDailyReports":{"type":"boolean"},"receiveDailyReportsAtWeekend":{"type":"boolean"},"receiveDailyReportsIfEmpty":{"type":"boolean"},"soundAlertsEnabled":{"type":"boolean"},"dailyReportSort":{"type":"string"},"receiveDailyReportsAtTime":{"type":"string"},"dailyReportEventsType":{"type":"string"},"dailyReportDaysFilter":{"type":"integer"},"avatarPendingFileRef":{"type":"string"},"removeAvatar":{"type":"boolean"},"allowEmailNotifications":{"type":"boolean"},"user-type":{"type":"string"},"privateNotes":{"type":"string"},"getUserDetails":{"type":"boolean"}}}}}}],"description":"Creates a new User Account","group":"People"},{"endpoint":"/calendarevents/{eventId}/availablePeople.json","method":"get","parameters":[{"name":"privacy","in":"query","required":true,"type":"string"}],"description":"Get available People for a Calendar Event","group":"People"},{"endpoint":"/projects/{projectId}/messages/availablepeople.json","method":"get","description":"Get available People for a Message","group":"People"},{"endpoint":"/projects/{projectId}/milestones/availablepeople.json","method":"get","description":"Get available People for a Milestone","group":"People"},{"endpoint":"/projects/{projectId}/notebooks/availablepeople.json","method":"get","description":"Get available People for following a Notebook","group":"People"},{"endpoint":"/projects/{projectId}/tasks/availablepeople.json","method":"get","description":"Get available People for a Task","group":"People"},{"endpoint":"/projects/{projectId}/files/availablepeople.json","method":"get","description":"Get available People to notify when adding a File","group":"People"},{"endpoint":"/projects/{projectId}/links/availablepeople.json","method":"get","description":"Get available People to notify when adding a Link","group":"People"},{"endpoint":"/projects/{projectId}/people.json","method":"get","description":"Get all People (within a Project)","group":"People"},{"endpoint":"/companies/{id}/people.json","method":"get","description":"Get People (within a Company)","group":"People"},{"endpoint":"/me.json","method":"get","parameters":[{"name":"getPreferences","in":"query","description":"Get user preferences in teamwork projects, eg. ordering of comments.","type":"boolean"},{"name":"fullProfile","in":"query","description":"Get additional user details.","type":"boolean"},{"name":"getDefaultFilters","in":"query","type":"boolean"},{"name":"sharedFilter","in":"query","type":"boolean"},{"name":"getAccounts","in":"query","type":"boolean"},{"name":"includeAuth","in":"query","description":"Includes API key, please be careful sharing this data.","type":"boolean"}],"description":"Get Current User Details","group":"People"},{"endpoint":"/stats.json","method":"get","parameters":[{"name":"getPermissions","in":"header","description":"Return Permissions information in the response","type":"boolean"},{"name":"onlyMyProjects","in":"header","description":"Summary of the users Projects only or all Projects","type":"boolean"}],"description":"Current User Summary Stats","group":"People"},{"endpoint":"/people/{id}.json","method":"get","description":"Retrieve a Specific Person","group":"People"},{"endpoint":"/people/{id}.json","method":"put","parameters":[{"name":"body","in":"body","schema":{"type":"object","properties":{"person":{"type":"object","properties":{"email-address":{"type":"string"},"first-name":{"type":"string"},"last-name":{"type":"string"},"company-id":{"type":"integer"},"sendInvite":{"type":"boolean"},"title":{"type":"string"},"phone-number-office":{"type":"string"},"phone-number-office-ext":{"type":"string"},"phone-number-mobile-countrycode":{"type":"string"},"phone-number-mobile-prefix":{"type":"string"},"phone-number-mobile":{"type":"string"},"phone-number-home":{"type":"string"},"phone-number-fax":{"type":"string"},"email-alt-1":{"type":"string"},"email-alt-2":{"type":"string"},"email-alt-3":{"type":"string"},"address":{"type":"object","properties":{"line1":{"type":"string"},"line2":{"type":"string"},"city":{"type":"string"},"state":{"type":"string"},"zipcode":{"type":"string"},"countrycode":{"type":"string"}}},"profile":{"type":"string"},"userTwitterName":{"type":"string"},"userLinkedin":{"type":"string"},"userFacebook":{"type":"string"},"userWebsite":{"type":"string"},"im-service":{"type":"string"},"im-handle":{"type":"string"},"language":{"type":"string"},"dateFormatId":{"type":"integer"},"timeFormatId":{"type":"integer"},"timezoneId":{"type":"integer"},"calendarStartsOnSunday":{"type":"string"},"lengthOfDay":{"type":"integer"},"workingHours":{"type":"object","properties":{"entries":{"type":"array","items":{"type":"object","properties":{"weekday":{"type":"string"},"taskHours":{"type":"integer"}}}}}},"changeForEveryone":{"type":"boolean"},"administrator":{"type":"boolean"},"canAddProjects":{"type":"boolean"},"canManagePeople":{"type":"boolean"},"autoGiveProjectAccess":{"type":"boolean"},"canAccessCalendar":{"type":"boolean"},"canAccessTemplates":{"type":"boolean"},"canAccessPortfolio":{"type":"boolean"},"canManageCustomFields":{"type":"boolean"},"canManagePortfolio":{"type":"boolean"},"canManageProjectTemplates":{"type":"boolean"},"canViewProjectTemplates":{"type":"boolean"},"notifyOnTaskComplete":{"type":"boolean"},"notify-on-added-as-follower":{"type":"boolean"},"notify-on-status-update":{"type":"boolean"},"textFormat":{"type":"string"},"useShorthandDurations":{"type":"boolean"},"userReceiveNotifyWarnings":{"type":"boolean"},"userReceiveMyNotificationsOnly":{"type":"boolean"},"receiveDailyReports":{"type":"boolean"},"receiveDailyReportsAtWeekend":{"type":"boolean"},"receiveDailyReportsIfEmpty":{"type":"boolean"},"soundAlertsEnabled":{"type":"boolean"},"dailyReportSort":{"type":"string"},"receiveDailyReportsAtTime":{"type":"string"},"dailyReportEventsType":{"type":"string"},"dailyReportDaysFilter":{"type":"integer"},"avatarPendingFileRef":{"type":"string"},"removeAvatar":{"type":"boolean"},"allowEmailNotifications":{"type":"boolean"},"user-type":{"type":"string"},"privateNotes":{"type":"string"},"getUserDetails":{"type":"boolean"}}}}}}],"description":"Editing a User","group":"People"},{"endpoint":"/people/{id}.json","method":"delete","description":"Delete User","group":"People"},{"endpoint":"/people/APIKeys.json","method":"get","description":"Retrieve all API Keys for all People on account","group":"People"},{"endpoint":"/people/deleted.json","method":"get","parameters":[{"name":"groupByCompany","in":"query","type":"boolean"}],"description":"Get all deleted People","group":"People"},{"endpoint":"/projects/{id}/people.json","method":"post","parameters":[{"name":"body","in":"body","schema":{"type":"object","properties":{"add":{"type":"object","properties":{"userIdList":{"type":"string"}}},"remove":{"type":"object","properties":{"userIdList":{"type":"string"}}}},"example":{"add":{"userIdList":"1234,5678"},"remove":{"userIdList":"1234,5678"}}}}],"description":"Add/Remove People to existing Project","group":"People"},{"endpoint":"/projects/{id}/people.json","method":"put","parameters":[{"name":"body","in":"body","schema":{"type":"object","properties":{"add":{"type":"object","properties":{"userIdList":{"type":"string"}}},"remove":{"type":"object","properties":{"userIdList":{"type":"string"}}}},"example":{"add":{"userIdList":"2,4,5"},"remove":{"userIdList":"7,8,9"}}}}],"description":"Add/Remove multiple People to/from a Project","group":"Permissions"},{"endpoint":"/statuses.json","method":"get","parameters":[{"name":"includeClockin","in":"query","description":"Will return 0 or 1 based on if the user is clocked in or not. ","type":"boolean"}],"description":"Retrieve all Statuses","group":"People Status"},{"endpoint":"/people/{id}/status.json","method":"get","description":"Retrieve a Persons Status","group":"People Status"},{"endpoint":"/people/{id}/status.json","method":"post","parameters":[{"in":"body","name":"body","schema":{"type":"object","properties":{"userStatus":{"type":"object","properties":{"status":{"type":"string"},"notify":{"type":"boolean"},"notifyIds":{"type":"array","items":{"type":"object"}}}}}},"x-examples":{"application/json":{"userStatus":{"status":"Updating Emma's status","notify":false,"notifyIds":[]}}}}],"description":"Create a User Status","group":"People Status"},{"endpoint":"/me/status.json","method":"get","description":"Retrieve my Status","group":"People Status"},{"endpoint":"/me/status.json","method":"post","parameters":[{"name":"body","in":"body","schema":{"type":"object","properties":{"userstatus":{"type":"object","properties":{"status":{"type":"string"},"notify":{"type":"string"}}}},"example":{"userstatus":{"status":"Status message here","notify":"no"}}}}],"description":"Create my Status","group":"People Status"},{"endpoint":"/me/status/id.json","method":"put","parameters":[{"in":"body","name":"body","schema":{"type":"object","properties":{"userStatus":{"type":"object","properties":{"status":{"type":"string"},"notify":{"type":"boolean"},"notifyIds":{"type":"array","items":{"type":"object"}}}}}},"x-examples":{"application/json":{"userStatus":{"status":"Updating a status I already created","notify":false,"notifyIds":[]}}}}],"description":"Update my Status","group":"People Status"},{"endpoint":"/people/{personId}/status/{statusId}.json","method":"put","parameters":[{"name":"body","in":"body","schema":{"type":"object","properties":{"userstatus":{"type":"object","properties":{"status":{"type":"string"},"notify":{"type":"string"}}}},"example":{"userstatus":{"status":"Updated status message here","notify":"no"}}}}],"description":"Update User Status","group":"People Status"},{"endpoint":"/people/{personId}/status/{statusId}.json","method":"delete","description":"Delete a User Status","group":"People Status"},{"endpoint":"/people/status/{id}.json","method":"put","parameters":[{"name":"body","in":"body","schema":{"type":"object","properties":{"userstatus":{"type":"object","properties":{"status":{"type":"string"},"notify":{"type":"string"}}}},"example":{"userstatus":{"status":"Updated status message here","notify":"no"}}}}],"description":"Update Status","group":"People Status"},{"endpoint":"/people/status/{id}.json","method":"delete","description":"Delete a Status","group":"People Status"},{"endpoint":"/me/status/{id}.json","method":"delete","description":"Delete my Status","group":"People Status"},{"endpoint":"/calendarevents.json","method":"get","parameters":[{"name":"startdate","in":"query","description":"YYYYMMDD","required":true,"type":"string","default":""},{"name":"endDate","in":"query","description":"YYYYMMDD","required":true,"type":"string","default":"tomorrow's date"},{"name":"showDeleted","in":"query","description":"Whether to include deleted events","required":false,"type":"boolean"},{"name":"updatedAfterDate","in":"query","description":"Only return events updated after a certain datetime (YYYYMMDDHHMMSS)","required":false,"type":"string"},{"name":"eventTypeId","in":"query","description":"Only return events with a given eventTypeId (Numeric only - default 0)","required":false,"type":"integer"},{"name":"page","in":"query","required":false,"type":"integer"},{"name":"userId","in":"query","description":"If you want to bring back records which this user is attending or has created.","required":false,"type":"number"},{"name":"attendingOnly","in":"query","description":"If set to true, along with passing in the userId, it will return events that user is attending only. Not ones they have also created. ","required":false,"type":"boolean"}],"description":"Get Events","group":"Calendar Event"},{"endpoint":"/calendarevents.json","method":"post","parameters":[{"name":"body","in":"body","schema":{"type":"object","example":{"event":{"start":"yyyy-mm-ddThh:mm","end":"yyyy-mm-ddThh:mm","all-day":false,"title":"My recurring event","repeat":{"frequency":"monthly","month-type":"monthday","ends":true,"endDate":"yyyy-mm-dd"},"notify":true,"attendees-can-edit":false,"project-users-can-edit":false}},"properties":{"event":{"type":"object","properties":{"start":{"type":"string","example":"2020-12-10T16:45","description":"String format: YYYY-MM-DD-T"},"end":{"type":"string","description":"String format: YYYY-MM-DDT","example":"2020-12-10T17:45"},"all-day":{"type":"boolean"},"title":{"type":"string"},"repeat":{"type":"object","properties":{"frequency":{"type":"string"},"month-type":{"type":"string"},"ends":{"type":"boolean"},"endDate":{"type":"string"}}},"notify":{"type":"boolean"},"attendees-can-edit":{"type":"boolean"},"project-users-can-edit":{"type":"boolean"}}}}}}],"description":"Create an Event","group":"Calendar Event"},{"endpoint":"/calendarevents/{id}.json","method":"get","description":"Get an Event","group":"Calendar Event"},{"endpoint":"/calendarevents/{id}.json","method":"put","parameters":[{"name":"body","in":"body","schema":{"type":"object","properties":{"event":{"type":"object","properties":{"start":{"type":"string"},"end":{"type":"string"},"all-day":{"type":"string"},"utc":{"type":"boolean"},"title":{"type":"string"},"description":{"type":"string"},"where":{"type":"string"},"privacy":{"type":"object","properties":{"type":{"type":"string"}}},"project-id":{"type":"string"},"show-as-busy":{"type":"string"},"type":{"type":"object","properties":{"id":{"type":"string"}}},"attending-user-ids":{"type":"string"},"notify-user-ids":{"type":"string"},"notify":{"type":"string"},"attendees-can-edit":{"type":"string"},"project-users-can-edit":{"type":"string"},"reminders":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string"},"period":{"type":"string"},"before":{"type":"string"}}}}}}},"example":{"event":{"start":"YYYY-MM-DDThh:mm:ss","end":"YYYY-MM-DDThh:mm:ss","all-day":"true/false","utc":"true/false","title":"Some event title","description":"Some event description (optional)","where":"Some location (optional)","privacy":{"type":"company"},"project-id":"0","show-as-busy":"true/false","type":{"id":"numeric calendarEventType id"},"attending-user-ids":"comma separated list of user id's","notify-user-ids":"comma separated list of user id's","notify":"false","attendees-can-edit":"true/false","project-users-can-edit":"true/false","reminders":[{"type":"string (one of the following sms,email,push)","period":"string (one of the following minutes,hours,days,weeks)","before":"numeric value (e.g: 15)"}]}}}}],"description":"Edit an Event","group":"Calendar Event"},{"endpoint":"/calendarevents/{id}.json","method":"delete","parameters":[{"name":"body","in":"body","schema":{"type":"object","properties":{"deleteRecurring":{"type":"string"}},"example":{"deleteRecurring":"all"}}}],"description":"Delete Event","group":"Calendar Event"},{"endpoint":"/calendareventtypes.json","method":"get","description":"Get Event Types","group":"Calendar Event"},{"endpoint":"/eventtypes.json","method":"post","parameters":[{"name":"body","in":"body","schema":{"type":"object","properties":{"eventtype":{"type":"object","properties":{"name":{"type":"string"},"color":{"type":"string"}}}},"example":{"eventtype":{"name":"new event type","color":"526D45"}}}}],"description":"Create an Event Type","group":"Calendar Event"},{"endpoint":"/eventtypes/{id}.json","method":"put","parameters":[{"name":"body","in":"body","schema":{"type":"object","properties":{"eventtype":{"type":"object","properties":{"name":{"type":"string"},"color":{"type":"string"},"id":{"type":"string"}}}},"example":{"eventtype":{"name":"updated event type name","color":"526D45","id":"{event_type_id}"}}}}],"description":"Edit an Event Type","group":"Calendar Event"},{"endpoint":"/eventtypes/{id}.json","method":"delete","description":"Delete Event Type","group":"Calendar Event"},{"endpoint":"/tasks/{id}/files.json","method":"get","description":"List Files on a Task","group":"Files"},{"endpoint":"/tasks/{id}/files.json","method":"post","parameters":[{"name":"body","in":"body","schema":{"type":"object","properties":{"task":{"type":"object","properties":{"pendingFileAttachments":{"type":"array","items":{"type":"string"}},"updateFiles":{"type":"boolean"},"removeOtherFiles":{"type":"boolean"},"attachments":{"type":"string"},"attachmentsCategoryIds":{"type":"string"},"pendingFileAttachmentsCategoryIds":{"type":"string"}}}},"example":{"task":{"pendingFileAttachments":["tf_2A1F999E-A349-5328-4002CBE803730AD8"],"updateFiles":true,"removeOtherFiles":true,"attachments":"","attachmentsCategoryIds":"","pendingFileAttachmentsCategoryIds":"0"}}}}],"description":"Add a File to a Task","group":"Files"},{"endpoint":"/projects/{id}/files.json","method":"get","parameters":[],"description":"List Files on a Project","group":"Files"},{"endpoint":"/projects/{id}/files.json","method":"post","parameters":[{"name":"body","in":"body","schema":{"type":"object","example":{"file":{"name":"thisfile.txt","description":"Some description","private":"0","category-id":"0","category-name":"My new category","pendingFileRef":"tf_F7495964-D850-E64B-E22057A09616E9B3","tags":"tag1,tag2,tag3"}},"properties":{"file":{"type":"object","properties":{"name":{"type":"string"},"description":{"type":"string"},"private":{"type":"integer","default":"-1, 0, 1"},"category-id":{"type":"integer"},"category-name":{"type":"string"},"pendingFileRef":{"type":"string"},"tags":{"type":"array","items":{"type":"string"}},"notify":{"type":"string","description":"Array of ints or \"ALL\"\n"},"notifyCurrentUser":{"type":"boolean"},"autoNewVersion":{"type":"boolean"},"grant-access-to":{"type":["string","array"],"items":{"type":"integer"}},"tagIds":{"type":"array","items":{"type":"integer"}}}}}}}],"description":"Add a File to a Project","group":"Files"},{"endpoint":"/files/{id}.json","method":"get","parameters":[{"name":"body","in":"body","schema":{"type":"object","properties":{"file":{"type":"object","properties":{"project-id":{"type":"string"},"uploaded-by-user-last-name":{"type":"string"},"name":{"type":"string"},"uploaded-date":{"type":"string"},"uploaded-by-userId":{"type":"string"},"description":{"type":"string"},"comments-count":{"type":"string"},"version-id":{"type":"string"},"private":{"type":"string"},"download-URL":{"type":"string"},"category-id":{"type":"string"},"project-name":{"type":"string"},"version":{"type":"string"},"originalName":{"type":"string"},"id":{"type":"string"},"size":{"type":"string"},"file-source":{"type":"string"},"uploaded-by-user-first-name":{"type":"string"},"category-name":{"type":"string"}}},"STATUS":{"type":"string"}},"example":{"file":{"project-id":"999","uploaded-by-user-last-name":"User","name":"readme.txt","uploaded-date":"2014-03-28T16:29:45Z","uploaded-by-userId":"999","description":"","comments-count":"0","version-id":"32","private":"0","download-URL":"http://demo1company.teamwork.com/?action=viewFile&sd=35e756ad...","category-id":"13","project-name":"demo","version":"1","originalName":"readme.txt","id":"999","size":"1612","file-source":"teamworkpm","uploaded-by-user-first-name":"Demo","category-name":"Demo Category"},"STATUS":"OK"}}}],"description":"Get a Single File","group":"Files"},{"endpoint":"/files/{id}.json","method":"post","parameters":[{"name":"body","in":"body","schema":{"type":"object","properties":{"fileversion":{"type":"object","properties":{"pendingFileRef":{"type":"string"},"description":{"type":"string"}}}},"example":{"fileversion":{"pendingFileRef":"tf_F7F01655","description":"An optional description"}}}}],"description":"Add a new File Version to a File","group":"Files"},{"endpoint":"/files/{id}.json","method":"delete","description":"Delete a File from a Project","group":"Files"},{"endpoint":"/files/{id}/sharedlink.json","method":"get","parameters":[{"name":"version","in":"query","description":"If you have multiple versions of a file, you can request a short link to other versions by appending 'version'.","type":"string"}],"description":"Get a short URL for sharing a File","group":"Files"},{"endpoint":"/files/{id}/copy.json","method":"put","parameters":[{"name":"body","in":"body","schema":{"type":"object","properties":{"projectId":{"type":"integer"}},"example":{"projectId":1234567}}}],"description":"Copy a File to another Project","group":"Files"},{"endpoint":"/files/{id}/move.json","method":"put","parameters":[{"name":"body","in":"body","schema":{"type":"object","properties":{"projectId":{"type":"integer"}},"example":{"projectId":1234567}}}],"description":"Move a file to another Project","group":"Files"},{"endpoint":"/projects/{id}/fileCategories.json","method":"get","description":"Retrieving all of a File Categories","group":"File Categories"},{"endpoint":"/projects/{id}/fileCategories.json","method":"post","parameters":[{"name":"body","in":"body","schema":{"type":"object","properties":{"category":{"type":"object","properties":{"name":{"type":"string"},"parent-id":{"type":"string"}}}},"example":{"category":{"name":"Demo Category","parent-id":"999"}}}}],"description":"Creating File Categories","group":"File Categories"},{"endpoint":"/fileCategories/{id}.json","method":"get","description":"Retrieve a Single File Category","group":"File Categories"},{"endpoint":"/fileCategories/{id}.json","method":"put","parameters":[{"name":"body","in":"body","schema":{"type":"object","properties":{"category":{"type":"object","properties":{"name":{"type":"string"},"parent-id":{"type":"string"}}}},"example":{"category":{"name":"Demo Category 1","parent-id":"999"}}}}],"description":"Updating a File Category","group":"File Categories"},{"endpoint":"/fileCategories/{id}.json","method":"delete","description":"Deleting a File Category","group":"File Categories"},{"endpoint":"/notebooks.json","method":"get","parameters":[{"name":"includeContent","in":"query","description":"You can pass includeContent=true to return the notebook HTML content with the notebook data","type":"boolean"}],"description":"List All Notebooks","group":"Notebooks"},{"endpoint":"/projects/{id}/notebooks.json","method":"get","parameters":[{"name":"includeContent","in":"query","description":"You can pass includeContent=true to return the notebook HTML content with the notebook data","type":"boolean"}],"description":"List Notebooks on a Project","group":"Notebooks"},{"endpoint":"/projects/{id}/notebooks.json","method":"post","parameters":[{"name":"body","in":"body","schema":{"type":"object","properties":{"notebook":{"type":"object","properties":{"name":{"type":"string"},"description":{"type":"string"},"content":{"type":"string"},"category-id":{"type":"integer"},"locked":{"type":"boolean"},"notebook-type":{"type":"string"},"notify":{"type":"string","description":"'all' - to notify all project users."},"notify-current-user":{"type":"boolean"},"secureContent":{"type":"boolean"},"grant-access-to":{"type":"string"},"private":{"type":"integer"}}}}}}],"description":"Create a Single Notebook","group":"Notebooks"},{"endpoint":"/notebookCategories/{id}/notebooks.json","method":"get","parameters":[{"name":"includeContent","in":"query","description":"You can pass includeContent=true to return the notebook HTML content with the notebook data","type":"boolean"}],"description":"List Notebooks in a Specific Category","group":"Notebooks"},{"endpoint":"/notebooks/{id}.json","method":"get","description":"Get a Single Notebook","group":"Notebooks"},{"endpoint":"/notebooks/{id}.json","method":"put","parameters":[{"name":"body","in":"body","schema":{"type":"object","properties":{"notebook":{"type":"object","properties":{"name":{"type":"string"},"description":{"type":"string"},"content":{"type":"string"},"category-id":{"type":"integer"},"locked":{"type":"boolean"},"notebook-type":{"type":"string"},"notify":{"type":"string"},"notify-current-user":{"type":"boolean"},"secureContent":{"type":"boolean"},"grant-access-to":{"type":"string"},"private":{"type":"integer"}}}}}}],"description":"Update a Single Notebook","group":"Notebooks"},{"endpoint":"/notebooks/{id}.json","method":"delete","description":"Delete a Single Notebook","group":"Notebooks"},{"endpoint":"/notebooks/{id}/lock.json","method":"put","description":"Lock a Single Notebook for Editing","group":"Notebooks"},{"endpoint":"/notebooks/{id}/unlock.json","method":"put","description":"Unlock a Single Notebook","group":"Notebooks"},{"endpoint":"/notebooks/{id}/copy.json","method":"put","parameters":[{"name":"body","in":"body","schema":{"type":"object","properties":{"projectId":{"type":"integer"}},"example":{"projectId":12345}}}],"description":"Copy a Notebook to another Project","group":"Notebooks"},{"endpoint":"/notebooks/{id}/move.json","method":"put","parameters":[{"name":"body","in":"body","schema":{"type":"object","properties":{"projectId":{"type":"integer"}},"example":{"projectId":12345}}}],"description":"Move a Notebook to another Project","group":"Notebooks"},{"endpoint":"/projects/{id}/notebookCategories.json","method":"get","description":"Retrieving all of a Notebook Categories","group":"Notebook Categories"},{"endpoint":"/projects/{id}/notebookCategories.json","method":"post","parameters":[{"name":"body","in":"body","schema":{"type":"object","properties":{"category":{"type":"object","properties":{"name":{"type":"string"},"parent-id":{"type":"string"}}}},"example":{"category":{"name":"Demo Notebooks","parent-id":"0"}}}}],"description":"Creating Notebook Categories","group":"Notebook Categories"},{"endpoint":"/notebookCategories/{id}.json","method":"get","description":"Retrieve a Single Notebook Category","group":"Notebook Categories"},{"endpoint":"/notebookCategories/{id}.json","method":"put","parameters":[{"name":"body","in":"body","schema":{"type":"object","properties":{"category":{"type":"object","properties":{"name":{"type":"string"},"parent-id":{"type":"string"}}}},"example":{"category":{"name":"Demo Category 1","parent-id":"999"}}}}],"description":"Updating a Notebook Category","group":"Notebook Categories"},{"endpoint":"/notebookCategories/{id}.json","method":"delete","description":"Deleting a Notebook Category","group":"Notebook Categories"},{"endpoint":"/projects/{id}/links.json","method":"get","description":"List Links on a Project","group":"Links"},{"endpoint":"/projects/{id}/links.json","method":"post","parameters":[{"name":"body","in":"body","schema":{"type":"object","properties":{"link":{"type":"object","properties":{"notify":{"type":"string"},"notify-current-user":{"type":"boolean"},"description":{"type":"string"},"code":{"type":"string"},"category-id":{"type":"integer"},"width":{"type":"string"},"height":{"type":"string"},"name":{"type":"string"},"tagIds":{"type":"string"},"grant-access-to":{"type":"string"},"private":{"type":"boolean"}}}}}}],"description":"Create a Single Link","group":"Links"},{"endpoint":"/links.json","method":"get","description":"List All Links","group":"Links"},{"endpoint":"/links/{id}.json","method":"get","description":"Get a Single Link","group":"Links"},{"endpoint":"/links/{id}.json","method":"put","parameters":[{"name":"body","in":"body","schema":{"type":"object","properties":{"link":{"type":"object","properties":{"notify":{"type":"string"},"notify-current-user":{"type":"boolean"},"description":{"type":"string"},"code":{"type":"string"},"category-id":{"type":"integer"},"width":{"type":"string"},"height":{"type":"string"},"name":{"type":"string"},"tagIds":{"type":"string"},"grant-access-to":{"type":"string"},"private":{"type":"boolean"}}}}}}],"description":"Update a Single Link","group":"Links"},{"endpoint":"/links/{id}.json","method":"delete","description":"Delete a Single Link","group":"Links"},{"endpoint":"/projects/{id}/linkCategories.json","method":"get","description":"Retrieving all of a Link Categories","group":"Link Categories"},{"endpoint":"/projects/{id}/linkCategories.json","method":"post","parameters":[{"name":"body","in":"body","schema":{"type":"object","properties":{"category":{"type":"object","properties":{"name":{"type":"string"},"parent-id":{"type":"string"}}}},"example":{"category":{"name":"Demo Notebooks","parent-id":"0"}}}}],"description":"Creating Link Categories","group":"Link Categories"},{"endpoint":"/linkCategories/{id}.json","method":"get","description":"Retrieve a Single Link Category","group":"Link Categories"},{"endpoint":"/linkCategories/{id}.json","method":"put","parameters":[{"name":"body","in":"body","schema":{"type":"object","properties":{"category":{"type":"object","required":["name"],"properties":{"name":{"type":"string"},"parent-id":{"type":"string"}}}},"required":["category"],"example":{"category":{"name":"Demo Category 1","parent-id":"999"}}}}],"description":"Updating a Link Category","group":"Link Categories"},{"endpoint":"/linkCategories/{id}.json","method":"delete","description":"Deleting a Link Category","group":"Link Categories"},{"endpoint":"/people/{personId}/clockins.json","method":"get","parameters":[{"name":"page","in":"query","type":"number"},{"name":"pageSize","in":"query","type":"number"}],"description":"Get all clock Ins","group":"Clock In/ Clock Out"},{"endpoint":"/clockin/{clockinId}.json","method":"put","parameters":[{"name":"body","in":"body","schema":{"type":"object","example":{"clockIn":{"clockInDatetime":"20190102144200","clockInInfo":"","clockOutInfo":"","clockOutDatetime":"20190102144600"}},"properties":{"clockIn":{"type":"object","properties":{"clockInDatetime":{"type":"string","example":"20201202064900","description":"String format: YYYYMMDDTTTTTT"},"clockInInfo":{"type":"string"},"clockOutInfo":{"type":"string"},"clockOutDatetime":{"type":"string","example":"20201202064900","description":"String format: YYYYMMDDTTTTTT"}}}}}}],"description":"Edit a clock in/out entry","group":"Clock In/ Clock Out"},{"endpoint":"/clockin.json","method":"post","parameters":[{"name":"body","in":"body","schema":{"type":"object","example":{"clockIn":{"userId":157140,"clockInDatetime":"20180808080000","clockInInfo":"Was early this morning as appointment in the evening","clockOutInfo":"Appointment, left early. ","clockOutDatetime":"20180808190000"}},"properties":{"clockIn":{"type":"object","required":["userId"],"properties":{"userId":{"type":"integer"},"clockInDatetime":{"type":"string","example":"20201202064900","description":"String format: YYYYMMDDTTTTTT"},"clockInInfo":{"type":"string"},"clockOutInfo":{"type":"string"},"clockOutDatetime":{"type":"string","example":"20201202064900","description":"String format: YYYYMMDDTTTTTT"}}}},"required":["clockIn"]}}],"description":"Quick log for another user","group":"Clock In/ Clock Out"},{"endpoint":"/me/clockin.json","method":"post","description":"Clock me in","group":"Clock In/ Clock Out"},{"endpoint":"/me/clockout.json","method":"post","description":"Clock me out","group":"Clock In/ Clock Out"},{"endpoint":"/time_entries.json","method":"get","parameters":[{"name":"page","in":"query","description":"The page to start retrieving entries from ( e.g: page=1 gives records 1 - 500, page=2 gives records 501-1001 etc)","type":"integer"},{"name":"fromdate","in":"query","description":"string (YYYYMMDD) - The start date to retrieve from","type":"string"},{"name":"fromtime","in":"query","description":"string (HH:MM) - The start time only if fromdate is passed","type":"string"},{"name":"todate","in":"query","description":"string (YYYYMMDD) - The end date to retrieve to","type":"string"},{"name":"totime","in":"query","description":"string (HH:MM) - The end time only if todate is passed","type":"string"},{"name":"sortby","in":"query","description":"string - One of the following: date, user, task, tasklist, project, company, dateupdated (Default: date)","type":"string"},{"name":"sortorder","in":"query","description":"ASC or DESC - The order to sort the returned data","type":"string"},{"name":"userId","in":"query","description":"Return time logs for a specific user only","type":"integer"},{"name":"billableType","in":"query","description":"string (billable or nonbillable).Filter the Time Entries to those that are Billable or Not Billable.","type":"string"},{"name":"invoicedType","in":"query","description":"string (invoiced or noninvoiced) - filter the time entries to those that have been Invoiced or not.","type":"string"},{"name":"projectType","in":"query","description":"string (all, active, archived) - Filter the time entries to those in Active projects, Archived projects or All projects.","type":"string"},{"name":"showDeleted","in":"query","description":"string (true or false) - Filter time entries to include deleted time sheet entries or not","type":"string"},{"name":"tagIds","in":"query","description":"numeric - Include one or more Tag IDs here to return only the time entries with those tags attached (eg &tagIds=23,445,454)","type":"string"},{"name":"updatedAfterDate","in":"query","description":"string YYYYMMDDHHMMSS","type":"string"},{"name":"projectId","in":"query","type":"string"},{"name":"pageSize","in":"query","description":"eg. pageSize=500","type":"string"},{"name":"taskTagIds","in":"query","description":"filter on task tags","type":"string"}],"description":"Retrieve all Time Entries across all Projects","group":"Time Tracking"},{"endpoint":"/projects/{id}/time_entries.json","method":"get","parameters":[{"name":"page","in":"query","description":"The page to start retrieving entries from ( e.g: page=1 gives records 1 - 500, page=2 gives records 501-1001 etc)","type":"integer"},{"name":"fromdate","in":"query","description":"string (YYYYMMDD) - The start date to retrieve from","type":"string"},{"name":"fromtime","in":"query","description":"string (HH:MM) - The start time only if fromdate is passed","type":"string"},{"name":"todate","in":"query","description":"string (YYYYMMDD) - The end date to retrieve to","type":"string"},{"name":"totime","in":"query","description":"string (HH:MM) - The end time only if todate is passed","type":"string"},{"name":"sortby","in":"query","description":"string - One of the following: date, user, task, tasklist, project, company, dateupdated (Default: date)","type":"string"},{"name":"sortorder","in":"query","description":"ASC or DESC - The order to sort the returned data","type":"string"},{"name":"userId","in":"query","description":"Return time logs for a specific user only","type":"integer"},{"name":"billableType","in":"query","description":"string (billable or nonbillable).Filter the Time Entries to those that are Billable or Not Billable.","type":"string"},{"name":"invoicedType","in":"query","description":"string (invoiced or noninvoiced) - filter the time entries to those that have been Invoiced or not.","type":"string"},{"name":"projectType","in":"query","description":"string (all, active, archived) - Filter the time entries to those in Active projects, Archived projects or All projects.","type":"string"},{"name":"showDeleted","in":"query","description":"string (true or false) - Filter time entries to include deleted time sheet entries or not","type":"string"},{"name":"tagIds","in":"query","description":"numeric - Include one or more Tag IDs here to return only the time entries with those tags attached (eg &tagIds=23,445,454)","type":"string"},{"name":"updatedAfterDate","in":"query","description":"string YYYYMMDDHHMMSS","type":"string"},{"name":"pageSize","in":"query","description":"pageSize=500","type":"string"},{"name":"taskTagIds","in":"query","description":"filter on task tags","type":"string"}],"description":"Retrieve all Time Entries for a Project","group":"Time Tracking"},{"endpoint":"/projects/{id}/time_entries.json","method":"post","parameters":[{"name":"body","in":"body","schema":{"type":"object","example":{"time-entry":{"description":"","person-id":"999","date":"20140330","time":"10:10","hours":"1","minutes":"15","isbillable":"1","tags":"tag1,tag2,tag3"}},"properties":{"time-entry":{"type":"object","properties":{"description":{"type":"string"},"person-id":{"type":"integer"},"date":{"type":"string","default":"YYYYMMDD"},"time":{"type":"string","default":"HH:MM","example":"09:30"},"hours":{"type":"integer"},"minutes":{"type":"integer"},"isbillable":{"type":["string","boolean"]},"tags":{"type":"string"}},"required":["date","time","hours","minutes"]}}},"x-examples":{"application/json":{"time-entry":{"description":"This is from the API","person-id":1,"date":"20210401","time":"10:00","hours":1,"minutes":"1","isbillable":true,"tags":"API"}}}}],"description":"Create a Time-Entry","group":"Time Tracking"},{"endpoint":"/tasks/{id}/time_entries.json","method":"get","description":"Retrieve all Task times","group":"Time Tracking"},{"endpoint":"/tasks/{id}/time_entries.json","method":"post","parameters":[{"name":"body","in":"body","schema":{"type":"object","example":{"time-entry":{"description":"","person-id":"999","date":"20140330","time":"10:10","hours":"1","minutes":"15","isbillable":"1","tags":"tag1,tag2,tag3"}},"properties":{"time-entry":{"type":"object","properties":{"description":{"type":"string"},"person-id":{"type":"integer"},"date":{"type":"string","default":"YYYYMMDD"},"time":{"type":"string","default":"HH:MM","example":"10:10"},"hours":{"type":"integer"},"minutes":{"type":"integer"},"isbillable":{"type":"boolean"},"tags":{"type":"string"}},"required":["date","time","hours","minutes"]}}},"x-examples":{"application/json":{"time-entry":{"description":"This is from the API","person-id":1,"date":20210401,"time":"10:00","hours":1,"minutes":"1","isbillable":true,"tags":"API"}}}}],"description":"Create a Time-Entry (for a Task)","group":"Time Tracking"},{"endpoint":"/time_entries/{id}.json","method":"get","description":"Retrieve single Time-Entry","group":"Time Tracking"},{"endpoint":"/time_entries/{id}.json","method":"put","parameters":[{"name":"body","in":"body","schema":{"type":"object","properties":{"time-entry":{"type":"object","properties":{"description":{"type":"string"},"person-id":{"type":"string"},"date":{"type":"string"},"time":{"type":"string"},"hours":{"type":"string"},"minutes":{"type":"string"},"isbillable":{"type":"string"},"tags":{"type":"string"}},"required":["date","time","hours","minutes"]}},"example":{"time-entry":{"description":"A Short Description for the update","person-id":"28726","date":"20140330","time":"10:10","hours":"2","minutes":"15","isbillable":"0","tags":"tag1,tag2,tag3"}}}}],"description":"Update a Time Entry","group":"Time Tracking"},{"endpoint":"/time_entries/{id}.json","method":"delete","description":"Delete a Time-Entry","group":"Time Tracking"},{"endpoint":"/projects/{id}/time/total.json","method":"get","parameters":[{"name":"fromDate","in":"query","description":"string (YYYYMMDD) - The start date to retrieve from\n","type":"string"},{"name":"fromTime","in":"query","description":"string (HH:MM) - The start time only if fromdate is passed","type":"string"},{"name":"toDate","in":"query","description":"string (YYYYMMDD) - The end date to retrieve to","type":"string"},{"name":"toTime","in":"query","description":"string (HH:MM) - The end time only if todate is passed","type":"string"},{"name":"userId","in":"query","description":"Return time logs for a specific user only","type":"integer"},{"name":"projectType","in":"query","description":"string (all, active, archived) - Filter the time entries to those in Active projects, Archived projects or All projects.","type":"string"},{"name":"page","in":"query","description":"The page number to show","type":"integer"},{"name":"pageSize","in":"query","description":"The number of results per page","type":"integer"}],"description":"Time Totals on a Project","group":"Time Tracking"},{"endpoint":"/time/total.json","method":"get","parameters":[{"name":"fromDate","in":"query","description":"string (YYYYMMDD) - The start date to retrieve from\n","type":"string"},{"name":"fromTime","in":"query","description":"string (HH:MM) - The start time only if fromdate is passed","type":"string"},{"name":"toDate","in":"query","description":"string (YYYYMMDD) - The end date to retrieve to","type":"string"},{"name":"toTime","in":"query","description":"string (HH:MM) - The end time only if todate is passed","type":"string"},{"name":"userId","in":"query","description":"Return time logs for a specific user only","type":"integer"},{"name":"projectType","in":"query","description":"string (all, active, archived) - Filter the time entries to those in Active projects, Archived projects or All projects.","type":"string"}],"description":"Get Total Time across an Account","group":"Time Tracking"},{"endpoint":"/projects/time/total.json","method":"get","description":"Time Totals across Projects","group":"Time Tracking"},{"endpoint":"/projects/estimatedtime/total.json.","method":"get","description":"Estimated Time Totals on Projects","group":"Time Tracking"},{"endpoint":"/tasklists/{id}/time/total.json","method":"get","parameters":[{"name":"fromDate","in":"query","description":"string (YYYYMMDD) - The start date to retrieve from\n","type":"string"},{"name":"fromTime","in":"query","description":"string (HH:MM) - The start time only if fromdate is passed","type":"string"},{"name":"toDate","in":"query","description":"string (YYYYMMDD) - The end date to retrieve to","type":"string"},{"name":"toTime","in":"query","description":"string (HH:MM) - The end time only if todate is passed","type":"string"},{"name":"userId","in":"query","description":"Return time logs for a specific user only","type":"integer"},{"name":"projectType","in":"query","description":"string (all, active, archived) - Filter the time entries to those in Active projects, Archived projects or All projects.","type":"string"}],"description":"Total Time on a Tasklist","group":"Time Tracking"},{"endpoint":"/tasks/{id}/time/total.json","method":"get","parameters":[{"name":"fromDate","in":"query","description":"string (YYYYMMDD) - The start date to retrieve from\n","type":"string"},{"name":"fromTime","in":"query","description":"string (HH:MM) - The start time only if fromdate is passed","type":"string"},{"name":"toDate","in":"query","description":"string (YYYYMMDD) - The end date to retrieve to","type":"string"},{"name":"toTime","in":"query","description":"string (HH:MM) - The end time only if todate is passed","type":"string"},{"name":"userId","in":"query","description":"Return time logs for a specific user only","type":"integer"},{"name":"projectType","in":"query","description":"string (all, active, archived) - Filter the time entries to those in Active projects, Archived projects or All projects.","type":"string"}],"description":"Total Time on a Task","group":"Time Tracking"},{"endpoint":"/people/{id}/loggedtime.json","method":"get","parameters":[{"name":"m","in":"query","description":"Month of the year. Needs to be used with 'y' param in order to work.","type":"string"},{"name":"y","in":"query","description":"year","type":"string","default":"YYYY"},{"name":"page","in":"query","type":"string"},{"name":"pageSize","in":"query","type":"string"}],"description":"Get Logged Time by Person","group":"Time Tracking"},{"endpoint":"/timers.json","method":"get","parameters":[{"name":"projectId","in":"query","description":"timers on a given project","type":"string"},{"name":"taskId","in":"query","description":"Timers on a task","type":"string"},{"name":"runningTimersOnly","in":"query","description":"all active timers or only timers which are currently running","type":"boolean"}],"description":"Get all Running Timers","group":"Time Tracking"},{"endpoint":"/me/timers.json","method":"get","parameters":[{"name":"projectId","in":"query","description":"timers on a given project","type":"string"},{"name":"taskId","in":"query","description":"Timers on a task","type":"string"},{"name":"runningTimersOnly","in":"query","description":"all active timers or only timers which are currently running","type":"boolean"}],"description":"Get all your Running Timers","group":"Time Tracking"},{"endpoint":"/people/{id}/timers.json","method":"get","parameters":[{"name":"projectId","in":"query","description":"timers on a given project","type":"string"},{"name":"taskId","in":"query","description":"Timers on a task","type":"string"},{"name":"runningTimersOnly","in":"query","description":"all active timers or only timers which are currently running","type":"boolean"}],"description":"Get all Running Timers for a specific Person","group":"Time Tracking"},{"endpoint":"/tasks/{id}/estimatedtime.json","method":"put","parameters":[{"name":"body","in":"body","schema":{"type":"object","properties":{"taskId":{"type":"integer"},"taskEstimatedMinutes":{"type":"integer"}},"example":{"taskId":123456789,"taskEstimatedMinutes":120}}}],"description":"Add a Time estimate to a Task","group":"Time Tracking"},{"endpoint":"/posts.json","method":"get","description":"Retrieve Latest Messages","group":"Messages"},{"endpoint":"/projects/{id}/posts.json","method":"get","description":"Retrieve Latest Messages by Project","group":"Messages"},{"endpoint":"/projects/{id}/posts.json","method":"post","parameters":[{"name":"body","in":"body","schema":{"type":"object","example":{"post":{"title":"Yet another task for tomorrow","category-id":"","notify":[""],"private":"0","body":"Yet another message content goes here","attachments":"","pendingFileAttachments":"","tags":"tag1,tag2,tag3"}},"properties":{"post":{"type":"object","required":["title","body"],"properties":{"title":{"type":"string"},"category-id":{"type":"string"},"notify":{"type":"string","description":"\"All\" - means notify all project users\n"},"private":{"type":"string"},"body":{"type":"string"},"attachments":{"type":"string"},"pendingFileAttachments":{"type":"string"},"tags":{"type":"string"}}}},"required":["post"]}}],"description":"Create a Message","group":"Messages"},{"endpoint":"/projects/{projectId}/cat/{categoryId}/posts.json","method":"get","description":"Retrieve Messages by Category","group":"Messages"},{"endpoint":"/posts/{id}.json","method":"get","description":"Retrieve a Single Message","group":"Messages"},{"endpoint":"/posts/{id}.json","method":"put","parameters":[{"name":"body","in":"body","schema":{"type":"object","example":{"post":{"title":"Message Title","category-id":"","notify":["999"],"private":"0","body":"Message content goes here","attachments":"","pendingFileAttachments":""}},"properties":{"post":{"type":"object","required":["title"],"properties":{"title":{"type":"string"},"category-id":{"type":"string"},"notify":{"type":"array","items":{"type":"string"}},"private":{"type":"string"},"body":{"type":"string"},"attachments":{"type":"string"},"pendingFileAttachments":{"type":"string"}}}},"required":["post"]}}],"description":"Update Message","group":"Messages"},{"endpoint":"/posts/{id}.json","method":"delete","description":"Delete Message","group":"Messages"},{"endpoint":"/projects/{id}/posts/archive.json","method":"get","description":"Get Archived Messages","group":"Messages"},{"endpoint":"/projects/{projectId}/cat/{categoryId}/posts/archive.json","method":"get","description":"Get Archived Messages by Category","group":"Messages"},{"endpoint":"/messages/{id}/archive.json","method":"put","description":"Archive a Message","group":"Messages"},{"endpoint":"/messages/{id}/unarchive.json","method":"put","description":"Un-archive a Message","group":"Messages"},{"endpoint":"/messages/{id}/markread.json","method":"put","description":"Mark Message As Read","group":"Messages"},{"endpoint":"/messageReplies/{id}.json","method":"get","description":"Retrieve a Single Message Reply","group":"Message Replies"},{"endpoint":"/messageReplies/{id}.json","method":"put","parameters":[{"name":"body","in":"body","schema":{"type":"object","example":{"messagereply":{"body":"Message Reply Body"}},"properties":{"messagereply":{"type":"object","properties":{"body":{"type":"string"},"notify":{"type":"string"}}}}}}],"description":"Update Message Reply","group":"Message Replies"},{"endpoint":"/messageReplies/{id}.json","method":"delete","description":"Delete Message Reply","group":"Message Replies"},{"endpoint":"/messages/{id}/replies.json","method":"get","parameters":[{"name":"page","in":"query","description":"The page you want","type":"integer"},{"name":"pageSize","in":"query","description":"The size of each page","type":"integer"}],"description":"Retrieve Replies to a Message","group":"Message Replies"},{"endpoint":"/messages/{id}/messageReplies.json","method":"post","parameters":[{"name":"body","in":"body","schema":{"type":"object","example":{"messagereply":{"body":"Reply Body","notify":[]}},"properties":{"messagereply":{"type":"object","properties":{"body":{"type":"string"},"notify":{"type":"string","description":"\"All\" - means notify all project users"}}}}}}],"description":"Create a Message Reply","group":"Message Replies"},{"endpoint":"/messageReplies/{id}/markread.json","method":"put","description":"Mark Message Reply as Read","group":"Message Replies"},{"endpoint":"/projects/{id}/messageCategories.json","method":"get","description":"Retrieving all of a Message Categories","group":"Message Categories"},{"endpoint":"/projects/{id}/messageCategories.json","method":"post","parameters":[{"name":"body","in":"body","schema":{"type":"object","properties":{"category":{"type":"object","required":["name"],"properties":{"name":{"type":"string"},"parent-id":{"type":"string","description":" If you pass in a parent id for a category, you will be creating a sub category. If you don't include this parameter, you will be not be creating a sub category."}}}},"required":["category"],"example":{"category":{"name":"Demo Category","parent-id":"999"}}}}],"description":"Creating Message Categories","group":"Message Categories"},{"endpoint":"/messageCategories/{id}.json","method":"get","description":"Retrieve a Single Message Category","group":"Message Categories"},{"endpoint":"/messageCategories/{id}.json","method":"put","parameters":[{"name":"body","in":"body","schema":{"type":"object","properties":{"category":{"type":"object","required":["name"],"properties":{"name":{"type":"string"},"parent-id":{"type":"string","description":"If you pass in a parent id for a category, you will be creating a sub category. If you don't include this parameter, you will be not be creating a sub category."}}}},"required":["category"],"example":{"category":{"name":"Demo Category 1","parent-id":"999"}}}}],"description":"Updating a Category","group":"Message Categories"},{"endpoint":"/messageCategories/{id}.json","method":"delete","description":"Deleting a Message Category","group":"Message Categories"},{"endpoint":"/comments/{id}.json","method":"delete","description":"Deleting a Comment","group":"Comments"},{"endpoint":"/comments/{id}.json","method":"put","parameters":[{"name":"body","in":"body","schema":{"type":"object","properties":{"comment":{"type":"object","required":["body"],"properties":{"body":{"type":"string"},"notify":{"type":"string"},"isprivate":{"type":"boolean"},"pendingFileAttachments":{"type":"string"},"content-type":{"type":"string"}}}},"required":["comment"],"example":{"comment":{"body":"Reply to earlier comment (edited)","notify":"","isprivate":false,"pendingFileAttachments":"","content-type":"TEXT"}}}}],"description":"Updating a Comment","group":"Comments"},{"endpoint":"/comments/{commentId}.json","method":"get","description":"Retrieving a Specific Comment","group":"Comments"},{"endpoint":"/{resource}/{resourceId}/comments.json","method":"get","description":"Retrieving Recent Comments","group":"Comments"},{"endpoint":"/{resource}/{resourceId}/comments.json","method":"post","parameters":[{"name":"body","in":"body","schema":{"type":"object","example":{"comment":{"body":"Reply to earlier comment","notify":"","isprivate":false,"pendingFileAttachments":"","content-type":"TEXT"}},"properties":{"comment":{"type":"object","properties":{"body":{"type":"string"},"notify":{"type":"string","description":"\"all\" - means notify all project users. Notify \"true\"is for only followers."},"isprivate":{"type":"boolean"},"pendingFileAttachments":{"type":"string"},"content-type":{"type":"string"}}}}}}],"description":"Creating a Comment","group":"Comments"},{"endpoint":"/comments.json","method":"get","parameters":[{"name":"page","in":"query","type":"integer"},{"name":"pageSize","in":"query","type":"integer"},{"in":"query","name":"objectType","type":"string","description":"Use this filter the comment type. Default=\"task,notebook,milestone,file,resource,link\""},{"in":"query","name":"userId","type":"string","description":"List of users who commented.\n"},{"in":"query","name":"orderBy","type":"string","description":"Defaulted to date.\n"},{"in":"query","name":"sortOrder","type":"string","description":"asc or desc. Default asc."},{"in":"query","name":"updatedAfterDate","type":"string","description":"YYYYMMDDHHMMSS format timestamp - will return only comments updated since this eg. 20121119013000.\n"},{"in":"query","name":"getLikes","type":"boolean"},{"in":"query","name":"getReactions","type":"boolean"},{"in":"query","name":"projectStatuses","type":"string","description":"Filter based on if the project is active. Default \"all\"."},{"in":"query","name":"projectCompanyIds","type":"integer","description":"List of company ids to return comments from thoses companies."},{"in":"query","name":"projectCategoryIds","type":"integer"},{"in":"query","name":"projectOwnerIds","type":"integer"},{"in":"query","name":"onlyStarredProjects","type":"boolean","description":"Defaulted to false.\n"},{"in":"query","name":"includeArchivedProjects","type":"boolean","description":"Defaulted to false."}],"description":"Retrieving Comments across all types","group":"Comments"},{"endpoint":"/comments/{id}/markread.json","method":"put","description":"Mark a Comment as Read","group":"Comments"},{"endpoint":"/invoices.json","method":"get","parameters":[{"name":"page","in":"query","description":"The page of results to return Inspect the response headers for x-page, x-pages, x-records","type":"integer"},{"name":"type","in":"query","description":"Which types of invoices to return - options are all, completed or active","type":"string"}],"description":"Get all Invoices across your Projects","group":"Invoices"},{"endpoint":"/projects/{id}/invoices.json","method":"get","parameters":[{"name":"type","in":"query","description":"Which types of invoices to return. Options are: all,completed or active","type":"string"},{"name":"page","in":"query","description":"The page of results to return Inspect the response headers for x-page, x-pages, x-records","type":"integer"}],"description":"Get all invoices on a single Project","group":"Invoices"},{"endpoint":"/projects/{id}/invoices.json","method":"post","parameters":[{"name":"body","in":"body","schema":{"type":"object","properties":{"invoice":{"type":"object","required":["number","display-date"],"properties":{"description":{"type":"string"},"fixed-cost":{"type":"string"},"number":{"type":"string"},"po-number":{"type":"string"},"display-date":{"type":"string"},"currency-code":{"type":"string"}}}},"required":["invoice"],"example":{"invoice":{"description":"New machinery as Clark dropped the last tractor","fixed-cost":"","number":"INV00001","po-number":"PO00002","display-date":"20150617","currency-code":"USD"}}}}],"description":"Create a New Invoice in a Project","group":"Invoices"},{"endpoint":"/currencycodes.json","method":"get","description":"Get a list of valid currency Codes","group":"Invoices"},{"endpoint":"/invoices/{invoiceId}.json","method":"get","description":"Get invoice Line Items","group":"Invoices"},{"endpoint":"/invoices/{id}.json","method":"put","parameters":[{"name":"body","in":"body","schema":{"type":"object","properties":{"invoice":{"type":"object","properties":{"description":{"type":"string"},"fixed-cost":{"type":"string"},"number":{"type":"string"},"po-number":{"type":"string"},"display-date":{"type":"string"},"currency-code":{"type":"string"}}}},"required":["invoice"],"example":{"invoice":{"description":"New machinery as Clark dropped the last tractor","fixed-cost":"","number":"INV00001","po-number":"PO00002","display-date":"20150617","currency-code":"USD"}}}}],"description":"Update a Specific Invoice","group":"Invoices"},{"endpoint":"/invoices/{id}.json","method":"delete","description":"Delete a Specific Invoice","group":"Invoices"},{"endpoint":"/invoices/{id}/complete.json","method":"put","description":"Mark a specific Invoice as Complete","group":"Invoices"},{"endpoint":"/invoices/{id}/uncomplete.json","method":"put","description":"Mark a specific Invoice as not Complete","group":"Invoices"},{"endpoint":"/invoices/{id}/lineitems.json","method":"put","parameters":[{"name":"body","in":"body","schema":{"type":"object","properties":{"lineitems":{"type":"object","properties":{"add":{"type":"object","properties":{"timelogs":{"type":"string"}}}}}},"example":{"lineitems":{"add":{"timelogs":"54321"}}}}}],"description":"Add a Time Entry to an Invoice","group":"Invoices"},{"endpoint":"/expenses.json","method":"get","description":"Get all Expenses across your Projects","group":"Expenses"},{"endpoint":"/expenses.json","method":"post","parameters":[{"name":"body","in":"body","schema":{"type":"object","properties":{"expense":{"type":"object","properties":{"name":{"type":"string"},"project-id":{"type":"string"},"description":{"type":"string"},"date":{"type":"string"},"cost":{"type":"string"}}}},"example":{"expense":{"name":"4 New Tyres","project-id":"1","description":"New run flats for tractor","date":"20150617","cost":"200.00"}}}}],"description":"Create a new Expense in a Project","group":"Expenses"},{"endpoint":"/projects/{id}/expenses.json","method":"get","parameters":[{"in":"query","name":"invoicedType","type":"string","description":"Options are Invoiced or NonInvoiced.\n"},{"in":"query","name":"fromDate","type":"string","description":"Filter what is returned by date."},{"in":"query","name":"toDate","type":"string","description":"Filter what is returned by date."},{"in":"query","name":"updatedAfterDate","type":"string","description":"Invoices updated after such date.\n"}],"description":"Get all Expenses on a single Project","group":"Expenses"},{"endpoint":"/expenses/{id}.json","method":"get","description":"Get a single Expense","group":"Expenses"},{"endpoint":"/expenses/{id}.json","method":"put","parameters":[{"name":"body","in":"body","schema":{"type":"object","properties":{"expense":{"type":"object","properties":{"name":{"type":"string"},"description":{"type":"string"},"date":{"type":"string"},"cost":{"type":"string"}}}},"example":{"expense":{"name":"4 New Tyres","description":"New run flats for tractor","date":"20150617","cost":"200.00"}}}}],"description":"Update a single Expense","group":"Expenses"},{"endpoint":"/expenses/{id}.json","method":"delete","description":"Delete a single Expense","group":"Expenses"},{"endpoint":"/risks.json","method":"get","description":"Get all Risks","group":"Risks"},{"endpoint":"/projects/{id}/risks.json","method":"get","description":"Retrieve all Risks in a Project","group":"Risks"},{"endpoint":"/projects/{id}/risks.json","method":"post","parameters":[{"name":"body","in":"body","schema":{"type":"object","properties":{"risk":{"type":"object","properties":{"source":{"type":"string"},"probabilityValue":{"type":"string"},"impactValue":{"type":"string"},"impactCost":{"type":"boolean"},"impactSchedule":{"type":"boolean"},"impactPerformance":{"type":"boolean"},"status":{"type":"string"},"mitigationPlan":{"type":"string"}}}}}}],"description":"Create a Risk on a Project","group":"Risks"},{"endpoint":"/risks/{id}.json","method":"get","description":"Get the details of a Single Risk","group":"Risks"},{"endpoint":"/risks/{id}.json","method":"put","parameters":[{"name":"body","in":"body","schema":{"type":"object","properties":{"risk":{"type":"object","properties":{"source":{"type":"string"},"probabilityValue":{"type":"string"},"impactValue":{"type":"string"},"impactCost":{"type":"boolean"},"impactSchedule":{"type":"boolean"},"impactPerformance":{"type":"boolean"},"status":{"type":"string"},"mitigationPlan":{"type":"string"}}}}}}],"description":"Updating a Risk on a Project","group":"Risks"},{"endpoint":"/risks/{id}.json","method":"delete","description":"Deleting a Risk on a Project","group":"Risks"},{"endpoint":"/projects/{id}/boards/columns.json","method":"get","parameters":[{"name":"page","in":"query","description":"The page number to get","type":"integer"},{"name":"pageSize","in":"query","description":"The number of records to return per page","type":"integer"},{"name":"showDeleted","in":"query","description":"Show deleted Columns in the API response or not","type":"boolean"},{"name":"sortBy","in":"query","description":"Sort by relevance eg. Date","type":"string"},{"name":"sortOrder","in":"query","description":"Sort by order eg. Ascending","type":"string"},{"name":"searchTerm","in":"query","description":"Show specific column by name","type":"string"},{"name":"getEmoji","in":"query","description":"Show emojis in API response or not","type":"boolean"},{"name":"includeDefaults","in":"query","description":"Show/hide default tasklists","type":"boolean"},{"name":"get","in":"query","description":"Show people and/or default columns","type":"string"},{"name":"updatedAfterDate","in":"query","description":"Show Columns updated after a given date","type":"string"},{"name":"getStats","in":"query","description":"Show/hide information about cards within the column","type":"boolean"}],"description":"List Columns","group":"Boards"},{"endpoint":"/projects/{id}/boards/columns.json","method":"post","parameters":[{"name":"body","in":"body","schema":{"type":"object","properties":{"column":{"type":"object","properties":{"name":{"type":"string"},"color":{"type":"string"}}}},"example":{"column":{"name":"new card name","color":"#1ABC9C"}}}}],"description":"Create a new Column","group":"Boards"},{"endpoint":"/boards/columns/{id}/cards.json","method":"get","parameters":[{"name":"page","in":"query","description":"The page number to get","type":"string"},{"name":"pageSize","in":"query","description":"The number of records to return per page","type":"integer"},{"name":"showDeleted","in":"query","description":"Show deleted Columns in the API response or not","type":"boolean"},{"name":"deletedAfterDate","in":"query","description":"deletedAfterDate","type":"string"},{"name":"updatedAfterDate","in":"query","description":"Show Columns updated after a given date","type":"string"},{"name":"searchTerm","in":"query","description":"An optional term to filter down to Cards containing this text in the Cards name","type":"string"}],"description":"List Cards in a Column","group":"Boards"},{"endpoint":"/boards/columns/{id}/cards.json","method":"post","parameters":[{"name":"body","in":"body","schema":{"type":"object","properties":{"card":{"type":"object","properties":{"taskId":{"type":"integer"}}},"positionAfterId":{"type":"integer"}},"example":{"card":{"taskId":12345},"positionAfterId":-1}}}],"description":"Add a card to a Column","group":"Boards"},{"endpoint":"/boards/columns/cards/{id}/move.json","method":"put","parameters":[{"name":"body","in":"body","schema":{"type":"object","properties":{"cardId":{"type":"integer"},"positionAfterId":{"type":"integer"},"columnId":{"type":"integer"}},"example":{"cardId":101,"positionAfterId":0,"columnId":1003}}}],"description":"Move a Card","group":"Boards"},{"endpoint":"/boards/columns/cards/{id}.json","method":"put","parameters":[{"name":"body","in":"body","schema":{"type":"object","properties":{"card":{"type":"object","properties":{"content":{"type":"string"},"taskListId":{"type":"string"},"start-date":{"type":"string"},"due-date":{"type":"string"},"responsible-party-id":{"type":"string"},"estimated-minutes":{"type":"integer"},"priority":{"type":"string"},"progress":{"type":"string"},"tags":{"type":"string"}}}},"example":{"card":{"content":"my updated card","taskListId":"123456789","start-date":"","due-date":"","responsible-party-id":"0","estimated-minutes":0,"priority":"none","progress":"0","tags":""}}}}],"description":"Edit a Card","group":"Boards"},{"endpoint":"/boards/columns/cards/{id}.json","method":"delete","description":"Remove a Card","group":"Boards"},{"endpoint":"/boards/columns/cards/{id}.json","method":"get","description":"Get a Card ","group":"Boards"},{"endpoint":"/boards/columns/{id}.json","method":"delete","description":"Delete a Column","group":"Boards"},{"endpoint":"/boards/columns/{id}.json","method":"put","parameters":[{"in":"path","name":"id","type":"string","required":true},{"in":"body","name":"body","schema":{"type":"object","properties":{"column":{"type":"object","properties":{"name":{"type":"string"},"color":{"type":"string"}}}}}}],"description":"Edit a Column","group":"Boards"},{"endpoint":"/boards/columns/{id}.json","method":"get","description":"Get a Column","group":"Boards"},{"endpoint":"/portfolio/boards.json","method":"get","description":"Boards in Portfolio View","group":"Portfolio boards"},{"endpoint":"/portfolio/boards.json","method":"post","parameters":[{"name":"body","in":"body","schema":{"type":"object","properties":{"board":{"type":"object","properties":{"name":{"type":"string"},"description":{"type":"string"},"color":{"type":"string"}}}},"example":{"board":{"name":"Board for Website planning","description":"Use this board to move projects into different stages of development and testing","color":""}}}}],"description":"Create a new Board","group":"Portfolio boards"},{"endpoint":"/portfolio/boards/{boardId}.json","method":"get","parameters":[{"name":"body","in":"body","schema":{"type":"object","properties":{"board":{"type":"object","properties":{"canEdit":{"type":"boolean"},"deletedDate":{"type":"string"},"description":{"type":"string"},"color":{"type":"string"},"stats":{"type":"object","properties":{"projects":{"type":"string"}}},"displayOrder":{"type":"string"},"id":{"type":"string"},"deleted":{"type":"boolean"},"dateCreated":{"type":"string"},"name":{"type":"string"}}},"STATUS":{"type":"string"}},"example":{"board":{"canEdit":true,"deletedDate":"","description":"","color":"#34495E","stats":{"projects":"1"},"displayOrder":"1000","id":"157","deleted":false,"dateCreated":"2019-01-30T10:32:05Z","name":"Board For All Projects"},"STATUS":"OK"}}}],"description":"Get a specific Board","group":"Portfolio boards"},{"endpoint":"/portfolio/boards/{boardId}.json","method":"put","parameters":[{"name":"body","in":"body","schema":{"type":"object","properties":{"board":{"type":"object","properties":{"name":{"type":"string"},"description":{"type":"string"},"color":{"type":"string"}}}},"example":{"board":{"name":"Board for Website ","description":"Changing description","color":"6866D0"}}}}],"description":"Edit a Board","group":"Portfolio boards"},{"endpoint":"/portfolio/boards/{boardId}.json","method":"delete","description":"Delete a board","group":"Portfolio boards"},{"endpoint":"/portfolio/boards/{boardId}/columns.json","method":"get","description":"Columns inside a Portfolio Board","group":"Portfolio boards"},{"endpoint":"/portfolio/boards/{boardId}/columns.json","method":"post","parameters":[{"in":"body","name":"body","schema":{"type":"object","properties":{"column":{"type":"object","properties":{"color":{"type":"string"},"name":{"type":"string"}}}}},"x-examples":{"application/json":{"column":{"color":"#FFFFF","name":"In Development"}}}}],"description":"Add a column to the given Board","group":"Portfolio boards"},{"endpoint":"/portfolio/columns/{columnId}/cards.json","method":"get","description":"Get Cards inside a Portfolio Column","group":"Portfolio boards"},{"endpoint":"/portfolio/columns/{columnId}/cards.json","method":"post","parameters":[{"name":"body","in":"body","schema":{"type":"object","properties":{"card":{"type":"object","properties":{"projectId":{"type":"string"}}}},"example":{"card":{"projectId":"123456"}}}}],"description":"Adding a Project to a Column from Backlog","group":"Portfolio boards"},{"endpoint":"/portfolio/cards/{cardId}.json","method":"get","description":"Get a specific Card inside a Column","group":"Portfolio boards"},{"endpoint":"/portfolio/cards/{cardId}.json","method":"delete","description":"Delete a Card in a Portfolio Column","group":"Portfolio boards"},{"endpoint":"/portfolio/cards/{cardId}/move.json","method":"put","parameters":[{"name":"body","in":"body","schema":{"type":"object","properties":{"cardId":{"type":"string"},"positionAfterId":{"type":"integer"},"columnId":{"type":"string"},"oldColumnId":{"type":"string"}},"example":{"cardId":"cardId","positionAfterId":0,"columnId":"newColumnId","oldColumnId":"oldColumnId"}}}],"description":"Move Projects on a Portfolio Board","group":"Portfolio boards"},{"endpoint":"/portfolio/columns/{columnId}.json","method":"put","parameters":[{"name":"body","in":"body","schema":{"type":"object","properties":{"column":{"type":"object","properties":{"name":{"type":"string"},"color":{"type":"string"}}}},"example":{"column":{"name":"Production","color":"#1ABC9C"}}}}],"description":"Edit a Portfolio Column","group":"Portfolio boards"},{"endpoint":"/portfolio/columns/{columnId}.json","method":"delete","description":"Delete a Portfolio Column","group":"Portfolio boards"},{"endpoint":"/portfolio/columns/{columnId}.json","method":"get","parameters":[],"description":"Get a Portfolio Column","group":"Portfolio boards"},{"endpoint":"/pendingfiles.json","method":"post","parameters":[{"name":"body","in":"body","schema":{"type":"object","properties":{"file":{"type":"object"}},"required":["file"]}}],"description":"Upload a File (Classic)","group":"File Uploading"},{"endpoint":"/projects/api/v1/pendingfiles/presignedurl.json","method":"put","description":"File Upload (Preferred)","group":"File Uploading"},{"endpoint":"/projects/{projectId}/updates.json","method":"get","description":"Get Project Updates","group":"Project Updates"},{"endpoint":"/projects/{projectId}/update.json","method":"get","description":"Get most recent Update","group":"Project Updates"},{"endpoint":"/projects/{projectId}/update.json","method":"post","parameters":[{"name":"body","in":"body","schema":{"type":"object","properties":{"update":{"type":"object","properties":{"text":{"type":"string"},"health":{"type":"string","default":"","description":"You can add health of the project when updating. It will attach a colour status to the project.\nOptions include:\n0 - no health status \n1 - need attention - Red\n2 - ready to release - yellow\n3 - in progress - green"}}},"notifyIds":{"type":"string"}},"example":{"update":{"text":"Project is on track. Will be delivered on time. ","health":"3"},"notifyIds":"1"}}}],"description":"Create a Project Update","group":"Project Updates"},{"endpoint":"/projects/updates/{updateId}.json","method":"put","parameters":[{"name":"body","in":"body","schema":{"type":"object","properties":{"update":{"type":"object","properties":{"text":{"type":"string"}}},"notifyIds":{"type":"string","description":"Id of people to notify"}},"example":{"update":{"text":" updating"},"notifyIds":""}}}],"description":"Modify a Project Update","group":"Project Updates"},{"endpoint":"/projects/updates/{updateId}.json","method":"delete","description":"Delete a Project Update","group":"Project Updates"},{"endpoint":"/projects/{projectId}/update/request.json","method":"put","parameters":[{"name":"body","in":"body","schema":{"type":"object","properties":{"userId":{"type":"string"},"content":{"type":"string"}},"example":{"userId":"189419","content":"Update please"}}}],"description":"Requesting a Project Update from a Project Owner","group":"Project Updates"},{"endpoint":"/projects/{projectId}/people/{personId}.json","method":"post","description":"Add a New User to a Project","group":"Permissions"},{"endpoint":"/projects/{projectId}/people/{personId}.json","method":"put","description":"Remove a User from a Project","group":"Project Roles"},{"endpoint":"/projects/{projectId}/people/{personId}.json","method":"get","description":"Get a Users Permissions on a Project","group":"Permissions"},{"endpoint":"/projects/{id}/roles.json","method":"get","description":"List Roles on a Project","group":"Project Roles"},{"endpoint":"/projects/{id}/roles.json","method":"post","parameters":[{"name":"body","in":"body","schema":{"type":"object","properties":{"role":{"type":"object","properties":{"users":{"type":"string"},"name":{"type":"string"},"description":{"type":"string"}}}},"example":{"role":{"users":"414,431","name":"Developers","description":"People actively developing this project"}}}}],"description":"Add a Role to a Project","group":"Project Roles"},{"endpoint":"/roles/{id}.json","method":"get","description":"Get an Individual Role","group":"Project Roles"},{"endpoint":"/roles/{id}.json","method":"put","parameters":[{"name":"body","in":"body","schema":{"type":"object","properties":{"role":{"type":"object","properties":{"users":{"type":"string"},"name":{"type":"string"},"description":{"type":"string"}}}},"example":{"role":{"users":"414,431","name":"Developers Edited","description":"People actively developing this project"}}}}],"description":"Update a Role on a Project","group":"Project Roles"},{"endpoint":"/roles/{id}.json","method":"delete","description":"Delete a Role","group":"Project Roles"},{"endpoint":"/projects/{projectId}/people/{id}.json","method":"put","parameters":[{"in":"body","name":"body","schema":{"type":"object","properties":{"permissions":{"type":"object","properties":{"canViewProjectUpdate":{"type":"boolean"},"viewTasksAndMilestones":{"type":"boolean"},"canAddMilestones":{"type":"boolean"},"canAddTaskLists":{"type":"boolean"},"viewEstimatedTime":{"type":"boolean"},"canAddTasks":{"type":"boolean"},"viewMessagesAndFiles":{"type":"boolean"},"canAddMessages":{"type":"boolean"},"canAddFiles":{"type":"boolean"},"viewTimeLog":{"type":"boolean"},"viewAllTimeLogs":{"type":"boolean"},"canLogTime":{"type":"boolean"},"canViewProjectBudget":{"type":"boolean"},"viewNotebook":{"type":"boolean"},"canAddNotebooks":{"type":"boolean"},"viewRiskRegister":{"type":"boolean"},"viewLinks":{"type":"boolean"},"canAddLinks":{"type":"boolean"},"canViewForms":{"type":"boolean"},"canAddForms":{"type":"boolean"},"canManageCustomFields":{"type":"boolean"},"projectAdministrator":{"type":"boolean","description":"Project administrators can perform all actions on a project."}}}}}}],"description":"Update a Users Permissions on a Project","group":"Permissions"},{"endpoint":"/{resource}/{resourceId}/likes.json","method":"get","description":"Get Likes on an Resource","group":"Likes"},{"endpoint":"/{resource}/{resourceId}/like.json","method":"put","description":"Like a Resource Item","group":"Likes"},{"endpoint":"/{resource}/{resourceId}/unlike.json","method":"put","description":"UnLike a Resource Item","group":"Likes"},{"endpoint":"/tags.json","method":"get","description":"List All Tags","group":"Tags"},{"endpoint":"/tags.json","method":"post","parameters":[{"name":"body","in":"body","schema":{"type":"object","properties":{"tag":{"type":"object","properties":{"name":{"type":"string"},"color":{"type":"string"}}}},"example":{"tag":{"name":"API","color":"#color"}}}}],"description":"Create a Single Tag","group":"Tags"},{"endpoint":"/tags/{id}.json","method":"get","description":"Get a single tag","group":"Tags"},{"endpoint":"/tags/{id}.json","method":"put","parameters":[{"name":"body","in":"body","schema":{"type":"object","properties":{"tag":{"type":"object","properties":{"name":{"type":"string"},"color":{"type":"string"}}}},"example":{"tag":{"name":"API","color":"#color"}}}}],"description":"Update a Single Tag","group":"Tags"},{"endpoint":"/tags/{id}.json","method":"delete","description":"Delete a Single Tag","group":"Tags"},{"endpoint":"/{resource}/{id}/tags.json","method":"get","description":"List All Tags for a Resource","group":"Tags"},{"endpoint":"/{resource}/{id}/tags.json","method":"put","parameters":[{"name":"body","in":"body","schema":{"type":"object","properties":{"tags":{"type":"object","properties":{"content":{"type":"string"}}}},"example":{"tags":{"content":"tag1,tag2,tag3"}}}}],"description":"Update Tags on a Resource","group":"Tags"},{"endpoint":"/projects/{id}/emailaddress.json","method":"get","description":"Get Project Email Address","group":"Project Email Addresses"},{"endpoint":"/projects/{id}/emailaddress.json","method":"put","parameters":[{"name":"body","in":"body","schema":{"type":"object","properties":{"emailaddress":{"type":"object","properties":{"code":{"type":"string"}}}},"example":{"emailaddress":{"code":"twdev"}}}}],"description":"Update Project Email Address","group":"Project Email Addresses"},{"endpoint":"/search.json","method":"get","parameters":[{"name":"projectId","in":"query","description":"The ProjectID you would like to search within","required":false,"type":"string"},{"name":"sortOrder","in":"query","description":"'name' or 'dateupdated' to decide the order of the search results","required":false,"type":"string"},{"name":"includeArchivedProjects","in":"query","description":"True or False to include archived items or not.","required":false,"type":"string"},{"name":"includeCompletedItems","in":"query","description":"True or False to include Completed items or not","required":false,"type":"string"},{"name":"pageSize","in":"query","description":"Define number of results to show, for example 20","required":false,"type":"string"},{"name":"searchFor","in":"query","required":true,"type":"string"},{"name":"searchTerm","in":"query","required":true,"type":"string"}],"description":"Search","group":"Search"},{"endpoint":"/webhooks.json","method":"get","description":"Get all Webhooks ","group":"Webhooks"},{"endpoint":"/webhooks.json","method":"post","parameters":[{"name":"body","in":"body","schema":{"type":"object","properties":{"webhook":{"type":"object","properties":{"event":{"type":"string"},"status":{"type":"string"},"url":{"type":"string"},"version":{"type":"string"}}},"STATUS":{"type":"string"}},"example":{"webhook":{"event":"TASK.CREATED","status":"ACTIVE","url":"http://myserver.com/tw-webhooks/receiver.php","version":"2"},"STATUS":"OK"}}}],"description":"Create a Webhook ","group":"Webhooks"},{"endpoint":"/webhooks/events.json","method":"get","description":"Get Webhook Events","group":"Webhooks"},{"endpoint":"/webhooks/{id}.json","method":"get","description":"Get a specific Webhook","group":"Webhooks"},{"endpoint":"/webhooks/{id}.json","method":"put","parameters":[{"name":"body","in":"body","schema":{"type":"object","properties":{"webhook":{"type":"object","properties":{"event":{"type":"string"},"status":{"type":"string"},"url":{"type":"string"}}},"STATUS":{"type":"string"}},"example":{"webhook":{"event":"TASK.CREATED","status":"ACTIVE","url":"http://myserver.com/tw-webhooks/receiver.php"},"STATUS":"OK"}}}],"description":"Update a Webhook ","group":"Webhooks"},{"endpoint":"/webhooks/{id}.json","method":"delete","description":"Delete a specific Webhook ","group":"Webhooks"},{"endpoint":"/{webhookid}/deliveries.json","method":"get","description":"Get deliveries from specific Webhook","group":"Webhooks"},{"endpoint":"/webhook/{webhookid}/redeliver.json","method":"post","parameters":[{"name":"body","in":"body","schema":{"type":"object","properties":{"uuid":{"type":"string"}},"example":{"uuid":"23232342"}}}],"description":"Resend a Specific Webhook","group":"Webhooks"},{"endpoint":"/webhooks/{id}/pause.json","method":"put","description":"Pause a Webhook","group":"Webhooks"},{"endpoint":"/webhooks/{id}/resume.json","method":"put","description":"Resume a Webhook","group":"Webhooks"},{"endpoint":"/projects/{id}/webhooks","method":"put","description":"Enable Webhooks","group":"Webhooks"},{"endpoint":"/projects/{id}/webhooks","method":"post","parameters":[{"in":"body","name":"body","schema":{"type":"object","properties":{"webhook":{"type":"object","properties":{"event":{"type":"string"},"url":{"type":"string"},"version":{"type":"string"},"contentType":{"type":"string"},"token":{"type":"string"}}}}},"x-examples":{"application/json":{"webhook":{"event":"CARD.CREATED","url":"http://requestbin.com/1","version":"2","contentType":"application/json","token":""}}}}],"description":"Create a Webhook on a Project","group":"Webhooks"},{"endpoint":"/webhooks/disable.json","method":"put","description":"Disable Webhooks ","group":"Webhooks"},{"endpoint":"/v/2/tasks/{id}/comments.json","method":"get","parameters":[{"name":"page","in":"query","required":false,"type":"number"},{"name":"pageSize","in":"query","required":false,"type":"string"},{"name":"getLikes","in":"query","required":false,"type":"string"},{"name":"getEmoji","in":"query","required":false,"type":"string"},{"name":"getReactions","in":"query","required":true,"type":"string"},{"name":"orderBy","in":"query","description":"date","required":false,"type":"string","default":""},{"name":"sortOrder","in":"query","required":false,"type":"string","default":"asc"}],"description":"Get Comment Reactions on a task","group":"Reactions"},{"endpoint":"/comments/{commentId}/reactions.json","method":"get","parameters":[{"name":"reactionType","in":"query","required":true,"type":"string"}],"description":"Get Reactions on a specific Comment","group":"Reactions"},{"endpoint":"/projects/updates/{updateId}/reactions.json","method":"get","parameters":[{"name":"getReactions","in":"query","required":true,"type":"string"},{"name":"body","in":"body","schema":{"type":"object","properties":{"getReactions":{"type":"boolean"}}}}],"description":"Get Reactions to a Project Update","group":"Reactions"},{"endpoint":"/v/2/messages/{messageId}.json","method":"get","parameters":[{"name":"getReactions","in":"query","required":true,"type":"boolean"}],"description":"Get Reactions to a Message","group":"Reactions"},{"endpoint":"/v/2/messages/{messageId}/replies.json","method":"get","parameters":[{"name":"getReactions","in":"query","type":"boolean"}],"description":"Get Reactions on Message Replies","group":"Reactions"},{"endpoint":"/comments/{commentId}/react.json","method":"put","description":"React to a Comment","group":"Reactions"},{"endpoint":"/messagereplies/{messageId}/react.json","method":"put","parameters":[{"name":"body","in":"body","schema":{"type":"object","properties":{"reactionType":{"type":"string"},"get":{"type":"string"}},"example":{"reactionType":"heart","get":"reactions"}}}],"description":"React to a Message","group":"Reactions"},{"endpoint":"/messagereplies/{messagereplyId}/react.json","method":"put","parameters":[{"name":"body","in":"body","schema":{"type":"object","properties":{"reactionType":{"type":"string"},"get":{"type":"string"}},"example":{"reactionType":"heart","get":"reactions"}}}],"description":"React to a Message Reply","group":"Reactions"},{"endpoint":"/projects/updates/{updateId}/react.json","method":"put","parameters":[{"name":"body","in":"body","schema":{"type":"object","properties":{"reactionType":{"type":"string"},"get":{"type":"string"}},"example":{"reactionType":"frown","get":"reactions"}}}],"description":"React to a Project Update","group":"Reactions"},{"endpoint":"/{resource}/{id}/unreact.json","method":"put","parameters":[{"name":"body","in":"body","schema":{"type":"object","properties":{"reactionType":{"type":"string"},"get":{"type":"string"}},"example":{"reactionType":"frown","get":"reactions"}}}],"description":"Unreacting to a Comment/Message/ProjectUpdate","group":"Reactions"},{"endpoint":"/workload.json","method":"get","parameters":[{"name":"startDate","in":"query","description":"Start date in the format of yyyymmdd","required":true,"type":"string"},{"name":"endDate","in":"query","description":"End date in the format of yyyymmdd","required":true,"type":"string"},{"name":"includeTasksWithoutDates","in":"query","description":"Include tasks without Due dates","required":false,"type":"boolean","default":false},{"name":"distributeEstimatedTimeToAssignees","in":"query","required":false,"type":"boolean","default":false},{"name":"prorataEstimatedTime","in":"query","required":false,"type":"string"},{"name":"page","in":"query","description":"The Page number to view","required":false,"type":"integer"},{"name":"pageSize","in":"query","description":"The number of results per page","required":false,"type":"integer"},{"name":"sortBy","in":"query","description":"Sort by 'users', 'company' or 'project'\n","required":false,"type":"string"},{"name":"tagIds","in":"query","required":false,"type":"integer"},{"name":"matchAllTags","in":"query","required":false,"type":"boolean"},{"name":"excludeTagIds","in":"query","required":false,"type":"integer"},{"name":"matchAllExcludedTags","in":"query","required":false,"type":"boolean"},{"name":"onlyUntaggedTasks","in":"query","required":false,"type":"boolean"},{"name":"includeCapacity","in":"query","description":"When sorting by user, returns a new capacity field for each user that represents the percentage of workload compared to the available time","required":false,"type":"boolean"},{"name":"showOnlyUsersWithRemainingCapacity","in":"query","description":"Only return users where capacity is bellow 100%, so we can detect the users that can take more tasks","required":false,"type":"boolean"},{"name":"includeAllUsers","in":"query","description":"Side load all other users that we can assign a task in the installation","required":false,"type":"boolean"},{"name":"userIdsToInclude","in":"query","description":"Always include this users capacity, even if not matching the current filter","required":false,"type":"string","default":"list of numeric numbers"},{"name":"userCompanyIds","in":"query","description":"Filter by users' company IDs","required":false,"type":"string","default":"List of numeric numbers"},{"name":"userSortBy","in":"query","description":"After sorting by user, this allows to sort the users by sub-categories","required":false,"type":"string","default":"Options 'name', 'company' and 'capacity'"},{"name":"searchUserName","in":"query","description":"Filter by the user names","required":false,"type":"string"}],"description":"Get Workload","group":"Workload"},{"endpoint":"/trashcan/projects/{id}.json","method":"get","description":"Get a Project Resources in the Trashcan","group":"Trashcan"},{"endpoint":"/trashcan/{resource}/{id}/restore.json","method":"put","description":"Restore Resource Items from the Trashcan","group":"Trashcan"},{"endpoint":"/timezones.json","method":"get","description":"Get Timezones","group":"Timezones"},{"endpoint":"/projects/template.json","method":"post","parameters":[{"name":"body","in":"body","schema":{"type":"object","example":{"project":{"name":"Test Template","description":"Test Description ","use-tasks":true,"use-milestones":true,"use-messages":true,"use-files":true,"use-time":true,"use-notebook":true,"use-riskregister":false,"use-links":true,"use-billing":true,"use-comments":false,"category-id":1,"tags":"Management","templateDateTargetDefault":"start","people":"150381,222618","projectOwnerId":"150381","companyId":62917}},"properties":{"project":{"type":"object","properties":{"name":{"type":"string"},"description":{"type":"string"},"use-tasks":{"type":"boolean"},"use-milestones":{"type":"boolean"},"use-messages":{"type":"boolean"},"use-files":{"type":"boolean"},"use-time":{"type":"boolean"},"use-notebook":{"type":"boolean"},"use-riskregister":{"type":"boolean"},"use-links":{"type":"boolean"},"use-billing":{"type":"boolean"},"use-comments":{"type":"boolean"},"category-id":{"type":"integer"},"tags":{"type":"string"},"templateDateTargetDefault":{"type":"string","description":"\"start\" OR \"end\""},"people":{"type":"string"},"projectOwnerId":{"type":"string"},"companyId":{"type":"integer","description":"Not set results to Owner Company by default"},"grant-access-to":{"type":"string","description":"list of user ids comma separated","example":"12345, 123545"}},"required":["templateDateTargetDefault"]}}}}],"description":"Create a Project Template","group":"Project Templates"},{"endpoint":"/projects/{TemplateID}.json","method":"put","parameters":[{"name":"body","in":"body","schema":{"type":"object","properties":{"project":{"type":"object","required":["name","templateDateTargetDefault"],"properties":{"name":{"type":"string"},"description":{"type":"string"},"use-tasks":{"type":"boolean"},"use-milestones":{"type":"boolean"},"use-messages":{"type":"boolean"},"use-files":{"type":"boolean"},"use-time":{"type":"boolean"},"use-notebook":{"type":"boolean"},"use-riskregister":{"type":"boolean"},"use-links":{"type":"boolean"},"use-billing":{"type":"boolean"},"use-comments":{"type":"boolean"},"category-id":{"type":"integer"},"tags":{"type":"string"},"templateDateTargetDefault":{"type":"string"},"people":{"type":"string"},"projectOwnerId":{"type":"string"},"companyId":{"type":"integer"}}}},"required":["project"],"example":{"project":{"name":"Test Template","description":"Test Description ","use-tasks":true,"use-milestones":true,"use-messages":true,"use-files":true,"use-time":true,"use-notebook":true,"use-riskregister":false,"use-links":true,"use-billing":true,"use-comments":false,"category-id":1,"tags":"Management","templateDateTargetDefault":"start","people":"150381,222618","projectOwnerId":"150381","companyId":62917}}}}],"description":"Update a specific Project Template","group":"Project Templates"},{"endpoint":"/projects/{TemplateID}.json","method":"delete","description":"Delete a Project Template","group":"Project Templates"}]