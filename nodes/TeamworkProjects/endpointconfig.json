[
	{
		"endpoint": "/projects/api/v3/activity/{activityLogId}",
		"method": "delete",
		"parameters": [{ "in": "path", "name": "activityLogId", "required": true, "type": "integer" }],
		"description": "Deletes an activity item.",
		"group": "Activity"
	},
	{
		"endpoint": "/projects/api/v3/allocations/{allocationId}/time.json",
		"method": "get",
		"parameters": [
			{
				"description": "filter by updated after date",
				"format": "date-time",
				"in": "query",
				"name": "updatedAfter",
				"type": "string"
			},
			{
				"description": "filter by a starting date",
				"format": "date-time",
				"in": "query",
				"name": "startDate",
				"type": "string"
			},
			{
				"description": "define the format of the report",
				"in": "query",
				"name": "reportFormat",
				"type": "string"
			},
			{
				"description": "filter by project status",
				"enum": ["active", "current", "late", "upcoming", "completed", "deleted"],
				"in": "query",
				"name": "projectStatus",
				"type": "string"
			},
			{
				"default": "asc",
				"description": "order mode",
				"enum": ["asc", "desc"],
				"in": "query",
				"name": "orderMode",
				"type": "string"
			},
			{
				"default": "date",
				"description": "sort order",
				"enum": ["company", "date", "dateupdated", "project", "task", "tasklist", "user"],
				"in": "query",
				"name": "orderBy",
				"type": "string"
			},
			{
				"default": "all",
				"description": "filter by invoiced type",
				"enum": ["all", "invoiced", "noninvoiced"],
				"in": "query",
				"name": "invoicedType",
				"type": "string"
			},
			{
				"description": "filter by an ending date",
				"format": "date-time",
				"in": "query",
				"name": "endDate",
				"type": "string"
			},
			{
				"default": "all",
				"description": "filter by billable type",
				"enum": ["all", "billable", "non-billable"],
				"in": "query",
				"name": "billableType",
				"type": "string"
			},
			{
				"description": "filter by ticket id",
				"in": "query",
				"name": "ticketId",
				"type": "integer"
			},
			{
				"description": "filter by tasklist id",
				"in": "query",
				"name": "tasklistId",
				"type": "integer"
			},
			{
				"description": "filter by task id (deprecated, use taskIds)",
				"in": "query",
				"name": "taskId",
				"type": "integer"
			},
			{
				"description": "filter by project id (deprecated, use projectIds)",
				"in": "query",
				"name": "projectId",
				"type": "integer"
			},
			{
				"default": "50",
				"description": "number of items in a page",
				"in": "query",
				"name": "pageSize",
				"type": "integer"
			},
			{
				"default": "1",
				"description": "page number",
				"in": "query",
				"name": "page",
				"type": "integer"
			},
			{
				"description": "filter by budget id",
				"in": "query",
				"name": "budgetId",
				"type": "integer"
			},
			{ "in": "path", "name": "allocationId", "required": true, "type": "integer" },
			{
				"description": "filter by allocation id",
				"in": "query",
				"name": "allocationId",
				"type": "integer"
			},
			{
				"default": "false",
				"description": "include deleted items",
				"in": "query",
				"name": "showDeleted",
				"type": "boolean"
			},
			{
				"description": "filter by starred projects only",
				"in": "query",
				"name": "onlyStarredProjects",
				"type": "boolean"
			},
			{
				"description": "match all task tags",
				"in": "query",
				"name": "matchAllTaskTags",
				"type": "boolean"
			},
			{ "description": "match all tags", "in": "query", "name": "matchAllTags", "type": "boolean" },
			{
				"description": "match all project tags",
				"in": "query",
				"name": "matchAllProjectTags",
				"type": "boolean"
			},
			{
				"description": "generate a report document",
				"in": "query",
				"name": "isReportDownload",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "include totals",
				"in": "query",
				"name": "includeTotals",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "include permissions",
				"in": "query",
				"name": "includePermissions",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "include descendants",
				"in": "query",
				"name": "includeDescendants",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "include archived projects",
				"in": "query",
				"name": "includeArchivedProjects",
				"type": "boolean"
			},
			{
				"description": "filter by task tag ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "taskTagIds",
				"type": "array"
			},
			{
				"description": "filter by task ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "taskIds",
				"type": "array"
			},
			{
				"description": "filter by tag ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "tagIds",
				"type": "array"
			},
			{
				"description": "customise the report by selecting columns",
				"in": "query",
				"items": { "type": "string" },
				"name": "selectedColumns",
				"type": "array"
			},
			{
				"description": "filter by project company ids (deprecated, use projectCompanyIds)",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectsFromCompanyId",
				"type": "array"
			},
			{
				"description": "filter by project tag ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectTagIds",
				"type": "array"
			},
			{
				"description": "filter by project statuses",
				"in": "query",
				"items": {
					"enum": ["active", "current", "late", "upcoming", "completed", "deleted"],
					"type": "string"
				},
				"name": "projectStatuses",
				"type": "array"
			},
			{
				"description": "filter by project owner ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectOwnerIds",
				"type": "array"
			},
			{
				"description": "filter by project ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectIds",
				"type": "array"
			},
			{
				"description": "filter by project healths\n\n0: not set\n1: bad\n2: ok\n3: good",
				"in": "query",
				"items": { "enum": ["0", "1", "2", "3"], "type": "integer" },
				"name": "projectHealths",
				"type": "array"
			},
			{
				"description": "filter by project company ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectCompanyIds",
				"type": "array"
			},
			{
				"description": "filter by project category ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectCategoryIds",
				"type": "array"
			},
			{
				"description": "include",
				"in": "query",
				"items": {
					"enum": [
						"projects",
						"projects.companies",
						"projects.categories",
						"tags",
						"tasks",
						"tasks.parentTasks",
						"tasks.tasklists",
						"users"
					],
					"type": "string"
				},
				"name": "include",
				"type": "array"
			},
			{
				"description": "filter by ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "ids",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"firstName",
						"lastName",
						"title",
						"email",
						"companyId",
						"company",
						"isAdmin",
						"isClientUser",
						"isServiceAccount",
						"type",
						"deleted",
						"avatarUrl",
						"lengthOfDay",
						"workingHoursId",
						"workingHour",
						"userRate",
						"userCost",
						"canAddProjects"
					],
					"type": "string"
				},
				"name": "fields[users]",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"dateCreated",
						"minutes",
						"description",
						"timeLogged",
						"billable",
						"deleted",
						"dateDeleted",
						"hasStartTime",
						"dateEdited",
						"deskTicketId",
						"userId",
						"taskId",
						"projectId",
						"loggedByUserId",
						"deletedByUserId",
						"editedByUserId",
						"taskIdPreMove",
						"projectBillingInvoiceId"
					],
					"type": "string"
				},
				"name": "fields[timelogs]",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"name",
						"dateUpdated",
						"parentTaskId",
						"isPrivate",
						"status",
						"tasklistId",
						"startDate",
						"dueDate"
					],
					"type": "string"
				},
				"name": "fields[tasks]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name", "projectId", "milestoneId"], "type": "string" },
				"name": "fields[tasklists]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name", "color", "count"], "type": "string" },
				"name": "fields[tags]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name"], "type": "string" },
				"name": "fields[projects]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name", "color"], "type": "string" },
				"name": "fields[projectcategories]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name", "logoUploadedToServer", "logoImage"], "type": "string" },
				"name": "fields[companies]",
				"type": "array"
			},
			{
				"description": "filter by assigned user ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "assignedToUserIds",
				"type": "array"
			},
			{
				"description": "filter by assigned team ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "assignedToTeamIds",
				"type": "array"
			},
			{
				"description": "filter by assigned company ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "assignedToCompanyIds",
				"type": "array"
			}
		],
		"description": "Get time entries for a specific allocation",
		"group": "TimeTracking"
	},
	{
		"endpoint": "/projects/api/v3/budget/notifications/{notificationId}.json",
		"method": "delete",
		"parameters": [{ "in": "path", "name": "notificationId", "required": true, "type": "integer" }],
		"description": "Delete an existing notification.",
		"group": "Budgets"
	},
	{
		"endpoint": "/projects/api/v3/budget/notifications/{notificationId}.json",
		"method": "patch",
		"parameters": [
			{
				"in": "body",
				"name": "notification.ProjectBudgetRequest",
				"required": true,
				"schema": { "$ref": "#/definitions/notification.ProjectBudgetRequest" }
			},
			{ "in": "path", "name": "notificationId", "required": true, "type": "integer" }
		],
		"description": "Update an existing notification.",
		"group": "Budgets"
	},
	{
		"endpoint": "/projects/api/v3/budgets/:id/tasklists/budgets/bulk/add.json",
		"method": "post",
		"parameters": [
			{
				"in": "body",
				"name": "tasklistbudget.BulkAddBudgetRequest",
				"required": true,
				"schema": { "$ref": "#/definitions/tasklistbudget.BulkAddBudgetRequest" }
			}
		],
		"description": "Creates new tasklist budgets",
		"group": "Budgets"
	},
	{
		"endpoint": "/projects/api/v3/calendar/events.csv",
		"method": "get",
		"parameters": [
			{
				"description": "events that happen after this date",
				"format": "date",
				"in": "query",
				"name": "startDate",
				"type": "string"
			},
			{
				"description": "define the format of the report",
				"in": "query",
				"name": "reportFormat",
				"type": "string"
			},
			{
				"description": "events that happen before this date",
				"format": "date",
				"in": "query",
				"name": "endDate",
				"type": "string"
			},
			{
				"default": "false",
				"description": "include tasks",
				"in": "query",
				"name": "withTasks",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "include milestones",
				"in": "query",
				"name": "withMilestones",
				"type": "boolean"
			},
			{
				"default": "true",
				"description": "include events",
				"in": "query",
				"name": "withEvents",
				"type": "boolean"
			},
			{
				"description": "generate a report document",
				"in": "query",
				"name": "isReportDownload",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "should include tags",
				"in": "query",
				"name": "includeTags",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "when filtering events with targetUserIDs, display only when attending the event",
				"in": "query",
				"name": "attendingOnly",
				"type": "boolean"
			},
			{
				"description": "filter calendar events to show only the ones in typeIDs",
				"in": "query",
				"items": { "type": "integer" },
				"name": "typeIDs",
				"type": "array"
			},
			{
				"description": "filter to show only events for the provided user",
				"in": "query",
				"items": { "type": "integer" },
				"name": "targetUserIDs",
				"type": "array"
			},
			{
				"description": "filter to show only events for the provided projects",
				"in": "query",
				"items": { "type": "integer" },
				"name": "targetProjectIDs",
				"type": "array"
			}
		],
		"description": "Generate agenda report in CSV format",
		"group": "CalendarEvents"
	},
	{
		"endpoint": "/projects/api/v3/calendar/events.html",
		"method": "get",
		"parameters": [
			{
				"description": "events that happen after this date",
				"format": "date",
				"in": "query",
				"name": "startDate",
				"type": "string"
			},
			{
				"description": "define the format of the report",
				"in": "query",
				"name": "reportFormat",
				"type": "string"
			},
			{
				"description": "events that happen before this date",
				"format": "date",
				"in": "query",
				"name": "endDate",
				"type": "string"
			},
			{
				"default": "false",
				"description": "include tasks",
				"in": "query",
				"name": "withTasks",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "include milestones",
				"in": "query",
				"name": "withMilestones",
				"type": "boolean"
			},
			{
				"default": "true",
				"description": "include events",
				"in": "query",
				"name": "withEvents",
				"type": "boolean"
			},
			{
				"description": "generate a report document",
				"in": "query",
				"name": "isReportDownload",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "should include tags",
				"in": "query",
				"name": "includeTags",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "when filtering events with targetUserIDs, display only when attending the event",
				"in": "query",
				"name": "attendingOnly",
				"type": "boolean"
			},
			{
				"description": "filter calendar events to show only the ones in typeIDs",
				"in": "query",
				"items": { "type": "integer" },
				"name": "typeIDs",
				"type": "array"
			},
			{
				"description": "filter to show only events for the provided user",
				"in": "query",
				"items": { "type": "integer" },
				"name": "targetUserIDs",
				"type": "array"
			},
			{
				"description": "filter to show only events for the provided projects",
				"in": "query",
				"items": { "type": "integer" },
				"name": "targetProjectIDs",
				"type": "array"
			}
		],
		"description": "Generate agenda report in HTML format",
		"group": "CalendarEvents"
	},
	{
		"endpoint": "/projects/api/v3/calendar/events.pdf",
		"method": "get",
		"parameters": [
			{
				"description": "events that happen after this date",
				"format": "date",
				"in": "query",
				"name": "startDate",
				"type": "string"
			},
			{
				"description": "define the format of the report",
				"in": "query",
				"name": "reportFormat",
				"type": "string"
			},
			{
				"description": "events that happen before this date",
				"format": "date",
				"in": "query",
				"name": "endDate",
				"type": "string"
			},
			{
				"default": "false",
				"description": "include tasks",
				"in": "query",
				"name": "withTasks",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "include milestones",
				"in": "query",
				"name": "withMilestones",
				"type": "boolean"
			},
			{
				"default": "true",
				"description": "include events",
				"in": "query",
				"name": "withEvents",
				"type": "boolean"
			},
			{
				"description": "generate a report document",
				"in": "query",
				"name": "isReportDownload",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "should include tags",
				"in": "query",
				"name": "includeTags",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "when filtering events with targetUserIDs, display only when attending the event",
				"in": "query",
				"name": "attendingOnly",
				"type": "boolean"
			},
			{
				"description": "filter calendar events to show only the ones in typeIDs",
				"in": "query",
				"items": { "type": "integer" },
				"name": "typeIDs",
				"type": "array"
			},
			{
				"description": "filter to show only events for the provided user",
				"in": "query",
				"items": { "type": "integer" },
				"name": "targetUserIDs",
				"type": "array"
			},
			{
				"description": "filter to show only events for the provided projects",
				"in": "query",
				"items": { "type": "integer" },
				"name": "targetProjectIDs",
				"type": "array"
			}
		],
		"description": "Generate agenda report in PDF format",
		"group": "CalendarEvents"
	},
	{
		"endpoint": "/projects/api/v3/calendar/events.xlsx",
		"method": "get",
		"parameters": [
			{
				"description": "events that happen after this date",
				"format": "date",
				"in": "query",
				"name": "startDate",
				"type": "string"
			},
			{
				"description": "define the format of the report",
				"in": "query",
				"name": "reportFormat",
				"type": "string"
			},
			{
				"description": "events that happen before this date",
				"format": "date",
				"in": "query",
				"name": "endDate",
				"type": "string"
			},
			{
				"default": "false",
				"description": "include tasks",
				"in": "query",
				"name": "withTasks",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "include milestones",
				"in": "query",
				"name": "withMilestones",
				"type": "boolean"
			},
			{
				"default": "true",
				"description": "include events",
				"in": "query",
				"name": "withEvents",
				"type": "boolean"
			},
			{
				"description": "generate a report document",
				"in": "query",
				"name": "isReportDownload",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "should include tags",
				"in": "query",
				"name": "includeTags",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "when filtering events with targetUserIDs, display only when attending the event",
				"in": "query",
				"name": "attendingOnly",
				"type": "boolean"
			},
			{
				"description": "filter calendar events to show only the ones in typeIDs",
				"in": "query",
				"items": { "type": "integer" },
				"name": "typeIDs",
				"type": "array"
			},
			{
				"description": "filter to show only events for the provided user",
				"in": "query",
				"items": { "type": "integer" },
				"name": "targetUserIDs",
				"type": "array"
			},
			{
				"description": "filter to show only events for the provided projects",
				"in": "query",
				"items": { "type": "integer" },
				"name": "targetProjectIDs",
				"type": "array"
			}
		],
		"description": "Generate agenda report in XLSX format",
		"group": "CalendarEvents"
	},
	{
		"endpoint": "/projects/api/v3/companies.json",
		"method": "get",
		"parameters": [
			{
				"description": "filter by updated after date (deprecated, use updatedAfter)",
				"format": "date-time",
				"in": "query",
				"name": "updatedAfterDate",
				"type": "string"
			},
			{
				"description": "filter by updated after date",
				"format": "date-time",
				"in": "query",
				"name": "updatedAfter",
				"type": "string"
			},
			{
				"description": "filter by company name and description",
				"in": "query",
				"name": "searchTerm",
				"type": "string"
			},
			{
				"default": "company",
				"description": "define the type of the report",
				"enum": ["company", "client"],
				"in": "query",
				"name": "reportType",
				"type": "string"
			},
			{
				"description": "define the format of the report",
				"in": "query",
				"name": "reportFormat",
				"type": "string"
			},
			{
				"default": "asc",
				"description": "order mode",
				"enum": ["asc", "desc"],
				"in": "query",
				"name": "orderMode",
				"type": "string"
			},
			{
				"default": "ownercompany",
				"description": "order by",
				"enum": [
					"name",
					"accounts",
					"clients",
					"collaborators",
					"contacts",
					"country",
					"website",
					"email",
					"phone",
					"fax",
					"industry",
					"dateadded",
					"ownercompany"
				],
				"in": "query",
				"name": "orderBy",
				"type": "string"
			},
			{
				"description": "filter by first letter of company name",
				"in": "query",
				"name": "firstLetter",
				"type": "string"
			},
			{
				"description": "filter by created after date (deprecated, use createdAfter)",
				"format": "date-time",
				"in": "query",
				"name": "createdAfterDate",
				"type": "string"
			},
			{
				"description": "filter by created after date",
				"format": "date-time",
				"in": "query",
				"name": "createdAfter",
				"type": "string"
			},
			{
				"default": "50",
				"description": "number of items in a page",
				"in": "query",
				"name": "pageSize",
				"type": "integer"
			},
			{
				"default": "1",
				"description": "page number",
				"in": "query",
				"name": "page",
				"type": "integer"
			},
			{
				"default": "false",
				"description": "return unfiltered company initial letter counts",
				"in": "query",
				"name": "returnLetters",
				"type": "boolean"
			},
			{
				"description": "generate a report document",
				"in": "query",
				"name": "isReportDownload",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "include stats of company tasks and projects",
				"in": "query",
				"name": "getStats",
				"type": "boolean"
			},
			{
				"default": "true",
				"description": "parse emojis to unicode",
				"in": "query",
				"name": "getEmoji",
				"type": "boolean"
			},
			{
				"description": "include full profile",
				"in": "query",
				"name": "fullProfile",
				"type": "boolean"
			},
			{
				"description": "exclude the owner company",
				"in": "query",
				"name": "excludeOwnerCompany",
				"type": "boolean"
			},
			{
				"description": "customise the report by selecting columns",
				"in": "query",
				"items": { "type": "string" },
				"name": "selectedColumns",
				"type": "array"
			},
			{
				"description": "include",
				"in": "query",
				"items": {
					"enum": ["tags", "countries", "industries", "clientmanagedby", "companyupdates"],
					"type": "string"
				},
				"name": "include",
				"type": "array"
			},
			{
				"description": "filter by ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "ids",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"firstName",
						"lastName",
						"title",
						"email",
						"companyId",
						"company",
						"isAdmin",
						"isClientUser",
						"isServiceAccount",
						"type",
						"deleted",
						"avatarUrl",
						"lengthOfDay",
						"workingHoursId",
						"workingHour",
						"userRate",
						"userCost",
						"canAddProjects"
					],
					"type": "string"
				},
				"name": "fields[users]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name", "color", "count"], "type": "string" },
				"name": "fields[tags]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "type": "string" },
				"name": "fields[industries]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "type": "string" },
				"name": "fields[countries]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name", "logoUploadedToServer", "logoImage"], "type": "string" },
				"name": "fields[companies]",
				"type": "array"
			},
			{
				"description": "exclude by company ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "excludeIds",
				"type": "array"
			}
		],
		"description": "Get all companies.",
		"group": "Companies"
	},
	{
		"endpoint": "/projects/api/v3/companies.json",
		"method": "post",
		"parameters": [
			{
				"in": "body",
				"name": "company.Request",
				"required": true,
				"schema": { "$ref": "#/definitions/company.Request" }
			}
		],
		"description": "Create a company.",
		"group": "Companies"
	},
	{
		"endpoint": "/projects/api/v3/companies/{companyId}.json",
		"method": "delete",
		"parameters": [{ "in": "path", "name": "companyId", "required": true, "type": "integer" }],
		"description": "Delete an existing company.",
		"group": "Companies"
	},
	{
		"endpoint": "/projects/api/v3/companies/{companyId}.json",
		"method": "get",
		"parameters": [
			{
				"description": "filter by updated after date (deprecated, use updatedAfter)",
				"format": "date-time",
				"in": "query",
				"name": "updatedAfterDate",
				"type": "string"
			},
			{
				"description": "filter by updated after date",
				"format": "date-time",
				"in": "query",
				"name": "updatedAfter",
				"type": "string"
			},
			{
				"description": "filter by company name and description",
				"in": "query",
				"name": "searchTerm",
				"type": "string"
			},
			{
				"default": "company",
				"description": "define the type of the report",
				"enum": ["company", "client"],
				"in": "query",
				"name": "reportType",
				"type": "string"
			},
			{
				"description": "define the format of the report",
				"in": "query",
				"name": "reportFormat",
				"type": "string"
			},
			{
				"default": "asc",
				"description": "order mode",
				"enum": ["asc", "desc"],
				"in": "query",
				"name": "orderMode",
				"type": "string"
			},
			{
				"default": "ownercompany",
				"description": "order by",
				"enum": [
					"name",
					"accounts",
					"clients",
					"collaborators",
					"contacts",
					"country",
					"website",
					"email",
					"phone",
					"fax",
					"industry",
					"dateadded",
					"ownercompany"
				],
				"in": "query",
				"name": "orderBy",
				"type": "string"
			},
			{
				"description": "filter by first letter of company name",
				"in": "query",
				"name": "firstLetter",
				"type": "string"
			},
			{
				"description": "filter by created after date (deprecated, use createdAfter)",
				"format": "date-time",
				"in": "query",
				"name": "createdAfterDate",
				"type": "string"
			},
			{
				"description": "filter by created after date",
				"format": "date-time",
				"in": "query",
				"name": "createdAfter",
				"type": "string"
			},
			{
				"default": "50",
				"description": "number of items in a page",
				"in": "query",
				"name": "pageSize",
				"type": "integer"
			},
			{
				"default": "1",
				"description": "page number",
				"in": "query",
				"name": "page",
				"type": "integer"
			},
			{ "in": "path", "name": "companyId", "required": true, "type": "integer" },
			{
				"default": "false",
				"description": "return unfiltered company initial letter counts",
				"in": "query",
				"name": "returnLetters",
				"type": "boolean"
			},
			{
				"description": "generate a report document",
				"in": "query",
				"name": "isReportDownload",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "include stats of company tasks and projects",
				"in": "query",
				"name": "getStats",
				"type": "boolean"
			},
			{
				"default": "true",
				"description": "parse emojis to unicode",
				"in": "query",
				"name": "getEmoji",
				"type": "boolean"
			},
			{
				"description": "include full profile",
				"in": "query",
				"name": "fullProfile",
				"type": "boolean"
			},
			{
				"description": "exclude the owner company",
				"in": "query",
				"name": "excludeOwnerCompany",
				"type": "boolean"
			},
			{
				"description": "customise the report by selecting columns",
				"in": "query",
				"items": { "type": "string" },
				"name": "selectedColumns",
				"type": "array"
			},
			{
				"description": "include",
				"in": "query",
				"items": {
					"enum": ["tags", "countries", "industries", "clientmanagedby", "companyupdates"],
					"type": "string"
				},
				"name": "include",
				"type": "array"
			},
			{
				"description": "filter by ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "ids",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"firstName",
						"lastName",
						"title",
						"email",
						"companyId",
						"company",
						"isAdmin",
						"isClientUser",
						"isServiceAccount",
						"type",
						"deleted",
						"avatarUrl",
						"lengthOfDay",
						"workingHoursId",
						"workingHour",
						"userRate",
						"userCost",
						"canAddProjects"
					],
					"type": "string"
				},
				"name": "fields[users]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name", "color", "count"], "type": "string" },
				"name": "fields[tags]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "type": "string" },
				"name": "fields[industries]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "type": "string" },
				"name": "fields[countries]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name", "logoUploadedToServer", "logoImage"], "type": "string" },
				"name": "fields[companies]",
				"type": "array"
			},
			{
				"description": "exclude by company ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "excludeIds",
				"type": "array"
			}
		],
		"description": "Get a specific company.",
		"group": "Companies"
	},
	{
		"endpoint": "/projects/api/v3/companies/{companyId}.json",
		"method": "patch",
		"parameters": [
			{ "in": "path", "name": "companyId", "required": true, "type": "integer" },
			{
				"in": "body",
				"name": "company.Request",
				"required": true,
				"schema": { "$ref": "#/definitions/company.Request" }
			}
		],
		"description": "Update an existing company.",
		"group": "Companies"
	},
	{
		"endpoint": "/projects/api/v3/customfields.json",
		"method": "get",
		"parameters": [
			{
				"description": "filter by project statuses",
				"in": "query",
				"name": "projectStatuses",
				"type": "string"
			},
			{
				"default": "asc",
				"description": "order mode",
				"enum": ["asc", "desc"],
				"in": "query",
				"name": "orderMode",
				"type": "string"
			},
			{
				"default": "name",
				"description": "order by",
				"enum": ["name", "project", "dateCreated", "dateUpdated"],
				"in": "query",
				"name": "orderBy",
				"type": "string"
			},
			{ "description": "filter by name", "in": "query", "name": "name", "type": "string" },
			{
				"description": "filter by project id",
				"in": "query",
				"name": "projectId",
				"type": "integer"
			},
			{
				"default": "50",
				"description": "number of items in a page",
				"in": "query",
				"name": "pageSize",
				"type": "integer"
			},
			{
				"default": "1",
				"description": "page number",
				"in": "query",
				"name": "page",
				"type": "integer"
			},
			{
				"default": "false",
				"description": "include deleted items",
				"in": "query",
				"name": "showDeleted",
				"type": "boolean"
			},
			{
				"description": "filter by starred projects only",
				"in": "query",
				"name": "onlyStarredProjects",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "only return site-level custom fields",
				"in": "query",
				"name": "onlySiteLevel",
				"type": "boolean"
			},
			{
				"description": "match all project tags",
				"in": "query",
				"name": "matchAllProjectTags",
				"type": "boolean"
			},
			{
				"default": "true",
				"description": "include custom fields for site-level in the response",
				"in": "query",
				"name": "includeSiteLevel",
				"type": "boolean"
			},
			{
				"description": "filter by project tag ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectTagIds",
				"type": "array"
			},
			{
				"description": "filter by project owner ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectOwnerIds",
				"type": "array"
			},
			{
				"description": "filter by project ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectIds",
				"type": "array"
			},
			{
				"description": "filter by project healths\n\n0: not set\n1: bad\n2: ok\n3: good",
				"in": "query",
				"items": { "enum": ["0", "1", "2", "3"], "type": "integer" },
				"name": "projectHealths",
				"type": "array"
			},
			{
				"description": "filter by company ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectCompanyIds",
				"type": "array"
			},
			{
				"description": "filter by project category ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectCategoryIds",
				"type": "array"
			},
			{
				"description": "include",
				"in": "query",
				"items": { "enum": ["projects", "createdBy", "updatedBy", "deletedBy"], "type": "string" },
				"name": "include",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"firstName",
						"lastName",
						"title",
						"email",
						"companyId",
						"company",
						"isAdmin",
						"isClientUser",
						"isServiceAccount",
						"type",
						"deleted",
						"avatarUrl",
						"lengthOfDay",
						"workingHoursId",
						"workingHour",
						"userRate",
						"userCost",
						"canAddProjects"
					],
					"type": "string"
				},
				"name": "fields[users]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name"], "type": "string" },
				"name": "fields[projects]",
				"type": "array"
			},
			{
				"description": "filter by entities",
				"in": "query",
				"items": { "type": "string" },
				"name": "entities",
				"type": "array"
			}
		],
		"description": "Get all custom fields",
		"group": "CustomFields"
	},
	{
		"endpoint": "/projects/api/v3/customfields.json",
		"method": "post",
		"parameters": [
			{
				"in": "body",
				"name": "customfield.Request",
				"required": true,
				"schema": { "$ref": "#/definitions/customfield.Request" }
			}
		],
		"description": "Create a new custom field",
		"group": "CustomFields"
	},
	{
		"endpoint": "/projects/api/v3/customfields/bulk/delete.json",
		"method": "post",
		"parameters": [
			{
				"in": "body",
				"name": "customfield.BulkDeleteRequest",
				"required": true,
				"schema": { "$ref": "#/definitions/customfield.BulkDeleteRequest" }
			}
		],
		"description": "Delete many custom fields at once",
		"group": "CustomFields"
	},
	{
		"endpoint": "/projects/api/v3/customfields/{customFieldId}.json",
		"method": "delete",
		"parameters": [{ "in": "path", "name": "customFieldId", "required": true, "type": "integer" }],
		"description": "Delete an existing custom field",
		"group": "CustomFields"
	},
	{
		"endpoint": "/projects/api/v3/customfields/{customFieldId}.json",
		"method": "get",
		"parameters": [
			{
				"description": "filter by project statuses",
				"in": "query",
				"name": "projectStatuses",
				"type": "string"
			},
			{
				"default": "asc",
				"description": "order mode",
				"enum": ["asc", "desc"],
				"in": "query",
				"name": "orderMode",
				"type": "string"
			},
			{
				"default": "name",
				"description": "order by",
				"enum": ["name", "project", "dateCreated", "dateUpdated"],
				"in": "query",
				"name": "orderBy",
				"type": "string"
			},
			{ "description": "filter by name", "in": "query", "name": "name", "type": "string" },
			{
				"description": "filter by project id",
				"in": "query",
				"name": "projectId",
				"type": "integer"
			},
			{
				"default": "50",
				"description": "number of items in a page",
				"in": "query",
				"name": "pageSize",
				"type": "integer"
			},
			{
				"default": "1",
				"description": "page number",
				"in": "query",
				"name": "page",
				"type": "integer"
			},
			{ "in": "path", "name": "customFieldId", "required": true, "type": "integer" },
			{
				"default": "false",
				"description": "include deleted items",
				"in": "query",
				"name": "showDeleted",
				"type": "boolean"
			},
			{
				"description": "filter by starred projects only",
				"in": "query",
				"name": "onlyStarredProjects",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "only return site-level custom fields",
				"in": "query",
				"name": "onlySiteLevel",
				"type": "boolean"
			},
			{
				"description": "match all project tags",
				"in": "query",
				"name": "matchAllProjectTags",
				"type": "boolean"
			},
			{
				"default": "true",
				"description": "include custom fields for site-level in the response",
				"in": "query",
				"name": "includeSiteLevel",
				"type": "boolean"
			},
			{
				"description": "filter by project tag ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectTagIds",
				"type": "array"
			},
			{
				"description": "filter by project owner ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectOwnerIds",
				"type": "array"
			},
			{
				"description": "filter by project ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectIds",
				"type": "array"
			},
			{
				"description": "filter by project healths\n\n0: not set\n1: bad\n2: ok\n3: good",
				"in": "query",
				"items": { "enum": ["0", "1", "2", "3"], "type": "integer" },
				"name": "projectHealths",
				"type": "array"
			},
			{
				"description": "filter by company ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectCompanyIds",
				"type": "array"
			},
			{
				"description": "filter by project category ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectCategoryIds",
				"type": "array"
			},
			{
				"description": "include",
				"in": "query",
				"items": { "enum": ["projects", "createdBy", "updatedBy", "deletedBy"], "type": "string" },
				"name": "include",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"firstName",
						"lastName",
						"title",
						"email",
						"companyId",
						"company",
						"isAdmin",
						"isClientUser",
						"isServiceAccount",
						"type",
						"deleted",
						"avatarUrl",
						"lengthOfDay",
						"workingHoursId",
						"workingHour",
						"userRate",
						"userCost",
						"canAddProjects"
					],
					"type": "string"
				},
				"name": "fields[users]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name"], "type": "string" },
				"name": "fields[projects]",
				"type": "array"
			},
			{
				"description": "filter by entities",
				"in": "query",
				"items": { "type": "string" },
				"name": "entities",
				"type": "array"
			}
		],
		"description": "Get a custom field by id.",
		"group": "CustomFields"
	},
	{
		"endpoint": "/projects/api/v3/customfields/{customFieldId}.json",
		"method": "patch",
		"parameters": [
			{ "in": "path", "name": "customFieldId", "required": true, "type": "integer" },
			{
				"in": "body",
				"name": "customfield.Request",
				"required": true,
				"schema": { "$ref": "#/definitions/customfield.Request" }
			}
		],
		"description": "Update an existing custom field.",
		"group": "CustomFields"
	},
	{
		"endpoint": "/projects/api/v3/customfields/{customFieldId}.json",
		"method": "put",
		"parameters": [
			{ "in": "path", "name": "customFieldId", "required": true, "type": "integer" },
			{
				"in": "body",
				"name": "customfield.Request",
				"required": true,
				"schema": { "$ref": "#/definitions/customfield.Request" }
			}
		],
		"description": "Update an existing custom field.",
		"group": "CustomFields"
	},
	{
		"endpoint": "/projects/api/v3/dashboards.json",
		"method": "get",
		"parameters": [
			{
				"description": "filter by updated after date",
				"format": "date-time",
				"in": "query",
				"name": "updatedAfter",
				"type": "string"
			},
			{
				"default": "asc",
				"description": "order mode",
				"enum": ["asc", "desc"],
				"in": "query",
				"name": "orderMode",
				"type": "string"
			},
			{
				"default": "isDefault",
				"description": "order by",
				"enum": ["isDefault", "displayOrder"],
				"in": "query",
				"name": "orderBy",
				"type": "string"
			},
			{ "description": "filter by user id", "in": "query", "name": "userId", "type": "integer" },
			{
				"description": "filter by project id",
				"in": "query",
				"name": "projectId",
				"type": "integer"
			},
			{
				"default": "50",
				"description": "number of items in a page",
				"in": "query",
				"name": "pageSize",
				"type": "integer"
			},
			{
				"default": "1",
				"description": "page number",
				"in": "query",
				"name": "page",
				"type": "integer"
			},
			{
				"default": "false",
				"description": "include deleted items",
				"in": "query",
				"name": "showDeleted",
				"type": "boolean"
			},
			{
				"default": "true",
				"description": "parse emoji alias to unicode",
				"in": "query",
				"name": "emoji",
				"type": "boolean"
			},
			{
				"description": "include",
				"in": "query",
				"items": {
					"enum": [
						"projects",
						"users",
						"dashboardSettings",
						"dashboardPanels",
						"dashboardPanels.settings"
					],
					"type": "string"
				},
				"name": "include",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"firstName",
						"lastName",
						"title",
						"email",
						"companyId",
						"company",
						"isAdmin",
						"isClientUser",
						"isServiceAccount",
						"type",
						"deleted",
						"avatarUrl",
						"lengthOfDay",
						"workingHoursId",
						"workingHour",
						"userRate",
						"userCost",
						"canAddProjects"
					],
					"type": "string"
				},
				"name": "fields[users]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name"], "type": "string" },
				"name": "fields[projects]",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"title",
						"color",
						"description",
						"isDefault",
						"userId",
						"projectId",
						"displayOrder",
						"deleted",
						"dateCreated",
						"dateUpdated",
						"dateDeleted",
						"dashboardPanelIds",
						"dashboardSettingIds"
					],
					"type": "string"
				},
				"name": "fields[dashboards]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "dashboardId", "name", "value"], "type": "string" },
				"name": "fields[dashboardSettings]",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": ["id", "dashboardId", "name", "type", "displayOrder", "dashboardPanelSettingIds"],
					"type": "string"
				},
				"name": "fields[dashboardPanels]",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": ["id", "installationId", "dashboardId", "dashboardPanelId", "name", "value"],
					"type": "string"
				},
				"name": "fields[dashboardPanelSettings]",
				"type": "array"
			},
			{
				"description": "filter by user dashboard ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "dashboardIds",
				"type": "array"
			}
		],
		"description": "Get all dashboards",
		"group": "Dashboards"
	},
	{
		"endpoint": "/projects/api/v3/features.json",
		"method": "get",
		"description": "Get installation features",
		"group": "Features"
	},
	{
		"endpoint": "/projects/api/v3/files/{fileId}/comments.json",
		"method": "get",
		"parameters": [{ "in": "path", "name": "fileId", "required": true, "type": "integer" }],
		"description": "Get a list of comments for a file",
		"group": "FileComments"
	},
	{
		"endpoint": "/projects/api/v3/forms.json",
		"method": "get",
		"parameters": [
			{
				"description": "filter by form name",
				"in": "query",
				"name": "searchTerm",
				"type": "string"
			},
			{
				"default": "asc",
				"description": "order mode",
				"enum": ["asc", "desc"],
				"in": "query",
				"name": "orderMode",
				"type": "string"
			},
			{
				"default": "dateUpdated",
				"description": "order by",
				"enum": ["name", "taskList", "totalSubmissions", "dateCreated", "dateUpdated"],
				"in": "query",
				"name": "orderBy",
				"type": "string"
			},
			{
				"description": "query by hostObject type",
				"enum": ["projects"],
				"in": "query",
				"name": "hostObject.type",
				"type": "string"
			},
			{
				"description": "query by form state",
				"enum": ["active", "deleted", "draft", "latest"],
				"in": "query",
				"name": "content.state",
				"type": "string"
			},
			{ "description": "filter by user id", "in": "query", "name": "userId", "type": "integer" },
			{
				"default": "50",
				"description": "number of items in a page",
				"in": "query",
				"name": "pageSize",
				"type": "integer"
			},
			{
				"default": "1",
				"description": "page number",
				"in": "query",
				"name": "page",
				"type": "integer"
			},
			{
				"description": "filter by host id",
				"in": "query",
				"name": "hostObject.id",
				"type": "integer"
			},
			{
				"description": "filter only by project with direct membership",
				"in": "query",
				"name": "onlyProjectsWithExplicitMembership",
				"type": "boolean"
			},
			{
				"description": "include archived projects",
				"in": "query",
				"name": "includeArchivedProjects",
				"type": "boolean"
			},
			{
				"description": "filter by project ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectIds",
				"type": "array"
			},
			{
				"description": "include",
				"in": "query",
				"items": {
					"enum": ["projects", "projects.companies", "users", "tasklists"],
					"type": "string"
				},
				"name": "include",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"firstName",
						"lastName",
						"title",
						"email",
						"companyId",
						"company",
						"isAdmin",
						"isClientUser",
						"isServiceAccount",
						"type",
						"deleted",
						"avatarUrl",
						"lengthOfDay",
						"workingHoursId",
						"workingHour",
						"userRate",
						"userCost",
						"canAddProjects"
					],
					"type": "string"
				},
				"name": "fields[users]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name", "projectId", "milestoneId"], "type": "string" },
				"name": "fields[tasklists]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name"], "type": "string" },
				"name": "fields[projects]",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"confirmationMessage",
						"promptAdditionalSubmissions",
						"allowTeamworkBranding",
						"isShared",
						"state",
						"taskTitleFieldId",
						"token",
						"content",
						"hostObject",
						"installation"
					],
					"type": "string"
				},
				"name": "fields[forms]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name", "logoUploadedToServer", "logoImage"], "type": "string" },
				"name": "fields[companies]",
				"type": "array"
			}
		],
		"description": "Get all forms.",
		"group": "Forms"
	},
	{
		"endpoint": "/projects/api/v3/forms.json",
		"method": "post",
		"parameters": [
			{
				"in": "body",
				"name": "form.Request",
				"required": true,
				"schema": { "$ref": "#/definitions/form.Request" }
			}
		],
		"description": "Create a new form.",
		"group": "Forms"
	},
	{
		"endpoint": "/projects/api/v3/forms/public/{token}.json",
		"method": "get",
		"parameters": [
			{
				"description": "filter by form name",
				"in": "query",
				"name": "searchTerm",
				"type": "string"
			},
			{
				"default": "asc",
				"description": "order mode",
				"enum": ["asc", "desc"],
				"in": "query",
				"name": "orderMode",
				"type": "string"
			},
			{
				"default": "dateUpdated",
				"description": "order by",
				"enum": ["name", "taskList", "totalSubmissions", "dateCreated", "dateUpdated"],
				"in": "query",
				"name": "orderBy",
				"type": "string"
			},
			{
				"description": "query by hostObject type",
				"enum": ["projects"],
				"in": "query",
				"name": "hostObject.type",
				"type": "string"
			},
			{
				"description": "query by form state",
				"enum": ["active", "deleted", "draft", "latest"],
				"in": "query",
				"name": "content.state",
				"type": "string"
			},
			{ "description": "filter by user id", "in": "query", "name": "userId", "type": "integer" },
			{ "in": "path", "name": "token", "required": true, "type": "integer" },
			{
				"default": "50",
				"description": "number of items in a page",
				"in": "query",
				"name": "pageSize",
				"type": "integer"
			},
			{
				"default": "1",
				"description": "page number",
				"in": "query",
				"name": "page",
				"type": "integer"
			},
			{
				"description": "filter by host id",
				"in": "query",
				"name": "hostObject.id",
				"type": "integer"
			},
			{
				"description": "filter only by project with direct membership",
				"in": "query",
				"name": "onlyProjectsWithExplicitMembership",
				"type": "boolean"
			},
			{
				"description": "include archived projects",
				"in": "query",
				"name": "includeArchivedProjects",
				"type": "boolean"
			},
			{
				"description": "filter by project ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectIds",
				"type": "array"
			},
			{
				"description": "include",
				"in": "query",
				"items": {
					"enum": ["projects", "projects.companies", "users", "tasklists"],
					"type": "string"
				},
				"name": "include",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"firstName",
						"lastName",
						"title",
						"email",
						"companyId",
						"company",
						"isAdmin",
						"isClientUser",
						"isServiceAccount",
						"type",
						"deleted",
						"avatarUrl",
						"lengthOfDay",
						"workingHoursId",
						"workingHour",
						"userRate",
						"userCost",
						"canAddProjects"
					],
					"type": "string"
				},
				"name": "fields[users]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name", "projectId", "milestoneId"], "type": "string" },
				"name": "fields[tasklists]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name"], "type": "string" },
				"name": "fields[projects]",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"confirmationMessage",
						"promptAdditionalSubmissions",
						"allowTeamworkBranding",
						"isShared",
						"state",
						"taskTitleFieldId",
						"token",
						"content",
						"hostObject",
						"installation"
					],
					"type": "string"
				},
				"name": "fields[forms]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name", "logoUploadedToServer", "logoImage"], "type": "string" },
				"name": "fields[companies]",
				"type": "array"
			}
		],
		"description": "Get a forms via its token.",
		"group": "FormsPublic"
	},
	{
		"endpoint": "/projects/api/v3/forms/{formID}/copy.json",
		"method": "post",
		"parameters": [
			{ "in": "path", "name": "formID", "required": true, "type": "integer" },
			{
				"in": "body",
				"name": "form.CopyRequest",
				"required": true,
				"schema": { "$ref": "#/definitions/form.CopyRequest" }
			}
		],
		"description": "Copy a form",
		"group": "FormsPublic"
	},
	{
		"endpoint": "/projects/api/v3/forms/{formId}.json",
		"method": "delete",
		"parameters": [{ "in": "path", "name": "formId", "required": true, "type": "integer" }],
		"description": "Delete an existing form.",
		"group": "Forms"
	},
	{
		"endpoint": "/projects/api/v3/forms/{formId}.json",
		"method": "get",
		"parameters": [{ "in": "path", "name": "formId", "required": true, "type": "integer" }],
		"description": "Get a specific form.",
		"group": "Forms"
	},
	{
		"endpoint": "/projects/api/v3/forms/{formId}.json",
		"method": "patch",
		"parameters": [
			{ "in": "path", "name": "formId", "required": true, "type": "integer" },
			{
				"in": "body",
				"name": "form.Request",
				"required": true,
				"schema": { "$ref": "#/definitions/form.Request" }
			}
		],
		"description": "Update an existing form.",
		"group": "Forms"
	},
	{
		"endpoint": "/projects/api/v3/forms/{formId}/draft.json",
		"method": "get",
		"parameters": [{ "in": "path", "name": "formId", "required": true, "type": "integer" }],
		"description": "Get the draft version of a specific form.",
		"group": "Forms"
	},
	{
		"endpoint": "/projects/api/v3/importer/stats.json",
		"method": "get",
		"parameters": [
			{
				"default": "false",
				"description": "reset importers",
				"in": "query",
				"name": "resetImporters",
				"type": "boolean"
			}
		],
		"description": "Get stats about Importers",
		"group": "Importers"
	},
	{
		"endpoint": "/projects/api/v3/latestactivity.json",
		"method": "get",
		"parameters": [
			{
				"description": "filter by updated after date",
				"format": "date-time",
				"in": "query",
				"name": "updatedAfter",
				"type": "string"
			},
			{
				"description": "filter by start datetime",
				"format": "date-time",
				"in": "query",
				"name": "startDate",
				"type": "string"
			},
			{
				"description": "sort by (deprecated, use orderBy)",
				"in": "query",
				"name": "sort",
				"type": "string"
			},
			{
				"description": "filter by project status",
				"in": "query",
				"name": "projectStatus",
				"type": "string"
			},
			{
				"description": "order mode",
				"enum": ["asc", "desc"],
				"in": "query",
				"name": "orderMode",
				"type": "string"
			},
			{ "description": "sort by", "in": "query", "name": "orderBy", "type": "string" },
			{
				"description": "filter by end datetime",
				"format": "date-time",
				"in": "query",
				"name": "endDate",
				"type": "string"
			},
			{
				"description": "filter by project id",
				"in": "query",
				"name": "projectId",
				"type": "integer"
			},
			{
				"default": "50",
				"description": "number of items in a page",
				"in": "query",
				"name": "pageSize",
				"type": "integer"
			},
			{
				"default": "1",
				"description": "page number",
				"in": "query",
				"name": "page",
				"type": "integer"
			},
			{ "description": "activity id offset", "in": "query", "name": "maxId", "type": "integer" },
			{
				"description": "limit results from previous id",
				"in": "query",
				"name": "catchupFromId",
				"type": "integer"
			},
			{
				"default": "false",
				"description": "include deleted items",
				"in": "query",
				"name": "showDeleted",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "filter by starred projects only",
				"in": "query",
				"name": "onlyStarredProjects",
				"type": "boolean"
			},
			{
				"description": "only projects with explicit membership",
				"in": "query",
				"name": "onlyProjectsWithExplicitMembership",
				"type": "boolean"
			},
			{
				"description": "enforce all tag ids must be matched",
				"in": "query",
				"name": "matchAllProjectTags",
				"type": "boolean"
			},
			{
				"description": "include archived projects",
				"in": "query",
				"name": "includeArchivedProjects",
				"type": "boolean"
			},
			{
				"description": "group all activities on comments",
				"in": "query",
				"name": "groupCommentActivityType",
				"type": "boolean"
			},
			{
				"description": "filter by user ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "userIds",
				"type": "array"
			},
			{
				"description": "filter by project tag ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectTagIds",
				"type": "array"
			},
			{
				"description": "list of project status",
				"in": "query",
				"items": { "type": "string" },
				"name": "projectStatuses",
				"type": "array"
			},
			{
				"description": "filter by project owner ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectOwnerIds",
				"type": "array"
			},
			{
				"description": "list of project health",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectHealths",
				"type": "array"
			},
			{
				"description": "filter by company ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectCompanyIds",
				"type": "array"
			},
			{
				"description": "filter by project category ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectCategoryIds",
				"type": "array"
			},
			{
				"description": "include",
				"in": "query",
				"items": { "enum": ["projects", "users", "companies"], "type": "string" },
				"name": "include",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"firstName",
						"lastName",
						"title",
						"email",
						"companyId",
						"company",
						"isAdmin",
						"isClientUser",
						"isServiceAccount",
						"type",
						"deleted",
						"avatarUrl",
						"lengthOfDay",
						"workingHoursId",
						"workingHour",
						"userRate",
						"userCost",
						"canAddProjects"
					],
					"type": "string"
				},
				"name": "fields[users]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name"], "type": "string" },
				"name": "fields[projects]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name", "logoUploadedToServer", "logoImage"], "type": "string" },
				"name": "fields[companies]",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"dateTime",
						"activityType",
						"latestActivityType",
						"itemId",
						"itemLink",
						"itemType",
						"itemDescription",
						"itemExtraDescription",
						"itemExtraLink",
						"itemPublicInfo",
						"forUserId",
						"forUserName",
						"dueDate",
						"isPrivate",
						"lockdownId",
						"projectId",
						"companyId"
					],
					"type": "string"
				},
				"name": "fields[activities]",
				"type": "array"
			},
			{
				"description": "filter by activity types",
				"in": "query",
				"items": {
					"enum": [
						"task",
						"tasklist",
						"project",
						"message",
						"notebook",
						"milestone",
						"like",
						"file",
						"link",
						"billinginvoice",
						"task_comment",
						"milestone_comment",
						"file_comment",
						"link_comment",
						"comment"
					],
					"type": "string"
				},
				"name": "activityTypes",
				"type": "array"
			}
		],
		"description": "Latest activity (all projects)",
		"group": "Activity"
	},
	{
		"endpoint": "/projects/api/v3/me/timers.json",
		"method": "get",
		"parameters": [
			{
				"description": "filter by updated after date (deprecated, use updatedAfter)",
				"format": "date-time",
				"in": "query",
				"name": "updatedAfterDate",
				"type": "string"
			},
			{
				"description": "filter by updated after date",
				"format": "date-time",
				"in": "query",
				"name": "updatedAfter",
				"type": "string"
			},
			{ "description": "filter by user id", "in": "query", "name": "userId", "type": "integer" },
			{ "description": "filter by task id", "in": "query", "name": "taskId", "type": "integer" },
			{
				"description": "filter by project id",
				"in": "query",
				"name": "projectId",
				"type": "integer"
			},
			{
				"default": "50",
				"description": "number of items in a page",
				"in": "query",
				"name": "pageSize",
				"type": "integer"
			},
			{
				"default": "1",
				"description": "page number",
				"in": "query",
				"name": "page",
				"type": "integer"
			},
			{
				"default": "false",
				"description": "include deleted items",
				"in": "query",
				"name": "showDeleted",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "enforce running timers only",
				"in": "query",
				"name": "runningTimersOnly",
				"type": "boolean"
			},
			{
				"description": "include",
				"in": "query",
				"items": {
					"enum": ["projects", "tasks", "tasks.parentTasks", "tasks.tasklists", "users"],
					"type": "string"
				},
				"name": "include",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"firstName",
						"lastName",
						"title",
						"email",
						"companyId",
						"company",
						"isAdmin",
						"isClientUser",
						"isServiceAccount",
						"type",
						"deleted",
						"avatarUrl",
						"lengthOfDay",
						"workingHoursId",
						"workingHour",
						"userRate",
						"userCost",
						"canAddProjects"
					],
					"type": "string"
				},
				"name": "fields[users]",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"userId",
						"taskId",
						"projectId",
						"description",
						"running",
						"billable",
						"deleted",
						"dateCreated",
						"dateDeleted",
						"duration",
						"lastStartedAt",
						"serverTime",
						"intervals"
					],
					"type": "string"
				},
				"name": "fields[timers]",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"name",
						"dateUpdated",
						"parentTaskId",
						"isPrivate",
						"status",
						"tasklistId",
						"startDate",
						"dueDate"
					],
					"type": "string"
				},
				"name": "fields[tasks]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name", "projectId", "milestoneId"], "type": "string" },
				"name": "fields[tasklists]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name"], "type": "string" },
				"name": "fields[projects]",
				"type": "array"
			}
		],
		"description": "Get all your running timers",
		"group": "TimeTracking"
	},
	{
		"endpoint": "/projects/api/v3/me/timers.json",
		"method": "post",
		"parameters": [
			{
				"in": "body",
				"name": "timer.Request",
				"required": true,
				"schema": { "$ref": "#/definitions/timer.Request" }
			}
		],
		"description": "Create a new timer",
		"group": "TimeTracking"
	},
	{
		"endpoint": "/projects/api/v3/me/timers/{timerId}.json",
		"method": "delete",
		"parameters": [
			{
				"in": "body",
				"name": "timer.DeleteRequest",
				"required": true,
				"schema": { "$ref": "#/definitions/timer.DeleteRequest" }
			},
			{ "in": "path", "name": "timerId", "required": true, "type": "integer" }
		],
		"description": "Delete a timer by ID",
		"group": "TimeTracking"
	},
	{
		"endpoint": "/projects/api/v3/me/timers/{timerId}.json",
		"method": "put",
		"parameters": [
			{
				"in": "body",
				"name": "timer.Request",
				"required": true,
				"schema": { "$ref": "#/definitions/timer.Request" }
			},
			{ "in": "path", "name": "timerId", "required": true, "type": "integer" }
		],
		"description": "Edits a timer",
		"group": "TimeTracking"
	},
	{
		"endpoint": "/projects/api/v3/me/timers/{timerId}/complete.json",
		"method": "put",
		"parameters": [{ "in": "path", "name": "timerId", "required": true, "type": "integer" }],
		"description": "Complete a timer by ID",
		"group": "TimeTracking"
	},
	{
		"endpoint": "/projects/api/v3/me/timers/{timerId}/pause.json",
		"method": "put",
		"parameters": [{ "in": "path", "name": "timerId", "required": true, "type": "integer" }],
		"description": "Pause a timer by ID",
		"group": "TimeTracking"
	},
	{
		"endpoint": "/projects/api/v3/me/timers/{timerId}/resume.json",
		"method": "put",
		"parameters": [{ "in": "path", "name": "timerId", "required": true, "type": "integer" }],
		"description": "Resume a timer by ID",
		"group": "TimeTracking"
	},
	{
		"endpoint": "/projects/api/v3/me/timers/{timerId}/undelete.json",
		"method": "put",
		"parameters": [{ "in": "path", "name": "timerId", "required": true, "type": "integer" }],
		"description": "Restore a deleted timer item.",
		"group": "TimeTracking"
	},
	{
		"endpoint": "/projects/api/v3/milestones.csv",
		"method": "get",
		"parameters": [
			{
				"description": "filter by updated after date (deprecated, use updatedAfter)",
				"format": "date-time",
				"in": "query",
				"name": "updatedAfterDate",
				"type": "string"
			},
			{
				"description": "filter by updated after date",
				"format": "date-time",
				"in": "query",
				"name": "updatedAfter",
				"type": "string"
			},
			{
				"description": "filter by milestone name and description",
				"in": "query",
				"name": "searchTerm",
				"type": "string"
			},
			{
				"default": "agenda",
				"description": "define the type of the report",
				"enum": ["plannedvsactual", "calendar", "agenda"],
				"in": "query",
				"name": "reportType",
				"type": "string"
			},
			{
				"description": "define the format of the report",
				"in": "query",
				"name": "reportFormat",
				"type": "string"
			},
			{
				"description": "filter by project status",
				"in": "query",
				"name": "projectStatus",
				"type": "string"
			},
			{
				"default": "asc",
				"description": "order mode",
				"enum": ["asc", "desc"],
				"in": "query",
				"name": "orderMode",
				"type": "string"
			},
			{
				"default": "date",
				"description": "order by",
				"enum": ["date", "dateonly", "name", "project", "user", "dateCreated", "dateUpdated"],
				"in": "query",
				"name": "orderBy",
				"type": "string"
			},
			{
				"description": "filter by due before date (deprecated, use dueBefore)",
				"format": "date",
				"in": "query",
				"name": "dueBeforeDate",
				"type": "string"
			},
			{
				"description": "filter by due before date",
				"format": "date",
				"in": "query",
				"name": "dueBefore",
				"type": "string"
			},
			{
				"description": "filter by due after date (deprecated, use dueAfter)",
				"format": "date",
				"in": "query",
				"name": "dueAfterDate",
				"type": "string"
			},
			{
				"description": "filter by due after date",
				"format": "date",
				"in": "query",
				"name": "dueAfter",
				"type": "string"
			},
			{
				"default": "50",
				"description": "number of items in a page",
				"in": "query",
				"name": "pageSize",
				"type": "integer"
			},
			{
				"default": "1",
				"description": "page number",
				"in": "query",
				"name": "page",
				"type": "integer"
			},
			{
				"default": "true",
				"description": "show private milestones",
				"in": "query",
				"name": "showPrivate",
				"type": "boolean"
			},
			{
				"description": "show percentages completed",
				"in": "query",
				"name": "showPercentageCompleted",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "include deleted items",
				"in": "query",
				"name": "showDeleted",
				"type": "boolean"
			},
			{
				"description": "show attached tasklists",
				"in": "query",
				"name": "showAttachedTasklists",
				"type": "boolean"
			},
			{
				"description": "include companies and teams in the search term",
				"in": "query",
				"name": "searchCompaniesTeams",
				"type": "boolean"
			},
			{
				"description": "include assignees in the search",
				"in": "query",
				"name": "searchAssignees",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "include progress of each milestone",
				"in": "query",
				"name": "progress",
				"type": "boolean"
			},
			{
				"description": "filter by starred projects only",
				"in": "query",
				"name": "onlyStarredProjects",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "filter by projects that the logged-in user is related",
				"in": "query",
				"name": "onlyMyProjects",
				"type": "boolean"
			},
			{
				"description": "only include milestones from projects where the user is strictly a project admin.\nsite admins have visibility to all projects.",
				"in": "query",
				"name": "onlyAdminProjects",
				"type": "boolean"
			},
			{
				"description": "match all milestone tags",
				"in": "query",
				"name": "matchAllTags",
				"type": "boolean"
			},
			{
				"description": "match all project tags",
				"in": "query",
				"name": "matchAllProjectTags",
				"type": "boolean"
			},
			{
				"description": "generate a report document",
				"in": "query",
				"name": "isReportDownload",
				"type": "boolean"
			},
			{
				"description": "include milestones latest update action",
				"in": "query",
				"name": "includeUpdate",
				"type": "boolean"
			},
			{
				"default": "true",
				"description": "include today when milestone status is upcoming",
				"in": "query",
				"name": "includeToday",
				"type": "boolean"
			},
			{
				"default": "true",
				"description": "include team users to the responsible party ids",
				"in": "query",
				"name": "includeTeamUserIds",
				"type": "boolean"
			},
			{
				"default": "true",
				"description": "include tags in the reports",
				"in": "query",
				"name": "includeTags",
				"type": "boolean"
			},
			{
				"description": "include percentage of tasks completed for all linked tasklists",
				"in": "query",
				"name": "includeProgress",
				"type": "boolean"
			},
			{
				"description": "optional to include completed milestones",
				"in": "query",
				"name": "includeCompleted",
				"type": "boolean"
			},
			{
				"default": "true",
				"description": "include company users to the responsible party ids",
				"in": "query",
				"name": "includeCompanyUserIds",
				"type": "boolean"
			},
			{
				"description": "include teams related to the responsible user ids",
				"in": "query",
				"name": "includeAssigneeTeams",
				"type": "boolean"
			},
			{
				"description": "include companies related to the responsible user ids",
				"in": "query",
				"name": "includeAssigneeCompanies",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "include archived projects",
				"in": "query",
				"name": "includeArchivedProjects",
				"type": "boolean"
			},
			{
				"default": "true",
				"description": "convert emoji alias to unicode",
				"in": "query",
				"name": "emoji",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "count unread comments",
				"in": "query",
				"name": "countUnreadComments",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "enables the calendar style layout",
				"in": "query",
				"name": "calendar",
				"type": "boolean"
			},
			{
				"description": "filter by milestone tag ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "tagIds",
				"type": "array"
			},
			{
				"description": "filter by list of milestone status",
				"in": "query",
				"items": {
					"enum": [
						"all",
						"new",
						"reopened",
						"completed",
						"deleted",
						"pending",
						"incomplete",
						"late",
						"today",
						"upcoming"
					],
					"type": "string"
				},
				"name": "status",
				"type": "array"
			},
			{
				"description": "customise the report by selecting columns to be displayed.",
				"in": "query",
				"items": { "type": "string" },
				"name": "selectedColumns",
				"type": "array"
			},
			{
				"description": "filter by project tag ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectTagIds",
				"type": "array"
			},
			{
				"description": "filter by list of project status",
				"in": "query",
				"items": { "type": "string" },
				"name": "projectStatuses",
				"type": "array"
			},
			{
				"description": "filter by project owner ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectOwnerIds",
				"type": "array"
			},
			{
				"description": "filter by project ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectIds",
				"type": "array"
			},
			{
				"description": "filter by list of project health",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectHealths",
				"type": "array"
			},
			{
				"description": "filter by list of project health (deprecated, use projectHealths)",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectHealth",
				"type": "array"
			},
			{
				"description": "filter by company ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectCompanyIds",
				"type": "array"
			},
			{
				"description": "filter by project category ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectCategoryIds",
				"type": "array"
			},
			{
				"description": "include",
				"in": "query",
				"items": {
					"enum": [
						"projects",
						"projects.companies",
						"projects.categories",
						"users",
						"completedBy",
						"createdBy",
						"deletedBy",
						"updatedBy",
						"commentFollowers",
						"changeFollowers",
						"tags",
						"tasklists",
						"tasklisttaskstats"
					],
					"type": "string"
				},
				"name": "include",
				"type": "array"
			},
			{
				"description": "filter by ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "ids",
				"type": "array"
			},
			{
				"description": "filter by followers' ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "followerIds",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"firstName",
						"lastName",
						"title",
						"email",
						"companyId",
						"company",
						"isAdmin",
						"isClientUser",
						"isServiceAccount",
						"type",
						"deleted",
						"avatarUrl",
						"lengthOfDay",
						"workingHoursId",
						"workingHour",
						"userRate",
						"userCost",
						"canAddProjects"
					],
					"type": "string"
				},
				"name": "fields[users]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name", "projectId", "milestoneId"], "type": "string" },
				"name": "fields[tasklists]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name", "color", "count"], "type": "string" },
				"name": "fields[tags]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name"], "type": "string" },
				"name": "fields[projects]",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"name",
						"description",
						"deadline",
						"completed",
						"projectId",
						"createdOn",
						"lastChangedOn",
						"creatorUserId",
						"reminder",
						"private",
						"lockdownId",
						"status",
						"completedOn",
						"completerId",
						"percentageComplete"
					],
					"type": "string"
				},
				"name": "fields[milestones]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name", "logoUploadedToServer", "logoImage"], "type": "string" },
				"name": "fields[companies]",
				"type": "array"
			},
			{
				"description": "filter by creators' ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "creatorIds",
				"type": "array"
			},
			{
				"description": "filter by assigned user ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "assignedToUserIds",
				"type": "array"
			},
			{
				"description": "filter by assigned team ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "assignedToTeamIds",
				"type": "array"
			},
			{
				"description": "filter by assigned company ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "assignedToCompanyIds",
				"type": "array"
			}
		],
		"description": "Generate milestone report in CSV format",
		"group": "Milestones"
	},
	{
		"endpoint": "/projects/api/v3/milestones.html",
		"method": "get",
		"parameters": [
			{
				"description": "filter by updated after date (deprecated, use updatedAfter)",
				"format": "date-time",
				"in": "query",
				"name": "updatedAfterDate",
				"type": "string"
			},
			{
				"description": "filter by updated after date",
				"format": "date-time",
				"in": "query",
				"name": "updatedAfter",
				"type": "string"
			},
			{
				"description": "filter by milestone name and description",
				"in": "query",
				"name": "searchTerm",
				"type": "string"
			},
			{
				"default": "agenda",
				"description": "define the type of the report",
				"enum": ["plannedvsactual", "calendar", "agenda"],
				"in": "query",
				"name": "reportType",
				"type": "string"
			},
			{
				"description": "define the format of the report",
				"in": "query",
				"name": "reportFormat",
				"type": "string"
			},
			{
				"description": "filter by project status",
				"in": "query",
				"name": "projectStatus",
				"type": "string"
			},
			{
				"default": "asc",
				"description": "order mode",
				"enum": ["asc", "desc"],
				"in": "query",
				"name": "orderMode",
				"type": "string"
			},
			{
				"default": "date",
				"description": "order by",
				"enum": ["date", "dateonly", "name", "project", "user", "dateCreated", "dateUpdated"],
				"in": "query",
				"name": "orderBy",
				"type": "string"
			},
			{
				"description": "filter by due before date (deprecated, use dueBefore)",
				"format": "date",
				"in": "query",
				"name": "dueBeforeDate",
				"type": "string"
			},
			{
				"description": "filter by due before date",
				"format": "date",
				"in": "query",
				"name": "dueBefore",
				"type": "string"
			},
			{
				"description": "filter by due after date (deprecated, use dueAfter)",
				"format": "date",
				"in": "query",
				"name": "dueAfterDate",
				"type": "string"
			},
			{
				"description": "filter by due after date",
				"format": "date",
				"in": "query",
				"name": "dueAfter",
				"type": "string"
			},
			{
				"default": "50",
				"description": "number of items in a page",
				"in": "query",
				"name": "pageSize",
				"type": "integer"
			},
			{
				"default": "1",
				"description": "page number",
				"in": "query",
				"name": "page",
				"type": "integer"
			},
			{
				"default": "true",
				"description": "show private milestones",
				"in": "query",
				"name": "showPrivate",
				"type": "boolean"
			},
			{
				"description": "show percentages completed",
				"in": "query",
				"name": "showPercentageCompleted",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "include deleted items",
				"in": "query",
				"name": "showDeleted",
				"type": "boolean"
			},
			{
				"description": "show attached tasklists",
				"in": "query",
				"name": "showAttachedTasklists",
				"type": "boolean"
			},
			{
				"description": "include companies and teams in the search term",
				"in": "query",
				"name": "searchCompaniesTeams",
				"type": "boolean"
			},
			{
				"description": "include assignees in the search",
				"in": "query",
				"name": "searchAssignees",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "include progress of each milestone",
				"in": "query",
				"name": "progress",
				"type": "boolean"
			},
			{
				"description": "filter by starred projects only",
				"in": "query",
				"name": "onlyStarredProjects",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "filter by projects that the logged-in user is related",
				"in": "query",
				"name": "onlyMyProjects",
				"type": "boolean"
			},
			{
				"description": "only include milestones from projects where the user is strictly a project admin.\nsite admins have visibility to all projects.",
				"in": "query",
				"name": "onlyAdminProjects",
				"type": "boolean"
			},
			{
				"description": "match all milestone tags",
				"in": "query",
				"name": "matchAllTags",
				"type": "boolean"
			},
			{
				"description": "match all project tags",
				"in": "query",
				"name": "matchAllProjectTags",
				"type": "boolean"
			},
			{
				"description": "generate a report document",
				"in": "query",
				"name": "isReportDownload",
				"type": "boolean"
			},
			{
				"description": "include milestones latest update action",
				"in": "query",
				"name": "includeUpdate",
				"type": "boolean"
			},
			{
				"default": "true",
				"description": "include today when milestone status is upcoming",
				"in": "query",
				"name": "includeToday",
				"type": "boolean"
			},
			{
				"default": "true",
				"description": "include team users to the responsible party ids",
				"in": "query",
				"name": "includeTeamUserIds",
				"type": "boolean"
			},
			{
				"default": "true",
				"description": "include tags in the reports",
				"in": "query",
				"name": "includeTags",
				"type": "boolean"
			},
			{
				"description": "include percentage of tasks completed for all linked tasklists",
				"in": "query",
				"name": "includeProgress",
				"type": "boolean"
			},
			{
				"description": "optional to include completed milestones",
				"in": "query",
				"name": "includeCompleted",
				"type": "boolean"
			},
			{
				"default": "true",
				"description": "include company users to the responsible party ids",
				"in": "query",
				"name": "includeCompanyUserIds",
				"type": "boolean"
			},
			{
				"description": "include teams related to the responsible user ids",
				"in": "query",
				"name": "includeAssigneeTeams",
				"type": "boolean"
			},
			{
				"description": "include companies related to the responsible user ids",
				"in": "query",
				"name": "includeAssigneeCompanies",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "include archived projects",
				"in": "query",
				"name": "includeArchivedProjects",
				"type": "boolean"
			},
			{
				"default": "true",
				"description": "convert emoji alias to unicode",
				"in": "query",
				"name": "emoji",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "count unread comments",
				"in": "query",
				"name": "countUnreadComments",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "enables the calendar style layout",
				"in": "query",
				"name": "calendar",
				"type": "boolean"
			},
			{
				"description": "filter by milestone tag ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "tagIds",
				"type": "array"
			},
			{
				"description": "filter by list of milestone status",
				"in": "query",
				"items": {
					"enum": [
						"all",
						"new",
						"reopened",
						"completed",
						"deleted",
						"pending",
						"incomplete",
						"late",
						"today",
						"upcoming"
					],
					"type": "string"
				},
				"name": "status",
				"type": "array"
			},
			{
				"description": "customise the report by selecting columns to be displayed.",
				"in": "query",
				"items": { "type": "string" },
				"name": "selectedColumns",
				"type": "array"
			},
			{
				"description": "filter by project tag ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectTagIds",
				"type": "array"
			},
			{
				"description": "filter by list of project status",
				"in": "query",
				"items": { "type": "string" },
				"name": "projectStatuses",
				"type": "array"
			},
			{
				"description": "filter by project owner ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectOwnerIds",
				"type": "array"
			},
			{
				"description": "filter by project ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectIds",
				"type": "array"
			},
			{
				"description": "filter by list of project health",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectHealths",
				"type": "array"
			},
			{
				"description": "filter by list of project health (deprecated, use projectHealths)",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectHealth",
				"type": "array"
			},
			{
				"description": "filter by company ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectCompanyIds",
				"type": "array"
			},
			{
				"description": "filter by project category ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectCategoryIds",
				"type": "array"
			},
			{
				"description": "include",
				"in": "query",
				"items": {
					"enum": [
						"projects",
						"projects.companies",
						"projects.categories",
						"users",
						"completedBy",
						"createdBy",
						"deletedBy",
						"updatedBy",
						"commentFollowers",
						"changeFollowers",
						"tags",
						"tasklists",
						"tasklisttaskstats"
					],
					"type": "string"
				},
				"name": "include",
				"type": "array"
			},
			{
				"description": "filter by ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "ids",
				"type": "array"
			},
			{
				"description": "filter by followers' ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "followerIds",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"firstName",
						"lastName",
						"title",
						"email",
						"companyId",
						"company",
						"isAdmin",
						"isClientUser",
						"isServiceAccount",
						"type",
						"deleted",
						"avatarUrl",
						"lengthOfDay",
						"workingHoursId",
						"workingHour",
						"userRate",
						"userCost",
						"canAddProjects"
					],
					"type": "string"
				},
				"name": "fields[users]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name", "projectId", "milestoneId"], "type": "string" },
				"name": "fields[tasklists]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name", "color", "count"], "type": "string" },
				"name": "fields[tags]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name"], "type": "string" },
				"name": "fields[projects]",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"name",
						"description",
						"deadline",
						"completed",
						"projectId",
						"createdOn",
						"lastChangedOn",
						"creatorUserId",
						"reminder",
						"private",
						"lockdownId",
						"status",
						"completedOn",
						"completerId",
						"percentageComplete"
					],
					"type": "string"
				},
				"name": "fields[milestones]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name", "logoUploadedToServer", "logoImage"], "type": "string" },
				"name": "fields[companies]",
				"type": "array"
			},
			{
				"description": "filter by creators' ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "creatorIds",
				"type": "array"
			},
			{
				"description": "filter by assigned user ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "assignedToUserIds",
				"type": "array"
			},
			{
				"description": "filter by assigned team ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "assignedToTeamIds",
				"type": "array"
			},
			{
				"description": "filter by assigned company ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "assignedToCompanyIds",
				"type": "array"
			}
		],
		"description": "Generate milestone report in HTML format",
		"group": "Milestones"
	},
	{
		"endpoint": "/projects/api/v3/milestones.json",
		"method": "get",
		"parameters": [
			{
				"description": "filter by updated after date (deprecated, use updatedAfter)",
				"format": "date-time",
				"in": "query",
				"name": "updatedAfterDate",
				"type": "string"
			},
			{
				"description": "filter by updated after date",
				"format": "date-time",
				"in": "query",
				"name": "updatedAfter",
				"type": "string"
			},
			{
				"description": "filter by milestone name and description",
				"in": "query",
				"name": "searchTerm",
				"type": "string"
			},
			{
				"default": "agenda",
				"description": "define the type of the report",
				"enum": ["plannedvsactual", "calendar", "agenda"],
				"in": "query",
				"name": "reportType",
				"type": "string"
			},
			{
				"description": "define the format of the report",
				"in": "query",
				"name": "reportFormat",
				"type": "string"
			},
			{
				"description": "filter by project status",
				"in": "query",
				"name": "projectStatus",
				"type": "string"
			},
			{
				"default": "asc",
				"description": "order mode",
				"enum": ["asc", "desc"],
				"in": "query",
				"name": "orderMode",
				"type": "string"
			},
			{
				"default": "date",
				"description": "order by",
				"enum": ["date", "dateonly", "name", "project", "user", "dateCreated", "dateUpdated"],
				"in": "query",
				"name": "orderBy",
				"type": "string"
			},
			{
				"description": "filter by due before date (deprecated, use dueBefore)",
				"format": "date",
				"in": "query",
				"name": "dueBeforeDate",
				"type": "string"
			},
			{
				"description": "filter by due before date",
				"format": "date",
				"in": "query",
				"name": "dueBefore",
				"type": "string"
			},
			{
				"description": "filter by due after date (deprecated, use dueAfter)",
				"format": "date",
				"in": "query",
				"name": "dueAfterDate",
				"type": "string"
			},
			{
				"description": "filter by due after date",
				"format": "date",
				"in": "query",
				"name": "dueAfter",
				"type": "string"
			},
			{
				"default": "50",
				"description": "number of items in a page",
				"in": "query",
				"name": "pageSize",
				"type": "integer"
			},
			{
				"default": "1",
				"description": "page number",
				"in": "query",
				"name": "page",
				"type": "integer"
			},
			{
				"default": "true",
				"description": "show private milestones",
				"in": "query",
				"name": "showPrivate",
				"type": "boolean"
			},
			{
				"description": "show percentages completed",
				"in": "query",
				"name": "showPercentageCompleted",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "include deleted items",
				"in": "query",
				"name": "showDeleted",
				"type": "boolean"
			},
			{
				"description": "show attached tasklists",
				"in": "query",
				"name": "showAttachedTasklists",
				"type": "boolean"
			},
			{
				"description": "include companies and teams in the search term",
				"in": "query",
				"name": "searchCompaniesTeams",
				"type": "boolean"
			},
			{
				"description": "include assignees in the search",
				"in": "query",
				"name": "searchAssignees",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "include progress of each milestone",
				"in": "query",
				"name": "progress",
				"type": "boolean"
			},
			{
				"description": "filter by starred projects only",
				"in": "query",
				"name": "onlyStarredProjects",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "filter by projects that the logged-in user is related",
				"in": "query",
				"name": "onlyMyProjects",
				"type": "boolean"
			},
			{
				"description": "only include milestones from projects where the user is strictly a project admin.\nsite admins have visibility to all projects.",
				"in": "query",
				"name": "onlyAdminProjects",
				"type": "boolean"
			},
			{
				"description": "match all milestone tags",
				"in": "query",
				"name": "matchAllTags",
				"type": "boolean"
			},
			{
				"description": "match all project tags",
				"in": "query",
				"name": "matchAllProjectTags",
				"type": "boolean"
			},
			{
				"description": "generate a report document",
				"in": "query",
				"name": "isReportDownload",
				"type": "boolean"
			},
			{
				"description": "include milestones latest update action",
				"in": "query",
				"name": "includeUpdate",
				"type": "boolean"
			},
			{
				"default": "true",
				"description": "include today when milestone status is upcoming",
				"in": "query",
				"name": "includeToday",
				"type": "boolean"
			},
			{
				"default": "true",
				"description": "include team users to the responsible party ids",
				"in": "query",
				"name": "includeTeamUserIds",
				"type": "boolean"
			},
			{
				"default": "true",
				"description": "include tags in the reports",
				"in": "query",
				"name": "includeTags",
				"type": "boolean"
			},
			{
				"description": "include percentage of tasks completed for all linked tasklists",
				"in": "query",
				"name": "includeProgress",
				"type": "boolean"
			},
			{
				"description": "optional to include completed milestones",
				"in": "query",
				"name": "includeCompleted",
				"type": "boolean"
			},
			{
				"default": "true",
				"description": "include company users to the responsible party ids",
				"in": "query",
				"name": "includeCompanyUserIds",
				"type": "boolean"
			},
			{
				"description": "include teams related to the responsible user ids",
				"in": "query",
				"name": "includeAssigneeTeams",
				"type": "boolean"
			},
			{
				"description": "include companies related to the responsible user ids",
				"in": "query",
				"name": "includeAssigneeCompanies",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "include archived projects",
				"in": "query",
				"name": "includeArchivedProjects",
				"type": "boolean"
			},
			{
				"default": "true",
				"description": "convert emoji alias to unicode",
				"in": "query",
				"name": "emoji",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "count unread comments",
				"in": "query",
				"name": "countUnreadComments",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "enables the calendar style layout",
				"in": "query",
				"name": "calendar",
				"type": "boolean"
			},
			{
				"description": "filter by milestone tag ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "tagIds",
				"type": "array"
			},
			{
				"description": "filter by list of milestone status",
				"in": "query",
				"items": {
					"enum": [
						"all",
						"new",
						"reopened",
						"completed",
						"deleted",
						"pending",
						"incomplete",
						"late",
						"today",
						"upcoming"
					],
					"type": "string"
				},
				"name": "status",
				"type": "array"
			},
			{
				"description": "customise the report by selecting columns to be displayed.",
				"in": "query",
				"items": { "type": "string" },
				"name": "selectedColumns",
				"type": "array"
			},
			{
				"description": "filter by project tag ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectTagIds",
				"type": "array"
			},
			{
				"description": "filter by list of project status",
				"in": "query",
				"items": { "type": "string" },
				"name": "projectStatuses",
				"type": "array"
			},
			{
				"description": "filter by project owner ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectOwnerIds",
				"type": "array"
			},
			{
				"description": "filter by project ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectIds",
				"type": "array"
			},
			{
				"description": "filter by list of project health",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectHealths",
				"type": "array"
			},
			{
				"description": "filter by list of project health (deprecated, use projectHealths)",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectHealth",
				"type": "array"
			},
			{
				"description": "filter by company ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectCompanyIds",
				"type": "array"
			},
			{
				"description": "filter by project category ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectCategoryIds",
				"type": "array"
			},
			{
				"description": "include",
				"in": "query",
				"items": {
					"enum": [
						"projects",
						"projects.companies",
						"projects.categories",
						"users",
						"completedBy",
						"createdBy",
						"deletedBy",
						"updatedBy",
						"commentFollowers",
						"changeFollowers",
						"tags",
						"tasklists",
						"tasklisttaskstats"
					],
					"type": "string"
				},
				"name": "include",
				"type": "array"
			},
			{
				"description": "filter by ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "ids",
				"type": "array"
			},
			{
				"description": "filter by followers' ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "followerIds",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"firstName",
						"lastName",
						"title",
						"email",
						"companyId",
						"company",
						"isAdmin",
						"isClientUser",
						"isServiceAccount",
						"type",
						"deleted",
						"avatarUrl",
						"lengthOfDay",
						"workingHoursId",
						"workingHour",
						"userRate",
						"userCost",
						"canAddProjects"
					],
					"type": "string"
				},
				"name": "fields[users]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name", "projectId", "milestoneId"], "type": "string" },
				"name": "fields[tasklists]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name", "color", "count"], "type": "string" },
				"name": "fields[tags]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name"], "type": "string" },
				"name": "fields[projects]",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"name",
						"description",
						"deadline",
						"completed",
						"projectId",
						"createdOn",
						"lastChangedOn",
						"creatorUserId",
						"reminder",
						"private",
						"lockdownId",
						"status",
						"completedOn",
						"completerId",
						"percentageComplete"
					],
					"type": "string"
				},
				"name": "fields[milestones]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name", "logoUploadedToServer", "logoImage"], "type": "string" },
				"name": "fields[companies]",
				"type": "array"
			},
			{
				"description": "filter by creators' ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "creatorIds",
				"type": "array"
			},
			{
				"description": "filter by assigned user ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "assignedToUserIds",
				"type": "array"
			},
			{
				"description": "filter by assigned team ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "assignedToTeamIds",
				"type": "array"
			},
			{
				"description": "filter by assigned company ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "assignedToCompanyIds",
				"type": "array"
			}
		],
		"description": "Get all milestones",
		"group": "Milestones"
	},
	{
		"endpoint": "/projects/api/v3/milestones.pdf",
		"method": "get",
		"parameters": [
			{
				"description": "filter by updated after date (deprecated, use updatedAfter)",
				"format": "date-time",
				"in": "query",
				"name": "updatedAfterDate",
				"type": "string"
			},
			{
				"description": "filter by updated after date",
				"format": "date-time",
				"in": "query",
				"name": "updatedAfter",
				"type": "string"
			},
			{
				"description": "filter by milestone name and description",
				"in": "query",
				"name": "searchTerm",
				"type": "string"
			},
			{
				"default": "agenda",
				"description": "define the type of the report",
				"enum": ["plannedvsactual", "calendar", "agenda"],
				"in": "query",
				"name": "reportType",
				"type": "string"
			},
			{
				"description": "define the format of the report",
				"in": "query",
				"name": "reportFormat",
				"type": "string"
			},
			{
				"description": "filter by project status",
				"in": "query",
				"name": "projectStatus",
				"type": "string"
			},
			{
				"default": "asc",
				"description": "order mode",
				"enum": ["asc", "desc"],
				"in": "query",
				"name": "orderMode",
				"type": "string"
			},
			{
				"default": "date",
				"description": "order by",
				"enum": ["date", "dateonly", "name", "project", "user", "dateCreated", "dateUpdated"],
				"in": "query",
				"name": "orderBy",
				"type": "string"
			},
			{
				"description": "filter by due before date (deprecated, use dueBefore)",
				"format": "date",
				"in": "query",
				"name": "dueBeforeDate",
				"type": "string"
			},
			{
				"description": "filter by due before date",
				"format": "date",
				"in": "query",
				"name": "dueBefore",
				"type": "string"
			},
			{
				"description": "filter by due after date (deprecated, use dueAfter)",
				"format": "date",
				"in": "query",
				"name": "dueAfterDate",
				"type": "string"
			},
			{
				"description": "filter by due after date",
				"format": "date",
				"in": "query",
				"name": "dueAfter",
				"type": "string"
			},
			{
				"default": "50",
				"description": "number of items in a page",
				"in": "query",
				"name": "pageSize",
				"type": "integer"
			},
			{
				"default": "1",
				"description": "page number",
				"in": "query",
				"name": "page",
				"type": "integer"
			},
			{
				"default": "true",
				"description": "show private milestones",
				"in": "query",
				"name": "showPrivate",
				"type": "boolean"
			},
			{
				"description": "show percentages completed",
				"in": "query",
				"name": "showPercentageCompleted",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "include deleted items",
				"in": "query",
				"name": "showDeleted",
				"type": "boolean"
			},
			{
				"description": "show attached tasklists",
				"in": "query",
				"name": "showAttachedTasklists",
				"type": "boolean"
			},
			{
				"description": "include companies and teams in the search term",
				"in": "query",
				"name": "searchCompaniesTeams",
				"type": "boolean"
			},
			{
				"description": "include assignees in the search",
				"in": "query",
				"name": "searchAssignees",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "include progress of each milestone",
				"in": "query",
				"name": "progress",
				"type": "boolean"
			},
			{
				"description": "filter by starred projects only",
				"in": "query",
				"name": "onlyStarredProjects",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "filter by projects that the logged-in user is related",
				"in": "query",
				"name": "onlyMyProjects",
				"type": "boolean"
			},
			{
				"description": "only include milestones from projects where the user is strictly a project admin.\nsite admins have visibility to all projects.",
				"in": "query",
				"name": "onlyAdminProjects",
				"type": "boolean"
			},
			{
				"description": "match all milestone tags",
				"in": "query",
				"name": "matchAllTags",
				"type": "boolean"
			},
			{
				"description": "match all project tags",
				"in": "query",
				"name": "matchAllProjectTags",
				"type": "boolean"
			},
			{
				"description": "generate a report document",
				"in": "query",
				"name": "isReportDownload",
				"type": "boolean"
			},
			{
				"description": "include milestones latest update action",
				"in": "query",
				"name": "includeUpdate",
				"type": "boolean"
			},
			{
				"default": "true",
				"description": "include today when milestone status is upcoming",
				"in": "query",
				"name": "includeToday",
				"type": "boolean"
			},
			{
				"default": "true",
				"description": "include team users to the responsible party ids",
				"in": "query",
				"name": "includeTeamUserIds",
				"type": "boolean"
			},
			{
				"default": "true",
				"description": "include tags in the reports",
				"in": "query",
				"name": "includeTags",
				"type": "boolean"
			},
			{
				"description": "include percentage of tasks completed for all linked tasklists",
				"in": "query",
				"name": "includeProgress",
				"type": "boolean"
			},
			{
				"description": "optional to include completed milestones",
				"in": "query",
				"name": "includeCompleted",
				"type": "boolean"
			},
			{
				"default": "true",
				"description": "include company users to the responsible party ids",
				"in": "query",
				"name": "includeCompanyUserIds",
				"type": "boolean"
			},
			{
				"description": "include teams related to the responsible user ids",
				"in": "query",
				"name": "includeAssigneeTeams",
				"type": "boolean"
			},
			{
				"description": "include companies related to the responsible user ids",
				"in": "query",
				"name": "includeAssigneeCompanies",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "include archived projects",
				"in": "query",
				"name": "includeArchivedProjects",
				"type": "boolean"
			},
			{
				"default": "true",
				"description": "convert emoji alias to unicode",
				"in": "query",
				"name": "emoji",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "count unread comments",
				"in": "query",
				"name": "countUnreadComments",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "enables the calendar style layout",
				"in": "query",
				"name": "calendar",
				"type": "boolean"
			},
			{
				"description": "filter by milestone tag ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "tagIds",
				"type": "array"
			},
			{
				"description": "filter by list of milestone status",
				"in": "query",
				"items": {
					"enum": [
						"all",
						"new",
						"reopened",
						"completed",
						"deleted",
						"pending",
						"incomplete",
						"late",
						"today",
						"upcoming"
					],
					"type": "string"
				},
				"name": "status",
				"type": "array"
			},
			{
				"description": "customise the report by selecting columns to be displayed.",
				"in": "query",
				"items": { "type": "string" },
				"name": "selectedColumns",
				"type": "array"
			},
			{
				"description": "filter by project tag ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectTagIds",
				"type": "array"
			},
			{
				"description": "filter by list of project status",
				"in": "query",
				"items": { "type": "string" },
				"name": "projectStatuses",
				"type": "array"
			},
			{
				"description": "filter by project owner ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectOwnerIds",
				"type": "array"
			},
			{
				"description": "filter by project ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectIds",
				"type": "array"
			},
			{
				"description": "filter by list of project health",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectHealths",
				"type": "array"
			},
			{
				"description": "filter by list of project health (deprecated, use projectHealths)",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectHealth",
				"type": "array"
			},
			{
				"description": "filter by company ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectCompanyIds",
				"type": "array"
			},
			{
				"description": "filter by project category ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectCategoryIds",
				"type": "array"
			},
			{
				"description": "include",
				"in": "query",
				"items": {
					"enum": [
						"projects",
						"projects.companies",
						"projects.categories",
						"users",
						"completedBy",
						"createdBy",
						"deletedBy",
						"updatedBy",
						"commentFollowers",
						"changeFollowers",
						"tags",
						"tasklists",
						"tasklisttaskstats"
					],
					"type": "string"
				},
				"name": "include",
				"type": "array"
			},
			{
				"description": "filter by ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "ids",
				"type": "array"
			},
			{
				"description": "filter by followers' ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "followerIds",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"firstName",
						"lastName",
						"title",
						"email",
						"companyId",
						"company",
						"isAdmin",
						"isClientUser",
						"isServiceAccount",
						"type",
						"deleted",
						"avatarUrl",
						"lengthOfDay",
						"workingHoursId",
						"workingHour",
						"userRate",
						"userCost",
						"canAddProjects"
					],
					"type": "string"
				},
				"name": "fields[users]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name", "projectId", "milestoneId"], "type": "string" },
				"name": "fields[tasklists]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name", "color", "count"], "type": "string" },
				"name": "fields[tags]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name"], "type": "string" },
				"name": "fields[projects]",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"name",
						"description",
						"deadline",
						"completed",
						"projectId",
						"createdOn",
						"lastChangedOn",
						"creatorUserId",
						"reminder",
						"private",
						"lockdownId",
						"status",
						"completedOn",
						"completerId",
						"percentageComplete"
					],
					"type": "string"
				},
				"name": "fields[milestones]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name", "logoUploadedToServer", "logoImage"], "type": "string" },
				"name": "fields[companies]",
				"type": "array"
			},
			{
				"description": "filter by creators' ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "creatorIds",
				"type": "array"
			},
			{
				"description": "filter by assigned user ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "assignedToUserIds",
				"type": "array"
			},
			{
				"description": "filter by assigned team ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "assignedToTeamIds",
				"type": "array"
			},
			{
				"description": "filter by assigned company ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "assignedToCompanyIds",
				"type": "array"
			}
		],
		"description": "Generate milestone report in PDF format",
		"group": "Milestones"
	},
	{
		"endpoint": "/projects/api/v3/milestones.xlsx",
		"method": "get",
		"parameters": [
			{
				"description": "filter by updated after date (deprecated, use updatedAfter)",
				"format": "date-time",
				"in": "query",
				"name": "updatedAfterDate",
				"type": "string"
			},
			{
				"description": "filter by updated after date",
				"format": "date-time",
				"in": "query",
				"name": "updatedAfter",
				"type": "string"
			},
			{
				"description": "filter by milestone name and description",
				"in": "query",
				"name": "searchTerm",
				"type": "string"
			},
			{
				"default": "agenda",
				"description": "define the type of the report",
				"enum": ["plannedvsactual", "calendar", "agenda"],
				"in": "query",
				"name": "reportType",
				"type": "string"
			},
			{
				"description": "define the format of the report",
				"in": "query",
				"name": "reportFormat",
				"type": "string"
			},
			{
				"description": "filter by project status",
				"in": "query",
				"name": "projectStatus",
				"type": "string"
			},
			{
				"default": "asc",
				"description": "order mode",
				"enum": ["asc", "desc"],
				"in": "query",
				"name": "orderMode",
				"type": "string"
			},
			{
				"default": "date",
				"description": "order by",
				"enum": ["date", "dateonly", "name", "project", "user", "dateCreated", "dateUpdated"],
				"in": "query",
				"name": "orderBy",
				"type": "string"
			},
			{
				"description": "filter by due before date (deprecated, use dueBefore)",
				"format": "date",
				"in": "query",
				"name": "dueBeforeDate",
				"type": "string"
			},
			{
				"description": "filter by due before date",
				"format": "date",
				"in": "query",
				"name": "dueBefore",
				"type": "string"
			},
			{
				"description": "filter by due after date (deprecated, use dueAfter)",
				"format": "date",
				"in": "query",
				"name": "dueAfterDate",
				"type": "string"
			},
			{
				"description": "filter by due after date",
				"format": "date",
				"in": "query",
				"name": "dueAfter",
				"type": "string"
			},
			{
				"default": "50",
				"description": "number of items in a page",
				"in": "query",
				"name": "pageSize",
				"type": "integer"
			},
			{
				"default": "1",
				"description": "page number",
				"in": "query",
				"name": "page",
				"type": "integer"
			},
			{
				"default": "true",
				"description": "show private milestones",
				"in": "query",
				"name": "showPrivate",
				"type": "boolean"
			},
			{
				"description": "show percentages completed",
				"in": "query",
				"name": "showPercentageCompleted",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "include deleted items",
				"in": "query",
				"name": "showDeleted",
				"type": "boolean"
			},
			{
				"description": "show attached tasklists",
				"in": "query",
				"name": "showAttachedTasklists",
				"type": "boolean"
			},
			{
				"description": "include companies and teams in the search term",
				"in": "query",
				"name": "searchCompaniesTeams",
				"type": "boolean"
			},
			{
				"description": "include assignees in the search",
				"in": "query",
				"name": "searchAssignees",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "include progress of each milestone",
				"in": "query",
				"name": "progress",
				"type": "boolean"
			},
			{
				"description": "filter by starred projects only",
				"in": "query",
				"name": "onlyStarredProjects",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "filter by projects that the logged-in user is related",
				"in": "query",
				"name": "onlyMyProjects",
				"type": "boolean"
			},
			{
				"description": "only include milestones from projects where the user is strictly a project admin.\nsite admins have visibility to all projects.",
				"in": "query",
				"name": "onlyAdminProjects",
				"type": "boolean"
			},
			{
				"description": "match all milestone tags",
				"in": "query",
				"name": "matchAllTags",
				"type": "boolean"
			},
			{
				"description": "match all project tags",
				"in": "query",
				"name": "matchAllProjectTags",
				"type": "boolean"
			},
			{
				"description": "generate a report document",
				"in": "query",
				"name": "isReportDownload",
				"type": "boolean"
			},
			{
				"description": "include milestones latest update action",
				"in": "query",
				"name": "includeUpdate",
				"type": "boolean"
			},
			{
				"default": "true",
				"description": "include today when milestone status is upcoming",
				"in": "query",
				"name": "includeToday",
				"type": "boolean"
			},
			{
				"default": "true",
				"description": "include team users to the responsible party ids",
				"in": "query",
				"name": "includeTeamUserIds",
				"type": "boolean"
			},
			{
				"default": "true",
				"description": "include tags in the reports",
				"in": "query",
				"name": "includeTags",
				"type": "boolean"
			},
			{
				"description": "include percentage of tasks completed for all linked tasklists",
				"in": "query",
				"name": "includeProgress",
				"type": "boolean"
			},
			{
				"description": "optional to include completed milestones",
				"in": "query",
				"name": "includeCompleted",
				"type": "boolean"
			},
			{
				"default": "true",
				"description": "include company users to the responsible party ids",
				"in": "query",
				"name": "includeCompanyUserIds",
				"type": "boolean"
			},
			{
				"description": "include teams related to the responsible user ids",
				"in": "query",
				"name": "includeAssigneeTeams",
				"type": "boolean"
			},
			{
				"description": "include companies related to the responsible user ids",
				"in": "query",
				"name": "includeAssigneeCompanies",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "include archived projects",
				"in": "query",
				"name": "includeArchivedProjects",
				"type": "boolean"
			},
			{
				"default": "true",
				"description": "convert emoji alias to unicode",
				"in": "query",
				"name": "emoji",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "count unread comments",
				"in": "query",
				"name": "countUnreadComments",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "enables the calendar style layout",
				"in": "query",
				"name": "calendar",
				"type": "boolean"
			},
			{
				"description": "filter by milestone tag ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "tagIds",
				"type": "array"
			},
			{
				"description": "filter by list of milestone status",
				"in": "query",
				"items": {
					"enum": [
						"all",
						"new",
						"reopened",
						"completed",
						"deleted",
						"pending",
						"incomplete",
						"late",
						"today",
						"upcoming"
					],
					"type": "string"
				},
				"name": "status",
				"type": "array"
			},
			{
				"description": "customise the report by selecting columns to be displayed.",
				"in": "query",
				"items": { "type": "string" },
				"name": "selectedColumns",
				"type": "array"
			},
			{
				"description": "filter by project tag ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectTagIds",
				"type": "array"
			},
			{
				"description": "filter by list of project status",
				"in": "query",
				"items": { "type": "string" },
				"name": "projectStatuses",
				"type": "array"
			},
			{
				"description": "filter by project owner ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectOwnerIds",
				"type": "array"
			},
			{
				"description": "filter by project ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectIds",
				"type": "array"
			},
			{
				"description": "filter by list of project health",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectHealths",
				"type": "array"
			},
			{
				"description": "filter by list of project health (deprecated, use projectHealths)",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectHealth",
				"type": "array"
			},
			{
				"description": "filter by company ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectCompanyIds",
				"type": "array"
			},
			{
				"description": "filter by project category ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectCategoryIds",
				"type": "array"
			},
			{
				"description": "include",
				"in": "query",
				"items": {
					"enum": [
						"projects",
						"projects.companies",
						"projects.categories",
						"users",
						"completedBy",
						"createdBy",
						"deletedBy",
						"updatedBy",
						"commentFollowers",
						"changeFollowers",
						"tags",
						"tasklists",
						"tasklisttaskstats"
					],
					"type": "string"
				},
				"name": "include",
				"type": "array"
			},
			{
				"description": "filter by ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "ids",
				"type": "array"
			},
			{
				"description": "filter by followers' ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "followerIds",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"firstName",
						"lastName",
						"title",
						"email",
						"companyId",
						"company",
						"isAdmin",
						"isClientUser",
						"isServiceAccount",
						"type",
						"deleted",
						"avatarUrl",
						"lengthOfDay",
						"workingHoursId",
						"workingHour",
						"userRate",
						"userCost",
						"canAddProjects"
					],
					"type": "string"
				},
				"name": "fields[users]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name", "projectId", "milestoneId"], "type": "string" },
				"name": "fields[tasklists]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name", "color", "count"], "type": "string" },
				"name": "fields[tags]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name"], "type": "string" },
				"name": "fields[projects]",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"name",
						"description",
						"deadline",
						"completed",
						"projectId",
						"createdOn",
						"lastChangedOn",
						"creatorUserId",
						"reminder",
						"private",
						"lockdownId",
						"status",
						"completedOn",
						"completerId",
						"percentageComplete"
					],
					"type": "string"
				},
				"name": "fields[milestones]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name", "logoUploadedToServer", "logoImage"], "type": "string" },
				"name": "fields[companies]",
				"type": "array"
			},
			{
				"description": "filter by creators' ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "creatorIds",
				"type": "array"
			},
			{
				"description": "filter by assigned user ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "assignedToUserIds",
				"type": "array"
			},
			{
				"description": "filter by assigned team ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "assignedToTeamIds",
				"type": "array"
			},
			{
				"description": "filter by assigned company ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "assignedToCompanyIds",
				"type": "array"
			}
		],
		"description": "Generate milestone report in XLSX format",
		"group": "Milestones"
	},
	{
		"endpoint": "/projects/api/v3/milestones/metrics/deadlines.json",
		"method": "get",
		"parameters": [
			{ "format": "date", "in": "query", "name": "startDate", "type": "string" },
			{ "format": "date", "in": "query", "name": "endDate", "type": "string" }
		],
		"description": "Get milestones by due date in a time range",
		"group": "Milestones"
	},
	{
		"endpoint": "/projects/api/v3/milestones/{milestonId}.json",
		"method": "get",
		"parameters": [
			{
				"description": "filter by updated after date (deprecated, use updatedAfter)",
				"format": "date-time",
				"in": "query",
				"name": "updatedAfterDate",
				"type": "string"
			},
			{
				"description": "filter by updated after date",
				"format": "date-time",
				"in": "query",
				"name": "updatedAfter",
				"type": "string"
			},
			{
				"description": "filter by milestone name and description",
				"in": "query",
				"name": "searchTerm",
				"type": "string"
			},
			{
				"default": "agenda",
				"description": "define the type of the report",
				"enum": ["plannedvsactual", "calendar", "agenda"],
				"in": "query",
				"name": "reportType",
				"type": "string"
			},
			{
				"description": "define the format of the report",
				"in": "query",
				"name": "reportFormat",
				"type": "string"
			},
			{
				"description": "filter by project status",
				"in": "query",
				"name": "projectStatus",
				"type": "string"
			},
			{
				"default": "asc",
				"description": "order mode",
				"enum": ["asc", "desc"],
				"in": "query",
				"name": "orderMode",
				"type": "string"
			},
			{
				"default": "date",
				"description": "order by",
				"enum": ["date", "dateonly", "name", "project", "user", "dateCreated", "dateUpdated"],
				"in": "query",
				"name": "orderBy",
				"type": "string"
			},
			{
				"description": "filter by due before date (deprecated, use dueBefore)",
				"format": "date",
				"in": "query",
				"name": "dueBeforeDate",
				"type": "string"
			},
			{
				"description": "filter by due before date",
				"format": "date",
				"in": "query",
				"name": "dueBefore",
				"type": "string"
			},
			{
				"description": "filter by due after date (deprecated, use dueAfter)",
				"format": "date",
				"in": "query",
				"name": "dueAfterDate",
				"type": "string"
			},
			{
				"description": "filter by due after date",
				"format": "date",
				"in": "query",
				"name": "dueAfter",
				"type": "string"
			},
			{
				"default": "50",
				"description": "number of items in a page",
				"in": "query",
				"name": "pageSize",
				"type": "integer"
			},
			{
				"default": "1",
				"description": "page number",
				"in": "query",
				"name": "page",
				"type": "integer"
			},
			{ "in": "path", "name": "milestonId", "required": true, "type": "integer" },
			{
				"default": "true",
				"description": "show private milestones",
				"in": "query",
				"name": "showPrivate",
				"type": "boolean"
			},
			{
				"description": "show percentages completed",
				"in": "query",
				"name": "showPercentageCompleted",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "include deleted items",
				"in": "query",
				"name": "showDeleted",
				"type": "boolean"
			},
			{
				"description": "show attached tasklists",
				"in": "query",
				"name": "showAttachedTasklists",
				"type": "boolean"
			},
			{
				"description": "include companies and teams in the search term",
				"in": "query",
				"name": "searchCompaniesTeams",
				"type": "boolean"
			},
			{
				"description": "include assignees in the search",
				"in": "query",
				"name": "searchAssignees",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "include progress of each milestone",
				"in": "query",
				"name": "progress",
				"type": "boolean"
			},
			{
				"description": "filter by starred projects only",
				"in": "query",
				"name": "onlyStarredProjects",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "filter by projects that the logged-in user is related",
				"in": "query",
				"name": "onlyMyProjects",
				"type": "boolean"
			},
			{
				"description": "only include milestones from projects where the user is strictly a project admin.\nsite admins have visibility to all projects.",
				"in": "query",
				"name": "onlyAdminProjects",
				"type": "boolean"
			},
			{
				"description": "match all milestone tags",
				"in": "query",
				"name": "matchAllTags",
				"type": "boolean"
			},
			{
				"description": "match all project tags",
				"in": "query",
				"name": "matchAllProjectTags",
				"type": "boolean"
			},
			{
				"description": "generate a report document",
				"in": "query",
				"name": "isReportDownload",
				"type": "boolean"
			},
			{
				"description": "include milestones latest update action",
				"in": "query",
				"name": "includeUpdate",
				"type": "boolean"
			},
			{
				"default": "true",
				"description": "include today when milestone status is upcoming",
				"in": "query",
				"name": "includeToday",
				"type": "boolean"
			},
			{
				"default": "true",
				"description": "include team users to the responsible party ids",
				"in": "query",
				"name": "includeTeamUserIds",
				"type": "boolean"
			},
			{
				"default": "true",
				"description": "include tags in the reports",
				"in": "query",
				"name": "includeTags",
				"type": "boolean"
			},
			{
				"description": "include percentage of tasks completed for all linked tasklists",
				"in": "query",
				"name": "includeProgress",
				"type": "boolean"
			},
			{
				"description": "optional to include completed milestones",
				"in": "query",
				"name": "includeCompleted",
				"type": "boolean"
			},
			{
				"default": "true",
				"description": "include company users to the responsible party ids",
				"in": "query",
				"name": "includeCompanyUserIds",
				"type": "boolean"
			},
			{
				"description": "include teams related to the responsible user ids",
				"in": "query",
				"name": "includeAssigneeTeams",
				"type": "boolean"
			},
			{
				"description": "include companies related to the responsible user ids",
				"in": "query",
				"name": "includeAssigneeCompanies",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "include archived projects",
				"in": "query",
				"name": "includeArchivedProjects",
				"type": "boolean"
			},
			{
				"default": "true",
				"description": "convert emoji alias to unicode",
				"in": "query",
				"name": "emoji",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "count unread comments",
				"in": "query",
				"name": "countUnreadComments",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "enables the calendar style layout",
				"in": "query",
				"name": "calendar",
				"type": "boolean"
			},
			{
				"description": "filter by milestone tag ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "tagIds",
				"type": "array"
			},
			{
				"description": "filter by list of milestone status",
				"in": "query",
				"items": {
					"enum": [
						"all",
						"new",
						"reopened",
						"completed",
						"deleted",
						"pending",
						"incomplete",
						"late",
						"today",
						"upcoming"
					],
					"type": "string"
				},
				"name": "status",
				"type": "array"
			},
			{
				"description": "customise the report by selecting columns to be displayed.",
				"in": "query",
				"items": { "type": "string" },
				"name": "selectedColumns",
				"type": "array"
			},
			{
				"description": "filter by project tag ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectTagIds",
				"type": "array"
			},
			{
				"description": "filter by list of project status",
				"in": "query",
				"items": { "type": "string" },
				"name": "projectStatuses",
				"type": "array"
			},
			{
				"description": "filter by project owner ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectOwnerIds",
				"type": "array"
			},
			{
				"description": "filter by project ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectIds",
				"type": "array"
			},
			{
				"description": "filter by list of project health",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectHealths",
				"type": "array"
			},
			{
				"description": "filter by list of project health (deprecated, use projectHealths)",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectHealth",
				"type": "array"
			},
			{
				"description": "filter by company ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectCompanyIds",
				"type": "array"
			},
			{
				"description": "filter by project category ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectCategoryIds",
				"type": "array"
			},
			{
				"description": "include",
				"in": "query",
				"items": {
					"enum": [
						"projects",
						"projects.companies",
						"projects.categories",
						"users",
						"completedBy",
						"createdBy",
						"deletedBy",
						"updatedBy",
						"commentFollowers",
						"changeFollowers",
						"tags",
						"tasklists",
						"tasklisttaskstats"
					],
					"type": "string"
				},
				"name": "include",
				"type": "array"
			},
			{
				"description": "filter by ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "ids",
				"type": "array"
			},
			{
				"description": "filter by followers' ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "followerIds",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"firstName",
						"lastName",
						"title",
						"email",
						"companyId",
						"company",
						"isAdmin",
						"isClientUser",
						"isServiceAccount",
						"type",
						"deleted",
						"avatarUrl",
						"lengthOfDay",
						"workingHoursId",
						"workingHour",
						"userRate",
						"userCost",
						"canAddProjects"
					],
					"type": "string"
				},
				"name": "fields[users]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name", "projectId", "milestoneId"], "type": "string" },
				"name": "fields[tasklists]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name", "color", "count"], "type": "string" },
				"name": "fields[tags]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name"], "type": "string" },
				"name": "fields[projects]",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"name",
						"description",
						"deadline",
						"completed",
						"projectId",
						"createdOn",
						"lastChangedOn",
						"creatorUserId",
						"reminder",
						"private",
						"lockdownId",
						"status",
						"completedOn",
						"completerId",
						"percentageComplete"
					],
					"type": "string"
				},
				"name": "fields[milestones]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name", "logoUploadedToServer", "logoImage"], "type": "string" },
				"name": "fields[companies]",
				"type": "array"
			},
			{
				"description": "filter by creators' ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "creatorIds",
				"type": "array"
			},
			{
				"description": "filter by assigned user ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "assignedToUserIds",
				"type": "array"
			},
			{
				"description": "filter by assigned team ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "assignedToTeamIds",
				"type": "array"
			},
			{
				"description": "filter by assigned company ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "assignedToCompanyIds",
				"type": "array"
			}
		],
		"description": "Get a milestone by id.",
		"group": "Milestones"
	},
	{
		"endpoint": "/projects/api/v3/milestones/{milestoneId}/comments.json",
		"method": "get",
		"parameters": [{ "in": "path", "name": "milestoneId", "required": true, "type": "integer" }],
		"description": "Get a list of comments for a milestone",
		"group": "MilestoneComments"
	},
	{
		"endpoint": "/projects/api/v3/notebooks.json",
		"method": "get",
		"parameters": [
			{
				"description": "filter by updated after date (deprecated, use updatedAfter)",
				"format": "date-time",
				"in": "query",
				"name": "updatedAfterDate",
				"type": "string"
			},
			{
				"description": "filter by updated after date",
				"format": "date-time",
				"in": "query",
				"name": "updatedAfter",
				"type": "string"
			},
			{
				"description": "filter by notebook name and description",
				"in": "query",
				"name": "searchTerm",
				"type": "string"
			},
			{
				"default": "normal",
				"description": "filter by project type",
				"enum": ["normal", "tasklists-template", "projects-template"],
				"in": "query",
				"name": "projectType",
				"type": "string"
			},
			{
				"description": "filter by project statuses",
				"in": "query",
				"name": "projectStatuses",
				"type": "string"
			},
			{
				"default": "asc",
				"description": "order mode",
				"enum": ["asc", "desc"],
				"in": "query",
				"name": "orderMode",
				"type": "string"
			},
			{
				"default": "dateUpdated",
				"description": "order by",
				"enum": ["name", "project", "dateCreated", "dateUpdated", "category"],
				"in": "query",
				"name": "orderBy",
				"type": "string"
			},
			{
				"description": "filter by created after date (deprecated, use createdAfter)",
				"format": "date",
				"in": "query",
				"name": "createdAfterDate",
				"type": "string"
			},
			{
				"description": "filter by created after date",
				"format": "date",
				"in": "query",
				"name": "createdAfter",
				"type": "string"
			},
			{
				"default": "50",
				"description": "number of items in a page",
				"in": "query",
				"name": "pageSize",
				"type": "integer"
			},
			{
				"default": "1",
				"description": "page number",
				"in": "query",
				"name": "page",
				"type": "integer"
			},
			{
				"default": "false",
				"description": "include deleted items",
				"in": "query",
				"name": "showDeleted",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "filter by showing only secure notebooks",
				"in": "query",
				"name": "secureOnly",
				"type": "boolean"
			},
			{
				"description": "match all notebook tags",
				"in": "query",
				"name": "matchAllTags",
				"type": "boolean"
			},
			{
				"description": "match all project tags",
				"in": "query",
				"name": "matchAllProjectTags",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "filter by showing only locked notebooks",
				"in": "query",
				"name": "lockedOnly",
				"type": "boolean"
			},
			{
				"default": "true",
				"description": "include contents.",
				"in": "query",
				"name": "includeContents",
				"type": "boolean"
			},
			{
				"description": "include archived projects",
				"in": "query",
				"name": "includeArchivedProjects",
				"type": "boolean"
			},
			{
				"default": "true",
				"description": "parse emojis to unicode",
				"in": "query",
				"name": "getEmoji",
				"type": "boolean"
			},
			{
				"description": "filter by notebook tag ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "tagIds",
				"type": "array"
			},
			{
				"description": "filter by project tag ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectTagIds",
				"type": "array"
			},
			{
				"description": "filter by project owner ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectOwnerIds",
				"type": "array"
			},
			{
				"description": "filter by project ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectIds",
				"type": "array"
			},
			{
				"description": "filter by project healths\n\n0: not set\n1: bad\n2: ok\n3: good",
				"in": "query",
				"items": { "enum": ["0", "1", "2", "3"], "type": "integer" },
				"name": "projectHealths",
				"type": "array"
			},
			{
				"description": "filter by company ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectCompanyIds",
				"type": "array"
			},
			{
				"description": "filter by project category ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectCategoryIds",
				"type": "array"
			},
			{
				"description": "include",
				"in": "query",
				"items": {
					"enum": ["projects", "tags", "users", "notebookCategories", "companies", "teams"],
					"type": "string"
				},
				"name": "include",
				"type": "array"
			},
			{
				"description": "filter by ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "ids",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"firstName",
						"lastName",
						"title",
						"email",
						"companyId",
						"company",
						"isAdmin",
						"isClientUser",
						"isServiceAccount",
						"type",
						"deleted",
						"avatarUrl",
						"lengthOfDay",
						"workingHoursId",
						"workingHour",
						"userRate",
						"userCost",
						"canAddProjects"
					],
					"type": "string"
				},
				"name": "fields[users]",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": ["id", "name", "teamLogo", "teamLogoIcon", "teamLogoColor"],
					"type": "string"
				},
				"name": "fields[teams]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name", "color", "count"], "type": "string" },
				"name": "fields[tags]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name"], "type": "string" },
				"name": "fields[projects]",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"name",
						"description",
						"contents",
						"type",
						"isPrivate",
						"locked",
						"lockdownId",
						"secureContent",
						"projectId",
						"createdByUserID",
						"updatedByUserID",
						"deletedByUserID",
						"dateUpdated",
						"dateCreated",
						"dateDeleted",
						"deleted",
						"categoryId",
						"notebookVersionID",
						"notebookVersionCreatedDateTime",
						"notebookVersionUpdatedDateTime",
						"latestVersionNo",
						"commentsCount",
						"readCommentsCount",
						"contentHTML",
						"privacy",
						"commentFollowers",
						"changeFollowers",
						"projectNotifyCommentIncludeCreator",
						"tagIds"
					],
					"type": "string"
				},
				"name": "fields[notebooks]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "type": "string" },
				"name": "fields[notebookCategories]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name", "logoUploadedToServer", "logoImage"], "type": "string" },
				"name": "fields[companies]",
				"type": "array"
			},
			{
				"description": "filter by creators' ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "creatorIds",
				"type": "array"
			},
			{
				"description": "filter by notebook category ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "categoryIds",
				"type": "array"
			}
		],
		"description": "Get a list of notebooks.",
		"group": "Notebooks"
	},
	{
		"endpoint": "/projects/api/v3/notebooks/{notebookId}.json",
		"method": "delete",
		"parameters": [{ "in": "path", "name": "notebookId", "required": true, "type": "integer" }],
		"description": "Delete an existing notebook.",
		"group": "Notebooks"
	},
	{
		"endpoint": "/projects/api/v3/notebooks/{notebookId}.json",
		"method": "get",
		"parameters": [
			{
				"description": "filter by updated after date (deprecated, use updatedAfter)",
				"format": "date-time",
				"in": "query",
				"name": "updatedAfterDate",
				"type": "string"
			},
			{
				"description": "filter by updated after date",
				"format": "date-time",
				"in": "query",
				"name": "updatedAfter",
				"type": "string"
			},
			{
				"default": "normal",
				"description": "filter by project type",
				"enum": ["normal", "tasklists-template", "projects-template"],
				"in": "query",
				"name": "projectType",
				"type": "string"
			},
			{ "in": "path", "name": "notebookId", "required": true, "type": "integer" },
			{
				"description": "show deleted notebooks",
				"in": "query",
				"name": "showDeleted",
				"type": "boolean"
			},
			{
				"default": "true",
				"description": "parse emojis to unicode",
				"in": "query",
				"name": "getEmoji",
				"type": "boolean"
			},
			{
				"description": "include",
				"in": "query",
				"items": {
					"enum": ["projects", "tags", "users", "notebookCategories", "companies", "teams"],
					"type": "string"
				},
				"name": "include",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"firstName",
						"lastName",
						"title",
						"email",
						"companyId",
						"company",
						"isAdmin",
						"isClientUser",
						"isServiceAccount",
						"type",
						"deleted",
						"avatarUrl",
						"lengthOfDay",
						"workingHoursId",
						"workingHour",
						"userRate",
						"userCost",
						"canAddProjects"
					],
					"type": "string"
				},
				"name": "fields[users]",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": ["id", "name", "teamLogo", "teamLogoIcon", "teamLogoColor"],
					"type": "string"
				},
				"name": "fields[teams]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name", "color", "count"], "type": "string" },
				"name": "fields[tags]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name"], "type": "string" },
				"name": "fields[projects]",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"name",
						"description",
						"contents",
						"type",
						"isPrivate",
						"locked",
						"lockdownId",
						"secureContent",
						"projectId",
						"createdByUserID",
						"updatedByUserID",
						"deletedByUserID",
						"dateUpdated",
						"dateCreated",
						"dateDeleted",
						"deleted",
						"categoryId",
						"notebookVersionID",
						"notebookVersionCreatedDateTime",
						"notebookVersionUpdatedDateTime",
						"latestVersionNo",
						"commentsCount",
						"readCommentsCount",
						"contentHTML",
						"privacy",
						"commentFollowers",
						"changeFollowers",
						"projectNotifyCommentIncludeCreator",
						"tagIds"
					],
					"type": "string"
				},
				"name": "fields[notebooks]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "type": "string" },
				"name": "fields[notebookCategories]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name", "logoUploadedToServer", "logoImage"], "type": "string" },
				"name": "fields[companies]",
				"type": "array"
			}
		],
		"description": "Get a specific notebook.",
		"group": "Notebooks"
	},
	{
		"endpoint": "/projects/api/v3/notebooks/{notebookId}.json",
		"method": "patch",
		"parameters": [
			{
				"in": "body",
				"name": "notebook.Request",
				"required": true,
				"schema": { "$ref": "#/definitions/notebook.Request" }
			},
			{ "in": "path", "name": "notebookId", "required": true, "type": "integer" },
			{
				"default": "true",
				"description": "parse emojis to unicode",
				"in": "query",
				"name": "getEmoji",
				"type": "boolean"
			},
			{
				"description": "include",
				"in": "query",
				"items": {
					"enum": ["projects", "tags", "users", "notebookCategories", "companies", "teams"],
					"type": "string"
				},
				"name": "include",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"firstName",
						"lastName",
						"title",
						"email",
						"companyId",
						"company",
						"isAdmin",
						"isClientUser",
						"isServiceAccount",
						"type",
						"deleted",
						"avatarUrl",
						"lengthOfDay",
						"workingHoursId",
						"workingHour",
						"userRate",
						"userCost",
						"canAddProjects"
					],
					"type": "string"
				},
				"name": "fields[users]",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": ["id", "name", "teamLogo", "teamLogoIcon", "teamLogoColor"],
					"type": "string"
				},
				"name": "fields[teams]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name", "color", "count"], "type": "string" },
				"name": "fields[tags]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name"], "type": "string" },
				"name": "fields[projects]",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"name",
						"description",
						"contents",
						"type",
						"isPrivate",
						"locked",
						"lockdownId",
						"secureContent",
						"projectId",
						"createdByUserID",
						"updatedByUserID",
						"deletedByUserID",
						"dateUpdated",
						"dateCreated",
						"dateDeleted",
						"deleted",
						"categoryId",
						"notebookVersionID",
						"notebookVersionCreatedDateTime",
						"notebookVersionUpdatedDateTime",
						"latestVersionNo",
						"commentsCount",
						"readCommentsCount",
						"contentHTML",
						"privacy",
						"commentFollowers",
						"changeFollowers",
						"projectNotifyCommentIncludeCreator",
						"tagIds"
					],
					"type": "string"
				},
				"name": "fields[notebooks]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "type": "string" },
				"name": "fields[notebookCategories]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name", "logoUploadedToServer", "logoImage"], "type": "string" },
				"name": "fields[companies]",
				"type": "array"
			}
		],
		"description": "Edits a notebook",
		"group": "Notebooks"
	},
	{
		"endpoint": "/projects/api/v3/notebooks/{notebookId}/comments.json",
		"method": "get",
		"parameters": [{ "in": "path", "name": "notebookId", "required": true, "type": "integer" }],
		"description": "Get a list of comments for a notebook",
		"group": "NotebookComments"
	},
	{
		"endpoint": "/projects/api/v3/notebooks/{notebookId}/compare.json",
		"method": "get",
		"parameters": [
			{ "in": "path", "name": "notebookId", "required": true, "type": "integer" },
			{
				"description": "include",
				"in": "query",
				"items": { "enum": ["users"], "type": "string" },
				"name": "include",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"firstName",
						"lastName",
						"title",
						"email",
						"companyId",
						"company",
						"isAdmin",
						"isClientUser",
						"isServiceAccount",
						"type",
						"deleted",
						"avatarUrl",
						"lengthOfDay",
						"workingHoursId",
						"workingHour",
						"userRate",
						"userCost",
						"canAddProjects"
					],
					"type": "string"
				},
				"name": "fields[users]",
				"type": "array"
			}
		],
		"description": "Compare 2 notebook versions",
		"group": "Notebooks"
	},
	{
		"endpoint": "/projects/api/v3/notebooks/{notebookId}/lock.json",
		"method": "put",
		"parameters": [{ "in": "path", "name": "notebookId", "required": true, "type": "integer" }],
		"description": "Lock a notebook",
		"group": "Notebooks"
	},
	{
		"endpoint": "/projects/api/v3/notebooks/{notebookId}/unlock.json",
		"method": "put",
		"parameters": [{ "in": "path", "name": "notebookId", "required": true, "type": "integer" }],
		"description": "Unlock a notebook",
		"group": "Notebooks"
	},
	{
		"endpoint": "/projects/api/v3/notebooks/{notebookId}/versions.json",
		"method": "delete",
		"parameters": [{ "in": "path", "name": "notebookId", "required": true, "type": "integer" }],
		"description": "Delete notebook versions.",
		"group": "Notebooks"
	},
	{
		"endpoint": "/projects/api/v3/notebooks/{notebookId}/versions.json",
		"method": "get",
		"parameters": [
			{ "in": "path", "name": "notebookId", "required": true, "type": "integer" },
			{
				"description": "include",
				"in": "query",
				"items": { "enum": ["users"], "type": "string" },
				"name": "include",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"firstName",
						"lastName",
						"title",
						"email",
						"companyId",
						"company",
						"isAdmin",
						"isClientUser",
						"isServiceAccount",
						"type",
						"deleted",
						"avatarUrl",
						"lengthOfDay",
						"workingHoursId",
						"workingHour",
						"userRate",
						"userCost",
						"canAddProjects"
					],
					"type": "string"
				},
				"name": "fields[users]",
				"type": "array"
			}
		],
		"description": "Get notebook versions",
		"group": "Notebooks"
	},
	{
		"endpoint": "/projects/api/v3/notebooks/{notebookId}/versions/{versionId}.json",
		"method": "get",
		"parameters": [
			{ "in": "path", "name": "versionId", "required": true, "type": "integer" },
			{ "in": "path", "name": "notebookId", "required": true, "type": "integer" },
			{
				"description": "include",
				"in": "query",
				"items": { "enum": ["users"], "type": "string" },
				"name": "include",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"firstName",
						"lastName",
						"title",
						"email",
						"companyId",
						"company",
						"isAdmin",
						"isClientUser",
						"isServiceAccount",
						"type",
						"deleted",
						"avatarUrl",
						"lengthOfDay",
						"workingHoursId",
						"workingHour",
						"userRate",
						"userCost",
						"canAddProjects"
					],
					"type": "string"
				},
				"name": "fields[users]",
				"type": "array"
			}
		],
		"description": "Get a notebook version",
		"group": "Notebooks"
	},
	{
		"endpoint": "/projects/api/v3/people.json",
		"method": "get",
		"parameters": [
			{
				"description": "user type",
				"enum": ["account", "collaborator", "contact"],
				"in": "query",
				"name": "userType",
				"type": "string"
			},
			{
				"description": "date time",
				"format": "date-time",
				"in": "query",
				"name": "updatedAfter",
				"type": "string"
			},
			{
				"description": "filter by comment content",
				"in": "query",
				"name": "searchTerm",
				"type": "string"
			},
			{
				"default": "asc",
				"description": "order mode",
				"enum": ["asc", "desc"],
				"in": "query",
				"name": "orderMode",
				"type": "string"
			},
			{
				"default": "name",
				"description": "order by",
				"enum": ["name", "namecaseinsensitive", "company"],
				"in": "query",
				"name": "orderBy",
				"type": "string"
			},
			{ "format": "date-time", "in": "query", "name": "lastLoginAfter", "type": "string" },
			{
				"default": "50",
				"description": "number of items in a page (not used when generating reports)",
				"in": "query",
				"name": "pageSize",
				"type": "integer"
			},
			{
				"default": "1",
				"description": "page number (not used when generating reports)",
				"in": "query",
				"name": "page",
				"type": "integer"
			},
			{
				"default": "false",
				"description": "include deleted items",
				"in": "query",
				"name": "showDeleted",
				"type": "boolean"
			},
			{ "default": "false", "in": "query", "name": "onlySiteOwner", "type": "boolean" },
			{
				"default": "false",
				"description": "return people only from the owner company. This will replace any provided\ncompany ID.",
				"in": "query",
				"name": "onlyOwnerCompany",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "include service accounts",
				"in": "query",
				"name": "includeServiceAccounts",
				"type": "boolean"
			},
			{
				"default": "true",
				"description": "exclude collaborators types, returning only account and contact.",
				"in": "query",
				"name": "includeCollaborators",
				"type": "boolean"
			},
			{
				"default": "true",
				"description": "include clients",
				"in": "query",
				"name": "includeClients",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "exclude contact types, returning only account and collaborator.",
				"in": "query",
				"name": "excludeContacts",
				"type": "boolean"
			},
			{
				"description": "team ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "teamIds",
				"type": "array"
			},
			{
				"description": "filter by project ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectIds",
				"type": "array"
			},
			{
				"description": "include (not used when generating reports)",
				"in": "query",
				"items": { "enum": ["companies"], "type": "string" },
				"name": "include",
				"type": "array"
			},
			{
				"description": "filter by user ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "ids",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": ["id", "name", "teamLogo", "teamLogoIcon", "teamLogoColor"],
					"type": "string"
				},
				"name": "fields[teams]",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"firstName",
						"lastName",
						"title",
						"email",
						"companyId",
						"company",
						"isAdmin",
						"isClientUser",
						"isServiceAccount",
						"type",
						"deleted",
						"avatarUrl",
						"lengthOfDay",
						"workingHoursId",
						"workingHour",
						"userRate",
						"userCost",
						"canAddProjects"
					],
					"type": "string"
				},
				"name": "fields[people]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name", "logoUploadedToServer", "logoImage"], "type": "string" },
				"name": "fields[companies]",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"viewMessagesAndFiles",
						"viewTasksAndMilestones",
						"viewTime",
						"viewNotebooks",
						"viewRiskRegister",
						"viewEstimatedTime",
						"viewInvoices",
						"addTasks",
						"addRisks",
						"manageCustomFields",
						"addExpenses",
						"editAllTasks",
						"addMilestones",
						"addTaskLists",
						"addMessages",
						"addFiles",
						"addTime",
						"addNotebooks",
						"viewLinks",
						"addLinks",
						"canViewForms",
						"addForms",
						"viewAllTimeLogs",
						"setPrivacy",
						"projectAdministrator",
						"viewProjectUpdate",
						"addProjectUpdate",
						"canViewProjectMembers",
						"canViewProjectBudget",
						"canManageProjectBudget",
						"canViewRates",
						"canManageRates",
						"canViewSchedule",
						"canManageSchedule",
						"receiveEmailNotifications",
						"isObserving",
						"isArchived",
						"active",
						"canAccess",
						"inOwnerCompany",
						"canManagePeople",
						"canViewProjectTemplates",
						"canManageProjectTemplates"
					],
					"type": "string"
				},
				"name": "fields[ProjectPermissions]",
				"type": "array"
			},
			{
				"description": "exclude people assigned to certain project id",
				"in": "query",
				"items": { "type": "integer" },
				"name": "excludeProjectIds",
				"type": "array"
			},
			{
				"description": "company ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "companyIds",
				"type": "array"
			}
		],
		"description": "Returns a list of people",
		"group": "People"
	},
	{
		"endpoint": "/projects/api/v3/people/metrics/performance.json",
		"method": "get",
		"parameters": [
			{ "format": "date", "in": "query", "name": "startDate", "type": "string" },
			{
				"default": "desc",
				"description": "order mode",
				"enum": ["asc", "desc"],
				"in": "query",
				"name": "orderMode",
				"type": "string"
			},
			{ "format": "date", "in": "query", "name": "endDate", "type": "string" }
		],
		"description": "Performance of users completing the most tasks",
		"group": "People"
	},
	{
		"endpoint": "/projects/api/v3/people/utilization.json",
		"method": "get",
		"parameters": [
			{
				"description": "determine the type of zoom filter used to display on the report",
				"enum": ["week", "month", "last3months", "quarterbyweek", "quarterbymonth"],
				"in": "query",
				"name": "zoom",
				"type": "string"
			},
			{
				"description": "filter by start date",
				"format": "date",
				"in": "query",
				"name": "startDate",
				"type": "string"
			},
			{
				"default": "asc",
				"description": "order mode",
				"enum": ["asc", "desc"],
				"in": "query",
				"name": "sortOrder",
				"type": "string"
			},
			{
				"default": "name",
				"description": "sort by (deprecated, use orderBy)",
				"enum": [
					"name",
					"percentutilization",
					"percentestimatedutilization",
					"availableminutes",
					"unavailableminutes",
					"loggedminutes",
					"billableminutes",
					"unbillableminutes",
					"billableutilization",
					"nonbillableutilization"
				],
				"in": "query",
				"name": "sort",
				"type": "string"
			},
			{
				"description": "filter by user first or last name",
				"in": "query",
				"name": "searchTerm",
				"type": "string"
			},
			{
				"default": "pdf",
				"description": "define the format of the report",
				"enum": ["pdf"],
				"in": "query",
				"name": "reportFormat",
				"type": "string"
			},
			{
				"description": "group by",
				"enum": ["weekly", "monthly"],
				"in": "query",
				"name": "orderMode",
				"type": "string"
			},
			{
				"default": "name",
				"description": "sort by",
				"enum": [
					"name",
					"percentutilization",
					"percentestimatedutilization",
					"availableminutes",
					"unavailableminutes",
					"loggedminutes",
					"billableminutes",
					"unbillableminutes"
				],
				"in": "query",
				"name": "orderBy",
				"type": "string"
			},
			{
				"description": "group by",
				"enum": ["weekly", "monthly"],
				"in": "query",
				"name": "groupBy",
				"type": "string"
			},
			{
				"description": "filter by end date",
				"format": "date",
				"in": "query",
				"name": "endDate",
				"type": "string"
			},
			{
				"default": "50",
				"description": "number of items in a page",
				"in": "query",
				"name": "pageSize",
				"type": "integer"
			},
			{
				"default": "1",
				"description": "page number",
				"in": "query",
				"name": "page",
				"type": "integer"
			},
			{
				"default": "false",
				"description": "generate a report document",
				"in": "query",
				"name": "isReportDownload",
				"type": "boolean"
			},
			{
				"description": "determine if the query is for a custom date range",
				"in": "query",
				"name": "isCustomDateRange",
				"type": "boolean"
			},
			{
				"default": "true",
				"description": "include collaborators",
				"in": "query",
				"name": "includeCollaborators",
				"type": "boolean"
			},
			{
				"default": "true",
				"description": "include client users",
				"in": "query",
				"name": "includeClients",
				"type": "boolean"
			},
			{
				"description": "filter by userIds",
				"in": "query",
				"items": { "type": "integer" },
				"name": "userIds",
				"type": "array"
			},
			{
				"description": "filter by team ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "teamIds",
				"type": "array"
			},
			{
				"description": "customise the report by selecting columns to be displayed.",
				"in": "query",
				"items": { "type": "string" },
				"name": "selectedColumns",
				"type": "array"
			},
			{
				"description": "filter by project ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectIds",
				"type": "array"
			},
			{
				"description": "include",
				"in": "query",
				"items": { "enum": ["users"], "type": "string" },
				"name": "include",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"userId",
						"unavailableMinutes",
						"availableMinutes",
						"billableMinutes",
						"unbillableMinutes",
						"loggedMinutes"
					],
					"type": "string"
				},
				"name": "fields[utilizations]",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"firstName",
						"lastName",
						"title",
						"email",
						"companyId",
						"company",
						"isAdmin",
						"isClientUser",
						"isServiceAccount",
						"type",
						"deleted",
						"avatarUrl",
						"lengthOfDay",
						"workingHoursId",
						"workingHour",
						"userRate",
						"userCost",
						"canAddProjects"
					],
					"type": "string"
				},
				"name": "fields[users]",
				"type": "array"
			},
			{
				"description": "filter by company ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "companyIds",
				"type": "array"
			}
		],
		"description": "Return the user utilization.",
		"group": "People"
	},
	{
		"endpoint": "/projects/api/v3/people/{personId}.json",
		"method": "delete",
		"parameters": [{ "in": "path", "name": "personId", "required": true, "type": "integer" }],
		"description": "Delete an existing person.",
		"group": "People"
	},
	{
		"endpoint": "/projects/api/v3/people/{personId}.json",
		"method": "get",
		"parameters": [
			{
				"description": "user type",
				"enum": ["account", "collaborator", "contact"],
				"in": "query",
				"name": "userType",
				"type": "string"
			},
			{
				"description": "date time",
				"format": "date-time",
				"in": "query",
				"name": "updatedAfter",
				"type": "string"
			},
			{
				"description": "filter by comment content",
				"in": "query",
				"name": "searchTerm",
				"type": "string"
			},
			{
				"default": "asc",
				"description": "order mode",
				"enum": ["asc", "desc"],
				"in": "query",
				"name": "orderMode",
				"type": "string"
			},
			{
				"default": "name",
				"description": "order by",
				"enum": ["name", "namecaseinsensitive", "company"],
				"in": "query",
				"name": "orderBy",
				"type": "string"
			},
			{ "format": "date-time", "in": "query", "name": "lastLoginAfter", "type": "string" },
			{ "in": "path", "name": "personId", "required": true, "type": "integer" },
			{
				"default": "50",
				"description": "number of items in a page (not used when generating reports)",
				"in": "query",
				"name": "pageSize",
				"type": "integer"
			},
			{
				"default": "1",
				"description": "page number (not used when generating reports)",
				"in": "query",
				"name": "page",
				"type": "integer"
			},
			{
				"default": "false",
				"description": "include deleted items",
				"in": "query",
				"name": "showDeleted",
				"type": "boolean"
			},
			{ "default": "false", "in": "query", "name": "onlySiteOwner", "type": "boolean" },
			{
				"default": "false",
				"description": "return people only from the owner company. This will replace any provided\ncompany ID.",
				"in": "query",
				"name": "onlyOwnerCompany",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "include service accounts",
				"in": "query",
				"name": "includeServiceAccounts",
				"type": "boolean"
			},
			{
				"default": "true",
				"description": "exclude collaborators types, returning only account and contact.",
				"in": "query",
				"name": "includeCollaborators",
				"type": "boolean"
			},
			{
				"default": "true",
				"description": "include clients",
				"in": "query",
				"name": "includeClients",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "exclude contact types, returning only account and collaborator.",
				"in": "query",
				"name": "excludeContacts",
				"type": "boolean"
			},
			{
				"description": "team ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "teamIds",
				"type": "array"
			},
			{
				"description": "filter by project ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectIds",
				"type": "array"
			},
			{
				"description": "include (not used when generating reports)",
				"in": "query",
				"items": { "enum": ["companies"], "type": "string" },
				"name": "include",
				"type": "array"
			},
			{
				"description": "filter by user ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "ids",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": ["id", "name", "teamLogo", "teamLogoIcon", "teamLogoColor"],
					"type": "string"
				},
				"name": "fields[teams]",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"firstName",
						"lastName",
						"title",
						"email",
						"companyId",
						"company",
						"isAdmin",
						"isClientUser",
						"isServiceAccount",
						"type",
						"deleted",
						"avatarUrl",
						"lengthOfDay",
						"workingHoursId",
						"workingHour",
						"userRate",
						"userCost",
						"canAddProjects"
					],
					"type": "string"
				},
				"name": "fields[people]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name", "logoUploadedToServer", "logoImage"], "type": "string" },
				"name": "fields[companies]",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"viewMessagesAndFiles",
						"viewTasksAndMilestones",
						"viewTime",
						"viewNotebooks",
						"viewRiskRegister",
						"viewEstimatedTime",
						"viewInvoices",
						"addTasks",
						"addRisks",
						"manageCustomFields",
						"addExpenses",
						"editAllTasks",
						"addMilestones",
						"addTaskLists",
						"addMessages",
						"addFiles",
						"addTime",
						"addNotebooks",
						"viewLinks",
						"addLinks",
						"canViewForms",
						"addForms",
						"viewAllTimeLogs",
						"setPrivacy",
						"projectAdministrator",
						"viewProjectUpdate",
						"addProjectUpdate",
						"canViewProjectMembers",
						"canViewProjectBudget",
						"canManageProjectBudget",
						"canViewRates",
						"canManageRates",
						"canViewSchedule",
						"canManageSchedule",
						"receiveEmailNotifications",
						"isObserving",
						"isArchived",
						"active",
						"canAccess",
						"inOwnerCompany",
						"canManagePeople",
						"canViewProjectTemplates",
						"canManageProjectTemplates"
					],
					"type": "string"
				},
				"name": "fields[ProjectPermissions]",
				"type": "array"
			},
			{
				"description": "exclude people assigned to certain project id",
				"in": "query",
				"items": { "type": "integer" },
				"name": "excludeProjectIds",
				"type": "array"
			},
			{
				"description": "company ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "companyIds",
				"type": "array"
			}
		],
		"description": "Returns a person",
		"group": "Person"
	},
	{
		"endpoint": "/projects/api/v3/projects.csv",
		"method": "get",
		"parameters": [
			{
				"description": "updated after",
				"format": "date-time",
				"in": "query",
				"name": "updatedAfter",
				"type": "string"
			},
			{
				"description": "filter by project name",
				"in": "query",
				"name": "searchTerm",
				"type": "string"
			},
			{
				"default": "project",
				"description": "define the type of the report",
				"enum": ["project", "health"],
				"in": "query",
				"name": "reportType",
				"type": "string"
			},
			{
				"description": "Optional to configure the report dates displayed in a timezone",
				"in": "query",
				"name": "reportTimezone",
				"type": "string"
			},
			{
				"default": "pdf",
				"description": "define the format of the report",
				"enum": ["csv", "html", "pdf", "xls"],
				"in": "query",
				"name": "reportFormat",
				"type": "string"
			},
			{
				"description": "filter by project type",
				"in": "query",
				"name": "projectType",
				"type": "string"
			},
			{
				"default": "asc",
				"description": "order mode",
				"enum": ["asc", "desc"],
				"in": "query",
				"name": "orderMode",
				"type": "string"
			},
			{
				"default": "name",
				"description": "order by",
				"enum": [
					"companyname",
					"datecreated",
					"duedate",
					"lastactivity",
					"name",
					"namecaseinsensitive",
					"ownercompany",
					"starred",
					"categoryname"
				],
				"in": "query",
				"name": "orderBy",
				"type": "string"
			},
			{
				"description": "filter by min last activity date",
				"format": "date",
				"in": "query",
				"name": "minLastActivityDate",
				"type": "string"
			},
			{
				"description": "filter by max last activity date",
				"format": "date",
				"in": "query",
				"name": "maxLastActivityDate",
				"type": "string"
			},
			{
				"description": "currency symbol for report export",
				"in": "query",
				"name": "currencySymbol",
				"type": "string"
			},
			{ "description": "filter by user id", "in": "query", "name": "userId", "type": "integer" },
			{
				"default": "50",
				"description": "number of items in a page (not used when generating reports)",
				"in": "query",
				"name": "pageSize",
				"type": "integer"
			},
			{
				"default": "1",
				"description": "page number (not used when generating reports)",
				"in": "query",
				"name": "page",
				"type": "integer"
			},
			{
				"description": "order by custom field id when orderBy is equal to customfield",
				"in": "query",
				"name": "orderByCustomFieldId",
				"type": "integer"
			},
			{
				"description": "include companies in the search",
				"in": "query",
				"name": "searchCompanies",
				"type": "boolean"
			},
			{
				"description": "search projects beginning with the search term character only when it contains a single character.",
				"in": "query",
				"name": "searchByLetter",
				"type": "boolean"
			},
			{
				"description": "filter by starred projects only",
				"in": "query",
				"name": "onlyStarredProjects",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "only show projects with explicit membership",
				"in": "query",
				"name": "onlyProjectsWithExplicitMembership",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "return only archived projects",
				"in": "query",
				"name": "onlyArchivedProjects",
				"type": "boolean"
			},
			{
				"description": "match all project tags",
				"in": "query",
				"name": "matchAllProjectTags",
				"type": "boolean"
			},
			{
				"description": "match all excluded project tags",
				"in": "query",
				"name": "matchAllExcludedTags",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "generate a report document",
				"in": "query",
				"name": "isReportDownload",
				"type": "boolean"
			},
			{
				"description": "include project status counts for tasks columns billing events milestones",
				"in": "query",
				"name": "includeStats",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "fetch user-specific data such as isStarred",
				"in": "query",
				"name": "includeProjectUserInfo",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "include custom fields",
				"in": "query",
				"name": "includeCustomFields",
				"type": "boolean"
			},
			{
				"description": "include project related counts",
				"in": "query",
				"name": "includeCounts",
				"type": "boolean"
			},
			{
				"description": "optional to include completed projects when filtering by project statuses \"current,late\".",
				"in": "query",
				"name": "includeCompletedStatus",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "include archived projects",
				"in": "query",
				"name": "includeArchivedProjects",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "hide projects where the logged-in user is just an observer",
				"in": "query",
				"name": "hideObservedProjects",
				"type": "boolean"
			},
			{
				"description": "includes filters when project ids are provided",
				"in": "query",
				"name": "alwaysIncludeFiltering",
				"type": "boolean"
			},
			{
				"description": "filter by projects that contain users associated with the team ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "teamIds",
				"type": "array"
			},
			{
				"description": "select the columns to use in exports.",
				"in": "query",
				"items": { "type": "string" },
				"name": "selectedColumns",
				"type": "array"
			},
			{
				"description": "filter by project tag ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectTagIds",
				"type": "array"
			},
			{
				"description": "filter by project status",
				"in": "query",
				"items": {
					"enum": ["active", "current", "late", "upcoming", "completed", "deleted"],
					"type": "string"
				},
				"name": "projectStatuses",
				"type": "array"
			},
			{
				"description": "filter by project owner ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectOwnerIds",
				"type": "array"
			},
			{
				"description": "filter by project ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectIds",
				"type": "array"
			},
			{
				"description": "filter by project healths\n\n0: not set\n1: bad\n2: ok\n3: good",
				"in": "query",
				"items": { "enum": ["0", "1", "2", "3"], "type": "integer" },
				"name": "projectHealths",
				"type": "array"
			},
			{
				"description": "filter by company ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectCompanyIds",
				"type": "array"
			},
			{
				"description": "filter by project category ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectCategoryIds",
				"type": "array"
			},
			{
				"description": "include (not used when generating reports)",
				"in": "query",
				"items": {
					"enum": [
						"projectOwners",
						"projectUpdates",
						"companies",
						"companies.countries",
						"companies.industries",
						"projectCategories",
						"portfolioCards",
						"portfolioBoards",
						"portfolioColumns",
						"tags",
						"customfields",
						"customfieldProjects",
						"projectBudgets",
						"activities.latest",
						"users",
						"createdBy",
						"updatedBy",
						"completedBy",
						"deletedBy"
					],
					"type": "string"
				},
				"name": "include",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"firstName",
						"lastName",
						"title",
						"email",
						"companyId",
						"company",
						"isAdmin",
						"isClientUser",
						"isServiceAccount",
						"type",
						"deleted",
						"avatarUrl",
						"lengthOfDay",
						"workingHoursId",
						"workingHour",
						"userRate",
						"userCost",
						"canAddProjects"
					],
					"type": "string"
				},
				"name": "fields[users]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name", "color", "count"], "type": "string" },
				"name": "fields[tags]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name"], "type": "string" },
				"name": "fields[projects]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name", "color"], "type": "string" },
				"name": "fields[projectcategories]",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"projectId",
						"text",
						"isActive",
						"health",
						"color",
						"dateCreated",
						"deleted",
						"deletedDate",
						"numLikes",
						"reactions"
					],
					"type": "string"
				},
				"name": "fields[projectUpdates]",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"projectId",
						"type",
						"status",
						"capacityUsed",
						"capacity",
						"originatorBudgetId",
						"isRepeating",
						"repeatPeriod",
						"repeatUnit",
						"repeatsRemaining",
						"sequenceNumber",
						"startDateTime",
						"endDateTime",
						"currencyCode",
						"timelogType",
						"expenseType",
						"defaultRate",
						"notificationIds",
						"createdByUserId",
						"dateCreated",
						"updatedUserId",
						"dateUpdated",
						"completedByUserId",
						"dateCompleted",
						"deletedByUserId",
						"dateDeleted"
					],
					"type": "string"
				},
				"name": "fields[projectBudgets]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name", "color"], "type": "string" },
				"name": "fields[portfolioColumns]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "columnId", "projectId"], "type": "string" },
				"name": "fields[portfolioCards]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name", "color"], "type": "string" },
				"name": "fields[portfolioBoards]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "type": "string" },
				"name": "fields[industries]",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"projectId",
						"entity",
						"name",
						"description",
						"type",
						"options",
						"visibilities",
						"isPrivate",
						"required",
						"createdAt",
						"createdByUserId",
						"updatedAt",
						"updatedByUserId",
						"deleted",
						"deletedAt",
						"deletedByUserId"
					],
					"type": "string"
				},
				"name": "fields[customfields]",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": ["id", "customfieldId", "value", "createdAt", "createdBy"],
					"type": "string"
				},
				"name": "fields[customfieldProjects]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "type": "string" },
				"name": "fields[countries]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name", "logoUploadedToServer", "logoImage"], "type": "string" },
				"name": "fields[companies]",
				"type": "array"
			},
			{
				"description": "exclude by project tag ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "excludeTagIds",
				"type": "array"
			}
		],
		"description": "Generate project report in CSV format",
		"group": "Projects"
	},
	{
		"endpoint": "/projects/api/v3/projects.html",
		"method": "get",
		"parameters": [
			{
				"description": "updated after",
				"format": "date-time",
				"in": "query",
				"name": "updatedAfter",
				"type": "string"
			},
			{
				"description": "filter by project name",
				"in": "query",
				"name": "searchTerm",
				"type": "string"
			},
			{
				"default": "project",
				"description": "define the type of the report",
				"enum": ["project", "health"],
				"in": "query",
				"name": "reportType",
				"type": "string"
			},
			{
				"description": "Optional to configure the report dates displayed in a timezone",
				"in": "query",
				"name": "reportTimezone",
				"type": "string"
			},
			{
				"default": "pdf",
				"description": "define the format of the report",
				"enum": ["csv", "html", "pdf", "xls"],
				"in": "query",
				"name": "reportFormat",
				"type": "string"
			},
			{
				"description": "filter by project type",
				"in": "query",
				"name": "projectType",
				"type": "string"
			},
			{
				"default": "asc",
				"description": "order mode",
				"enum": ["asc", "desc"],
				"in": "query",
				"name": "orderMode",
				"type": "string"
			},
			{
				"default": "name",
				"description": "order by",
				"enum": [
					"companyname",
					"datecreated",
					"duedate",
					"lastactivity",
					"name",
					"namecaseinsensitive",
					"ownercompany",
					"starred",
					"categoryname"
				],
				"in": "query",
				"name": "orderBy",
				"type": "string"
			},
			{
				"description": "filter by min last activity date",
				"format": "date",
				"in": "query",
				"name": "minLastActivityDate",
				"type": "string"
			},
			{
				"description": "filter by max last activity date",
				"format": "date",
				"in": "query",
				"name": "maxLastActivityDate",
				"type": "string"
			},
			{
				"description": "currency symbol for report export",
				"in": "query",
				"name": "currencySymbol",
				"type": "string"
			},
			{ "description": "filter by user id", "in": "query", "name": "userId", "type": "integer" },
			{
				"default": "50",
				"description": "number of items in a page (not used when generating reports)",
				"in": "query",
				"name": "pageSize",
				"type": "integer"
			},
			{
				"default": "1",
				"description": "page number (not used when generating reports)",
				"in": "query",
				"name": "page",
				"type": "integer"
			},
			{
				"description": "order by custom field id when orderBy is equal to customfield",
				"in": "query",
				"name": "orderByCustomFieldId",
				"type": "integer"
			},
			{
				"description": "include companies in the search",
				"in": "query",
				"name": "searchCompanies",
				"type": "boolean"
			},
			{
				"description": "search projects beginning with the search term character only when it contains a single character.",
				"in": "query",
				"name": "searchByLetter",
				"type": "boolean"
			},
			{
				"description": "filter by starred projects only",
				"in": "query",
				"name": "onlyStarredProjects",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "only show projects with explicit membership",
				"in": "query",
				"name": "onlyProjectsWithExplicitMembership",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "return only archived projects",
				"in": "query",
				"name": "onlyArchivedProjects",
				"type": "boolean"
			},
			{
				"description": "match all project tags",
				"in": "query",
				"name": "matchAllProjectTags",
				"type": "boolean"
			},
			{
				"description": "match all excluded project tags",
				"in": "query",
				"name": "matchAllExcludedTags",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "generate a report document",
				"in": "query",
				"name": "isReportDownload",
				"type": "boolean"
			},
			{
				"description": "include project status counts for tasks columns billing events milestones",
				"in": "query",
				"name": "includeStats",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "fetch user-specific data such as isStarred",
				"in": "query",
				"name": "includeProjectUserInfo",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "include custom fields",
				"in": "query",
				"name": "includeCustomFields",
				"type": "boolean"
			},
			{
				"description": "include project related counts",
				"in": "query",
				"name": "includeCounts",
				"type": "boolean"
			},
			{
				"description": "optional to include completed projects when filtering by project statuses \"current,late\".",
				"in": "query",
				"name": "includeCompletedStatus",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "include archived projects",
				"in": "query",
				"name": "includeArchivedProjects",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "hide projects where the logged-in user is just an observer",
				"in": "query",
				"name": "hideObservedProjects",
				"type": "boolean"
			},
			{
				"description": "includes filters when project ids are provided",
				"in": "query",
				"name": "alwaysIncludeFiltering",
				"type": "boolean"
			},
			{
				"description": "filter by projects that contain users associated with the team ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "teamIds",
				"type": "array"
			},
			{
				"description": "select the columns to use in exports.",
				"in": "query",
				"items": { "type": "string" },
				"name": "selectedColumns",
				"type": "array"
			},
			{
				"description": "filter by project tag ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectTagIds",
				"type": "array"
			},
			{
				"description": "filter by project status",
				"in": "query",
				"items": {
					"enum": ["active", "current", "late", "upcoming", "completed", "deleted"],
					"type": "string"
				},
				"name": "projectStatuses",
				"type": "array"
			},
			{
				"description": "filter by project owner ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectOwnerIds",
				"type": "array"
			},
			{
				"description": "filter by project ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectIds",
				"type": "array"
			},
			{
				"description": "filter by project healths\n\n0: not set\n1: bad\n2: ok\n3: good",
				"in": "query",
				"items": { "enum": ["0", "1", "2", "3"], "type": "integer" },
				"name": "projectHealths",
				"type": "array"
			},
			{
				"description": "filter by company ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectCompanyIds",
				"type": "array"
			},
			{
				"description": "filter by project category ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectCategoryIds",
				"type": "array"
			},
			{
				"description": "include (not used when generating reports)",
				"in": "query",
				"items": {
					"enum": [
						"projectOwners",
						"projectUpdates",
						"companies",
						"companies.countries",
						"companies.industries",
						"projectCategories",
						"portfolioCards",
						"portfolioBoards",
						"portfolioColumns",
						"tags",
						"customfields",
						"customfieldProjects",
						"projectBudgets",
						"activities.latest",
						"users",
						"createdBy",
						"updatedBy",
						"completedBy",
						"deletedBy"
					],
					"type": "string"
				},
				"name": "include",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"firstName",
						"lastName",
						"title",
						"email",
						"companyId",
						"company",
						"isAdmin",
						"isClientUser",
						"isServiceAccount",
						"type",
						"deleted",
						"avatarUrl",
						"lengthOfDay",
						"workingHoursId",
						"workingHour",
						"userRate",
						"userCost",
						"canAddProjects"
					],
					"type": "string"
				},
				"name": "fields[users]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name", "color", "count"], "type": "string" },
				"name": "fields[tags]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name"], "type": "string" },
				"name": "fields[projects]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name", "color"], "type": "string" },
				"name": "fields[projectcategories]",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"projectId",
						"text",
						"isActive",
						"health",
						"color",
						"dateCreated",
						"deleted",
						"deletedDate",
						"numLikes",
						"reactions"
					],
					"type": "string"
				},
				"name": "fields[projectUpdates]",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"projectId",
						"type",
						"status",
						"capacityUsed",
						"capacity",
						"originatorBudgetId",
						"isRepeating",
						"repeatPeriod",
						"repeatUnit",
						"repeatsRemaining",
						"sequenceNumber",
						"startDateTime",
						"endDateTime",
						"currencyCode",
						"timelogType",
						"expenseType",
						"defaultRate",
						"notificationIds",
						"createdByUserId",
						"dateCreated",
						"updatedUserId",
						"dateUpdated",
						"completedByUserId",
						"dateCompleted",
						"deletedByUserId",
						"dateDeleted"
					],
					"type": "string"
				},
				"name": "fields[projectBudgets]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name", "color"], "type": "string" },
				"name": "fields[portfolioColumns]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "columnId", "projectId"], "type": "string" },
				"name": "fields[portfolioCards]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name", "color"], "type": "string" },
				"name": "fields[portfolioBoards]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "type": "string" },
				"name": "fields[industries]",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"projectId",
						"entity",
						"name",
						"description",
						"type",
						"options",
						"visibilities",
						"isPrivate",
						"required",
						"createdAt",
						"createdByUserId",
						"updatedAt",
						"updatedByUserId",
						"deleted",
						"deletedAt",
						"deletedByUserId"
					],
					"type": "string"
				},
				"name": "fields[customfields]",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": ["id", "customfieldId", "value", "createdAt", "createdBy"],
					"type": "string"
				},
				"name": "fields[customfieldProjects]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "type": "string" },
				"name": "fields[countries]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name", "logoUploadedToServer", "logoImage"], "type": "string" },
				"name": "fields[companies]",
				"type": "array"
			},
			{
				"description": "exclude by project tag ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "excludeTagIds",
				"type": "array"
			}
		],
		"description": "Generate project report in HTML format",
		"group": "Projects"
	},
	{
		"endpoint": "/projects/api/v3/projects.json",
		"method": "get",
		"parameters": [
			{
				"description": "updated after",
				"format": "date-time",
				"in": "query",
				"name": "updatedAfter",
				"type": "string"
			},
			{
				"description": "filter by project name",
				"in": "query",
				"name": "searchTerm",
				"type": "string"
			},
			{
				"default": "project",
				"description": "define the type of the report",
				"enum": ["project", "health"],
				"in": "query",
				"name": "reportType",
				"type": "string"
			},
			{
				"description": "Optional to configure the report dates displayed in a timezone",
				"in": "query",
				"name": "reportTimezone",
				"type": "string"
			},
			{
				"default": "pdf",
				"description": "define the format of the report",
				"enum": ["csv", "html", "pdf", "xls"],
				"in": "query",
				"name": "reportFormat",
				"type": "string"
			},
			{
				"description": "filter by project type",
				"in": "query",
				"name": "projectType",
				"type": "string"
			},
			{
				"default": "asc",
				"description": "order mode",
				"enum": ["asc", "desc"],
				"in": "query",
				"name": "orderMode",
				"type": "string"
			},
			{
				"default": "name",
				"description": "order by",
				"enum": [
					"companyname",
					"datecreated",
					"duedate",
					"lastactivity",
					"name",
					"namecaseinsensitive",
					"ownercompany",
					"starred",
					"categoryname"
				],
				"in": "query",
				"name": "orderBy",
				"type": "string"
			},
			{
				"description": "filter by min last activity date",
				"format": "date",
				"in": "query",
				"name": "minLastActivityDate",
				"type": "string"
			},
			{
				"description": "filter by max last activity date",
				"format": "date",
				"in": "query",
				"name": "maxLastActivityDate",
				"type": "string"
			},
			{
				"description": "currency symbol for report export",
				"in": "query",
				"name": "currencySymbol",
				"type": "string"
			},
			{ "description": "filter by user id", "in": "query", "name": "userId", "type": "integer" },
			{
				"default": "50",
				"description": "number of items in a page (not used when generating reports)",
				"in": "query",
				"name": "pageSize",
				"type": "integer"
			},
			{
				"default": "1",
				"description": "page number (not used when generating reports)",
				"in": "query",
				"name": "page",
				"type": "integer"
			},
			{
				"description": "order by custom field id when orderBy is equal to customfield",
				"in": "query",
				"name": "orderByCustomFieldId",
				"type": "integer"
			},
			{
				"description": "include companies in the search",
				"in": "query",
				"name": "searchCompanies",
				"type": "boolean"
			},
			{
				"description": "search projects beginning with the search term character only when it contains a single character.",
				"in": "query",
				"name": "searchByLetter",
				"type": "boolean"
			},
			{
				"description": "filter by starred projects only",
				"in": "query",
				"name": "onlyStarredProjects",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "only show projects with explicit membership",
				"in": "query",
				"name": "onlyProjectsWithExplicitMembership",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "return only archived projects",
				"in": "query",
				"name": "onlyArchivedProjects",
				"type": "boolean"
			},
			{
				"description": "match all project tags",
				"in": "query",
				"name": "matchAllProjectTags",
				"type": "boolean"
			},
			{
				"description": "match all excluded project tags",
				"in": "query",
				"name": "matchAllExcludedTags",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "generate a report document",
				"in": "query",
				"name": "isReportDownload",
				"type": "boolean"
			},
			{
				"description": "include project status counts for tasks columns billing events milestones",
				"in": "query",
				"name": "includeStats",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "fetch user-specific data such as isStarred",
				"in": "query",
				"name": "includeProjectUserInfo",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "include custom fields",
				"in": "query",
				"name": "includeCustomFields",
				"type": "boolean"
			},
			{
				"description": "include project related counts",
				"in": "query",
				"name": "includeCounts",
				"type": "boolean"
			},
			{
				"description": "optional to include completed projects when filtering by project statuses \"current,late\".",
				"in": "query",
				"name": "includeCompletedStatus",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "include archived projects",
				"in": "query",
				"name": "includeArchivedProjects",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "hide projects where the logged-in user is just an observer",
				"in": "query",
				"name": "hideObservedProjects",
				"type": "boolean"
			},
			{
				"description": "includes filters when project ids are provided",
				"in": "query",
				"name": "alwaysIncludeFiltering",
				"type": "boolean"
			},
			{
				"description": "filter by projects that contain users associated with the team ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "teamIds",
				"type": "array"
			},
			{
				"description": "select the columns to use in exports.",
				"in": "query",
				"items": { "type": "string" },
				"name": "selectedColumns",
				"type": "array"
			},
			{
				"description": "filter by project tag ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectTagIds",
				"type": "array"
			},
			{
				"description": "filter by project status",
				"in": "query",
				"items": {
					"enum": ["active", "current", "late", "upcoming", "completed", "deleted"],
					"type": "string"
				},
				"name": "projectStatuses",
				"type": "array"
			},
			{
				"description": "filter by project owner ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectOwnerIds",
				"type": "array"
			},
			{
				"description": "filter by project ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectIds",
				"type": "array"
			},
			{
				"description": "filter by project healths\n\n0: not set\n1: bad\n2: ok\n3: good",
				"in": "query",
				"items": { "enum": ["0", "1", "2", "3"], "type": "integer" },
				"name": "projectHealths",
				"type": "array"
			},
			{
				"description": "filter by company ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectCompanyIds",
				"type": "array"
			},
			{
				"description": "filter by project category ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectCategoryIds",
				"type": "array"
			},
			{
				"description": "include (not used when generating reports)",
				"in": "query",
				"items": {
					"enum": [
						"projectOwners",
						"projectUpdates",
						"companies",
						"companies.countries",
						"companies.industries",
						"projectCategories",
						"portfolioCards",
						"portfolioBoards",
						"portfolioColumns",
						"tags",
						"customfields",
						"customfieldProjects",
						"projectBudgets",
						"activities.latest",
						"users",
						"createdBy",
						"updatedBy",
						"completedBy",
						"deletedBy"
					],
					"type": "string"
				},
				"name": "include",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"firstName",
						"lastName",
						"title",
						"email",
						"companyId",
						"company",
						"isAdmin",
						"isClientUser",
						"isServiceAccount",
						"type",
						"deleted",
						"avatarUrl",
						"lengthOfDay",
						"workingHoursId",
						"workingHour",
						"userRate",
						"userCost",
						"canAddProjects"
					],
					"type": "string"
				},
				"name": "fields[users]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name", "color", "count"], "type": "string" },
				"name": "fields[tags]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name"], "type": "string" },
				"name": "fields[projects]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name", "color"], "type": "string" },
				"name": "fields[projectcategories]",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"projectId",
						"text",
						"isActive",
						"health",
						"color",
						"dateCreated",
						"deleted",
						"deletedDate",
						"numLikes",
						"reactions"
					],
					"type": "string"
				},
				"name": "fields[projectUpdates]",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"projectId",
						"type",
						"status",
						"capacityUsed",
						"capacity",
						"originatorBudgetId",
						"isRepeating",
						"repeatPeriod",
						"repeatUnit",
						"repeatsRemaining",
						"sequenceNumber",
						"startDateTime",
						"endDateTime",
						"currencyCode",
						"timelogType",
						"expenseType",
						"defaultRate",
						"notificationIds",
						"createdByUserId",
						"dateCreated",
						"updatedUserId",
						"dateUpdated",
						"completedByUserId",
						"dateCompleted",
						"deletedByUserId",
						"dateDeleted"
					],
					"type": "string"
				},
				"name": "fields[projectBudgets]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name", "color"], "type": "string" },
				"name": "fields[portfolioColumns]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "columnId", "projectId"], "type": "string" },
				"name": "fields[portfolioCards]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name", "color"], "type": "string" },
				"name": "fields[portfolioBoards]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "type": "string" },
				"name": "fields[industries]",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"projectId",
						"entity",
						"name",
						"description",
						"type",
						"options",
						"visibilities",
						"isPrivate",
						"required",
						"createdAt",
						"createdByUserId",
						"updatedAt",
						"updatedByUserId",
						"deleted",
						"deletedAt",
						"deletedByUserId"
					],
					"type": "string"
				},
				"name": "fields[customfields]",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": ["id", "customfieldId", "value", "createdAt", "createdBy"],
					"type": "string"
				},
				"name": "fields[customfieldProjects]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "type": "string" },
				"name": "fields[countries]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name", "logoUploadedToServer", "logoImage"], "type": "string" },
				"name": "fields[companies]",
				"type": "array"
			},
			{
				"description": "exclude by project tag ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "excludeTagIds",
				"type": "array"
			}
		],
		"description": "Returns a list of projects",
		"group": "Projects"
	},
	{
		"endpoint": "/projects/api/v3/projects.pdf",
		"method": "get",
		"parameters": [
			{
				"description": "updated after",
				"format": "date-time",
				"in": "query",
				"name": "updatedAfter",
				"type": "string"
			},
			{
				"description": "filter by project name",
				"in": "query",
				"name": "searchTerm",
				"type": "string"
			},
			{
				"default": "project",
				"description": "define the type of the report",
				"enum": ["project", "health"],
				"in": "query",
				"name": "reportType",
				"type": "string"
			},
			{
				"description": "Optional to configure the report dates displayed in a timezone",
				"in": "query",
				"name": "reportTimezone",
				"type": "string"
			},
			{
				"default": "pdf",
				"description": "define the format of the report",
				"enum": ["csv", "html", "pdf", "xls"],
				"in": "query",
				"name": "reportFormat",
				"type": "string"
			},
			{
				"description": "filter by project type",
				"in": "query",
				"name": "projectType",
				"type": "string"
			},
			{
				"default": "asc",
				"description": "order mode",
				"enum": ["asc", "desc"],
				"in": "query",
				"name": "orderMode",
				"type": "string"
			},
			{
				"default": "name",
				"description": "order by",
				"enum": [
					"companyname",
					"datecreated",
					"duedate",
					"lastactivity",
					"name",
					"namecaseinsensitive",
					"ownercompany",
					"starred",
					"categoryname"
				],
				"in": "query",
				"name": "orderBy",
				"type": "string"
			},
			{
				"description": "filter by min last activity date",
				"format": "date",
				"in": "query",
				"name": "minLastActivityDate",
				"type": "string"
			},
			{
				"description": "filter by max last activity date",
				"format": "date",
				"in": "query",
				"name": "maxLastActivityDate",
				"type": "string"
			},
			{
				"description": "currency symbol for report export",
				"in": "query",
				"name": "currencySymbol",
				"type": "string"
			},
			{ "description": "filter by user id", "in": "query", "name": "userId", "type": "integer" },
			{
				"default": "50",
				"description": "number of items in a page (not used when generating reports)",
				"in": "query",
				"name": "pageSize",
				"type": "integer"
			},
			{
				"default": "1",
				"description": "page number (not used when generating reports)",
				"in": "query",
				"name": "page",
				"type": "integer"
			},
			{
				"description": "order by custom field id when orderBy is equal to customfield",
				"in": "query",
				"name": "orderByCustomFieldId",
				"type": "integer"
			},
			{
				"description": "include companies in the search",
				"in": "query",
				"name": "searchCompanies",
				"type": "boolean"
			},
			{
				"description": "search projects beginning with the search term character only when it contains a single character.",
				"in": "query",
				"name": "searchByLetter",
				"type": "boolean"
			},
			{
				"description": "filter by starred projects only",
				"in": "query",
				"name": "onlyStarredProjects",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "only show projects with explicit membership",
				"in": "query",
				"name": "onlyProjectsWithExplicitMembership",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "return only archived projects",
				"in": "query",
				"name": "onlyArchivedProjects",
				"type": "boolean"
			},
			{
				"description": "match all project tags",
				"in": "query",
				"name": "matchAllProjectTags",
				"type": "boolean"
			},
			{
				"description": "match all excluded project tags",
				"in": "query",
				"name": "matchAllExcludedTags",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "generate a report document",
				"in": "query",
				"name": "isReportDownload",
				"type": "boolean"
			},
			{
				"description": "include project status counts for tasks columns billing events milestones",
				"in": "query",
				"name": "includeStats",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "fetch user-specific data such as isStarred",
				"in": "query",
				"name": "includeProjectUserInfo",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "include custom fields",
				"in": "query",
				"name": "includeCustomFields",
				"type": "boolean"
			},
			{
				"description": "include project related counts",
				"in": "query",
				"name": "includeCounts",
				"type": "boolean"
			},
			{
				"description": "optional to include completed projects when filtering by project statuses \"current,late\".",
				"in": "query",
				"name": "includeCompletedStatus",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "include archived projects",
				"in": "query",
				"name": "includeArchivedProjects",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "hide projects where the logged-in user is just an observer",
				"in": "query",
				"name": "hideObservedProjects",
				"type": "boolean"
			},
			{
				"description": "includes filters when project ids are provided",
				"in": "query",
				"name": "alwaysIncludeFiltering",
				"type": "boolean"
			},
			{
				"description": "filter by projects that contain users associated with the team ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "teamIds",
				"type": "array"
			},
			{
				"description": "select the columns to use in exports.",
				"in": "query",
				"items": { "type": "string" },
				"name": "selectedColumns",
				"type": "array"
			},
			{
				"description": "filter by project tag ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectTagIds",
				"type": "array"
			},
			{
				"description": "filter by project status",
				"in": "query",
				"items": {
					"enum": ["active", "current", "late", "upcoming", "completed", "deleted"],
					"type": "string"
				},
				"name": "projectStatuses",
				"type": "array"
			},
			{
				"description": "filter by project owner ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectOwnerIds",
				"type": "array"
			},
			{
				"description": "filter by project ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectIds",
				"type": "array"
			},
			{
				"description": "filter by project healths\n\n0: not set\n1: bad\n2: ok\n3: good",
				"in": "query",
				"items": { "enum": ["0", "1", "2", "3"], "type": "integer" },
				"name": "projectHealths",
				"type": "array"
			},
			{
				"description": "filter by company ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectCompanyIds",
				"type": "array"
			},
			{
				"description": "filter by project category ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectCategoryIds",
				"type": "array"
			},
			{
				"description": "include (not used when generating reports)",
				"in": "query",
				"items": {
					"enum": [
						"projectOwners",
						"projectUpdates",
						"companies",
						"companies.countries",
						"companies.industries",
						"projectCategories",
						"portfolioCards",
						"portfolioBoards",
						"portfolioColumns",
						"tags",
						"customfields",
						"customfieldProjects",
						"projectBudgets",
						"activities.latest",
						"users",
						"createdBy",
						"updatedBy",
						"completedBy",
						"deletedBy"
					],
					"type": "string"
				},
				"name": "include",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"firstName",
						"lastName",
						"title",
						"email",
						"companyId",
						"company",
						"isAdmin",
						"isClientUser",
						"isServiceAccount",
						"type",
						"deleted",
						"avatarUrl",
						"lengthOfDay",
						"workingHoursId",
						"workingHour",
						"userRate",
						"userCost",
						"canAddProjects"
					],
					"type": "string"
				},
				"name": "fields[users]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name", "color", "count"], "type": "string" },
				"name": "fields[tags]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name"], "type": "string" },
				"name": "fields[projects]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name", "color"], "type": "string" },
				"name": "fields[projectcategories]",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"projectId",
						"text",
						"isActive",
						"health",
						"color",
						"dateCreated",
						"deleted",
						"deletedDate",
						"numLikes",
						"reactions"
					],
					"type": "string"
				},
				"name": "fields[projectUpdates]",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"projectId",
						"type",
						"status",
						"capacityUsed",
						"capacity",
						"originatorBudgetId",
						"isRepeating",
						"repeatPeriod",
						"repeatUnit",
						"repeatsRemaining",
						"sequenceNumber",
						"startDateTime",
						"endDateTime",
						"currencyCode",
						"timelogType",
						"expenseType",
						"defaultRate",
						"notificationIds",
						"createdByUserId",
						"dateCreated",
						"updatedUserId",
						"dateUpdated",
						"completedByUserId",
						"dateCompleted",
						"deletedByUserId",
						"dateDeleted"
					],
					"type": "string"
				},
				"name": "fields[projectBudgets]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name", "color"], "type": "string" },
				"name": "fields[portfolioColumns]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "columnId", "projectId"], "type": "string" },
				"name": "fields[portfolioCards]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name", "color"], "type": "string" },
				"name": "fields[portfolioBoards]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "type": "string" },
				"name": "fields[industries]",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"projectId",
						"entity",
						"name",
						"description",
						"type",
						"options",
						"visibilities",
						"isPrivate",
						"required",
						"createdAt",
						"createdByUserId",
						"updatedAt",
						"updatedByUserId",
						"deleted",
						"deletedAt",
						"deletedByUserId"
					],
					"type": "string"
				},
				"name": "fields[customfields]",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": ["id", "customfieldId", "value", "createdAt", "createdBy"],
					"type": "string"
				},
				"name": "fields[customfieldProjects]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "type": "string" },
				"name": "fields[countries]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name", "logoUploadedToServer", "logoImage"], "type": "string" },
				"name": "fields[companies]",
				"type": "array"
			},
			{
				"description": "exclude by project tag ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "excludeTagIds",
				"type": "array"
			}
		],
		"description": "Generate project report in PDF format",
		"group": "Projects"
	},
	{
		"endpoint": "/projects/api/v3/projects.xlsx",
		"method": "get",
		"parameters": [
			{
				"description": "updated after",
				"format": "date-time",
				"in": "query",
				"name": "updatedAfter",
				"type": "string"
			},
			{
				"description": "filter by project name",
				"in": "query",
				"name": "searchTerm",
				"type": "string"
			},
			{
				"default": "project",
				"description": "define the type of the report",
				"enum": ["project", "health"],
				"in": "query",
				"name": "reportType",
				"type": "string"
			},
			{
				"description": "Optional to configure the report dates displayed in a timezone",
				"in": "query",
				"name": "reportTimezone",
				"type": "string"
			},
			{
				"default": "pdf",
				"description": "define the format of the report",
				"enum": ["csv", "html", "pdf", "xls"],
				"in": "query",
				"name": "reportFormat",
				"type": "string"
			},
			{
				"description": "filter by project type",
				"in": "query",
				"name": "projectType",
				"type": "string"
			},
			{
				"default": "asc",
				"description": "order mode",
				"enum": ["asc", "desc"],
				"in": "query",
				"name": "orderMode",
				"type": "string"
			},
			{
				"default": "name",
				"description": "order by",
				"enum": [
					"companyname",
					"datecreated",
					"duedate",
					"lastactivity",
					"name",
					"namecaseinsensitive",
					"ownercompany",
					"starred",
					"categoryname"
				],
				"in": "query",
				"name": "orderBy",
				"type": "string"
			},
			{
				"description": "filter by min last activity date",
				"format": "date",
				"in": "query",
				"name": "minLastActivityDate",
				"type": "string"
			},
			{
				"description": "filter by max last activity date",
				"format": "date",
				"in": "query",
				"name": "maxLastActivityDate",
				"type": "string"
			},
			{
				"description": "currency symbol for report export",
				"in": "query",
				"name": "currencySymbol",
				"type": "string"
			},
			{ "description": "filter by user id", "in": "query", "name": "userId", "type": "integer" },
			{
				"default": "50",
				"description": "number of items in a page (not used when generating reports)",
				"in": "query",
				"name": "pageSize",
				"type": "integer"
			},
			{
				"default": "1",
				"description": "page number (not used when generating reports)",
				"in": "query",
				"name": "page",
				"type": "integer"
			},
			{
				"description": "order by custom field id when orderBy is equal to customfield",
				"in": "query",
				"name": "orderByCustomFieldId",
				"type": "integer"
			},
			{
				"description": "include companies in the search",
				"in": "query",
				"name": "searchCompanies",
				"type": "boolean"
			},
			{
				"description": "search projects beginning with the search term character only when it contains a single character.",
				"in": "query",
				"name": "searchByLetter",
				"type": "boolean"
			},
			{
				"description": "filter by starred projects only",
				"in": "query",
				"name": "onlyStarredProjects",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "only show projects with explicit membership",
				"in": "query",
				"name": "onlyProjectsWithExplicitMembership",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "return only archived projects",
				"in": "query",
				"name": "onlyArchivedProjects",
				"type": "boolean"
			},
			{
				"description": "match all project tags",
				"in": "query",
				"name": "matchAllProjectTags",
				"type": "boolean"
			},
			{
				"description": "match all excluded project tags",
				"in": "query",
				"name": "matchAllExcludedTags",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "generate a report document",
				"in": "query",
				"name": "isReportDownload",
				"type": "boolean"
			},
			{
				"description": "include project status counts for tasks columns billing events milestones",
				"in": "query",
				"name": "includeStats",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "fetch user-specific data such as isStarred",
				"in": "query",
				"name": "includeProjectUserInfo",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "include custom fields",
				"in": "query",
				"name": "includeCustomFields",
				"type": "boolean"
			},
			{
				"description": "include project related counts",
				"in": "query",
				"name": "includeCounts",
				"type": "boolean"
			},
			{
				"description": "optional to include completed projects when filtering by project statuses \"current,late\".",
				"in": "query",
				"name": "includeCompletedStatus",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "include archived projects",
				"in": "query",
				"name": "includeArchivedProjects",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "hide projects where the logged-in user is just an observer",
				"in": "query",
				"name": "hideObservedProjects",
				"type": "boolean"
			},
			{
				"description": "includes filters when project ids are provided",
				"in": "query",
				"name": "alwaysIncludeFiltering",
				"type": "boolean"
			},
			{
				"description": "filter by projects that contain users associated with the team ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "teamIds",
				"type": "array"
			},
			{
				"description": "select the columns to use in exports.",
				"in": "query",
				"items": { "type": "string" },
				"name": "selectedColumns",
				"type": "array"
			},
			{
				"description": "filter by project tag ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectTagIds",
				"type": "array"
			},
			{
				"description": "filter by project status",
				"in": "query",
				"items": {
					"enum": ["active", "current", "late", "upcoming", "completed", "deleted"],
					"type": "string"
				},
				"name": "projectStatuses",
				"type": "array"
			},
			{
				"description": "filter by project owner ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectOwnerIds",
				"type": "array"
			},
			{
				"description": "filter by project ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectIds",
				"type": "array"
			},
			{
				"description": "filter by project healths\n\n0: not set\n1: bad\n2: ok\n3: good",
				"in": "query",
				"items": { "enum": ["0", "1", "2", "3"], "type": "integer" },
				"name": "projectHealths",
				"type": "array"
			},
			{
				"description": "filter by company ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectCompanyIds",
				"type": "array"
			},
			{
				"description": "filter by project category ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectCategoryIds",
				"type": "array"
			},
			{
				"description": "include (not used when generating reports)",
				"in": "query",
				"items": {
					"enum": [
						"projectOwners",
						"projectUpdates",
						"companies",
						"companies.countries",
						"companies.industries",
						"projectCategories",
						"portfolioCards",
						"portfolioBoards",
						"portfolioColumns",
						"tags",
						"customfields",
						"customfieldProjects",
						"projectBudgets",
						"activities.latest",
						"users",
						"createdBy",
						"updatedBy",
						"completedBy",
						"deletedBy"
					],
					"type": "string"
				},
				"name": "include",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"firstName",
						"lastName",
						"title",
						"email",
						"companyId",
						"company",
						"isAdmin",
						"isClientUser",
						"isServiceAccount",
						"type",
						"deleted",
						"avatarUrl",
						"lengthOfDay",
						"workingHoursId",
						"workingHour",
						"userRate",
						"userCost",
						"canAddProjects"
					],
					"type": "string"
				},
				"name": "fields[users]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name", "color", "count"], "type": "string" },
				"name": "fields[tags]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name"], "type": "string" },
				"name": "fields[projects]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name", "color"], "type": "string" },
				"name": "fields[projectcategories]",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"projectId",
						"text",
						"isActive",
						"health",
						"color",
						"dateCreated",
						"deleted",
						"deletedDate",
						"numLikes",
						"reactions"
					],
					"type": "string"
				},
				"name": "fields[projectUpdates]",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"projectId",
						"type",
						"status",
						"capacityUsed",
						"capacity",
						"originatorBudgetId",
						"isRepeating",
						"repeatPeriod",
						"repeatUnit",
						"repeatsRemaining",
						"sequenceNumber",
						"startDateTime",
						"endDateTime",
						"currencyCode",
						"timelogType",
						"expenseType",
						"defaultRate",
						"notificationIds",
						"createdByUserId",
						"dateCreated",
						"updatedUserId",
						"dateUpdated",
						"completedByUserId",
						"dateCompleted",
						"deletedByUserId",
						"dateDeleted"
					],
					"type": "string"
				},
				"name": "fields[projectBudgets]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name", "color"], "type": "string" },
				"name": "fields[portfolioColumns]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "columnId", "projectId"], "type": "string" },
				"name": "fields[portfolioCards]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name", "color"], "type": "string" },
				"name": "fields[portfolioBoards]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "type": "string" },
				"name": "fields[industries]",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"projectId",
						"entity",
						"name",
						"description",
						"type",
						"options",
						"visibilities",
						"isPrivate",
						"required",
						"createdAt",
						"createdByUserId",
						"updatedAt",
						"updatedByUserId",
						"deleted",
						"deletedAt",
						"deletedByUserId"
					],
					"type": "string"
				},
				"name": "fields[customfields]",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": ["id", "customfieldId", "value", "createdAt", "createdBy"],
					"type": "string"
				},
				"name": "fields[customfieldProjects]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "type": "string" },
				"name": "fields[countries]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name", "logoUploadedToServer", "logoImage"], "type": "string" },
				"name": "fields[companies]",
				"type": "array"
			},
			{
				"description": "exclude by project tag ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "excludeTagIds",
				"type": "array"
			}
		],
		"description": "Generate project report in XLSX format",
		"group": "Projects"
	},
	{
		"endpoint": "/projects/api/v3/projects/budgets/:budgetId/tasklists/budgets/:tasklistId.json",
		"method": "patch",
		"parameters": [
			{
				"in": "body",
				"name": "tasklistbudget.PatchBudgetRequest",
				"required": true,
				"schema": { "$ref": "#/definitions/tasklistbudget.PatchBudgetRequest" }
			}
		],
		"description": "Updates a tasklist budget",
		"group": "Budgets"
	},
	{
		"endpoint": "/projects/api/v3/projects/budgets/:id/tasklists/budgets.json",
		"method": "get",
		"parameters": [
			{
				"default": "asc",
				"description": "order mode",
				"enum": ["asc", "desc"],
				"in": "query",
				"name": "orderMode",
				"type": "string"
			},
			{
				"default": "dateCreated",
				"description": "order by",
				"enum": ["dateCreated"],
				"in": "query",
				"name": "orderBy",
				"type": "string"
			},
			{
				"default": "0",
				"description": "parent project budget id",
				"in": "query",
				"name": "projectBudgetId",
				"type": "integer"
			},
			{
				"default": "50",
				"description": "number of items in a page",
				"in": "query",
				"name": "pageSize",
				"type": "integer"
			},
			{
				"default": "1",
				"description": "page number",
				"in": "query",
				"name": "page",
				"type": "integer"
			},
			{
				"description": "include",
				"in": "query",
				"items": {
					"enum": ["tasklists", "projectBudgets", "tasklistBudgetNotifications"],
					"type": "string"
				},
				"name": "include",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name", "projectId", "milestoneId"], "type": "string" },
				"name": "fields[tasklists]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name", "projectId", "milestoneId"], "type": "string" },
				"name": "fields[tasklistBudgetNotifications]",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"projectId",
						"type",
						"status",
						"capacityUsed",
						"capacity",
						"originatorBudgetId",
						"isRepeating",
						"repeatPeriod",
						"repeatUnit",
						"repeatsRemaining",
						"sequenceNumber",
						"startDateTime",
						"endDateTime",
						"currencyCode",
						"timelogType",
						"expenseType",
						"defaultRate",
						"notificationIds",
						"createdByUserId",
						"dateCreated",
						"updatedUserId",
						"dateUpdated",
						"completedByUserId",
						"dateCompleted",
						"deletedByUserId",
						"dateDeleted"
					],
					"type": "string"
				},
				"name": "fields[projectBudgets]",
				"type": "array"
			}
		],
		"description": "Get all tasklist budgets in a project budget.",
		"group": "Budgets"
	},
	{
		"endpoint": "/projects/api/v3/projects/budgets/:id/tasklists/budgets.json",
		"method": "patch",
		"parameters": [
			{
				"in": "body",
				"name": "tasklistbudget.BulkAddBudgetRequest",
				"required": true,
				"schema": { "$ref": "#/definitions/tasklistbudget.BulkAddBudgetRequest" }
			}
		],
		"description": "Adds or updates task list budgets depending on the",
		"group": "Risks"
	},
	{
		"endpoint": "/projects/api/v3/projects/featureorder.json",
		"method": "put",
		"parameters": [
			{
				"in": "body",
				"name": "project.FeatureOrderDefaults",
				"required": true,
				"schema": { "$ref": "#/definitions/project.FeatureOrderDefaults" }
			}
		],
		"description": "Sets the default features order to display in tab",
		"group": "Projects"
	},
	{
		"endpoint": "/projects/api/v3/projects/metrics/active.json",
		"method": "get",
		"description": "Get the total count of active projects",
		"group": "Projects"
	},
	{
		"endpoint": "/projects/api/v3/projects/metrics/billable.json",
		"method": "get",
		"parameters": [
			{ "format": "date", "in": "query", "name": "startDate", "type": "string" },
			{
				"default": "desc",
				"description": "order mode",
				"enum": ["asc", "desc"],
				"in": "query",
				"name": "orderMode",
				"type": "string"
			},
			{ "format": "date", "in": "query", "name": "endDate", "type": "string" }
		],
		"description": "Get the total billable time per project",
		"group": "Projects"
	},
	{
		"endpoint": "/projects/api/v3/projects/metrics/healths.json",
		"method": "get",
		"parameters": [
			{
				"description": "filter by project status",
				"enum": ["active", "current", "late", "upcoming", "completed", "deleted"],
				"in": "query",
				"name": "projectStatus",
				"type": "string"
			},
			{
				"description": "filter by starred projects only",
				"in": "query",
				"name": "onlyStarredProjects",
				"type": "boolean"
			},
			{
				"description": "match all project tags",
				"in": "query",
				"name": "matchAllProjectTags",
				"type": "boolean"
			},
			{
				"description": "filter by project tag ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectTagIds",
				"type": "array"
			},
			{
				"description": "filter by project statuses",
				"in": "query",
				"items": {
					"enum": ["active", "current", "late", "upcoming", "completed", "deleted"],
					"type": "string"
				},
				"name": "projectStatuses",
				"type": "array"
			},
			{
				"description": "filter by project owner ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectOwnerIds",
				"type": "array"
			},
			{
				"description": "filter by project ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectIds",
				"type": "array"
			},
			{
				"description": "project health\n\n0: not set\n1: bad\n2: ok\n3: good",
				"in": "query",
				"items": { "enum": ["0", "1", "2", "3"], "type": "integer" },
				"name": "projectHealths",
				"type": "array"
			},
			{
				"description": "filter by company ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectCompanyIds",
				"type": "array"
			},
			{
				"description": "filter by project category ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectCategoryIds",
				"type": "array"
			}
		],
		"description": "Get a health summary for all projects",
		"group": "Projects"
	},
	{
		"endpoint": "/projects/api/v3/projects/metrics/invoice.json",
		"method": "get",
		"parameters": [
			{
				"description": "filter by starred projects only",
				"in": "query",
				"name": "onlyStarredProjects",
				"type": "boolean"
			},
			{
				"description": "match all project tags",
				"in": "query",
				"name": "matchAllProjectTags",
				"type": "boolean"
			},
			{
				"description": "include archived projects",
				"in": "query",
				"name": "includeArchivedProjects",
				"type": "boolean"
			},
			{
				"description": "filter by project tag ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectTagIds",
				"type": "array"
			},
			{
				"description": "project status",
				"in": "query",
				"items": {
					"enum": ["active", "current", "late", "upcoming", "completed", "deleted"],
					"type": "string"
				},
				"name": "projectStatuses",
				"type": "array"
			},
			{
				"description": "filter by project owner ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectOwnerIds",
				"type": "array"
			},
			{
				"description": "filter by project ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectIds",
				"type": "array"
			},
			{
				"description": "project health\n\n0: not set\n1: bad\n2: ok\n3: good",
				"in": "query",
				"items": { "enum": ["0", "1", "2", "3"], "type": "integer" },
				"name": "projectHealths",
				"type": "array"
			},
			{
				"description": "filter by company ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectCompanyIds",
				"type": "array"
			},
			{
				"description": "filter by project category ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectCategoryIds",
				"type": "array"
			}
		],
		"description": "Return open invoices across all projects",
		"group": "Projects"
	},
	{
		"endpoint": "/projects/api/v3/projects/metrics/owners.json",
		"method": "get",
		"parameters": [
			{
				"default": "desc",
				"description": "sort order",
				"enum": ["asc", "desc"],
				"in": "query",
				"name": "orderMode",
				"type": "string"
			},
			{
				"default": "50",
				"description": "number of items in a page",
				"in": "query",
				"name": "pageSize",
				"type": "integer"
			},
			{
				"default": "1",
				"description": "page number",
				"in": "query",
				"name": "page",
				"type": "integer"
			},
			{
				"description": "filter by starred projects only",
				"in": "query",
				"name": "onlyStarredProjects",
				"type": "boolean"
			},
			{
				"description": "match all project tags",
				"in": "query",
				"name": "matchAllProjectTags",
				"type": "boolean"
			},
			{
				"description": "filter by project tag ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectTagIds",
				"type": "array"
			},
			{
				"description": "project status",
				"in": "query",
				"items": {
					"enum": ["active", "current", "late", "upcoming", "completed", "deleted"],
					"type": "string"
				},
				"name": "projectStatuses",
				"type": "array"
			},
			{
				"description": "filter by project owner ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectOwnerIds",
				"type": "array"
			},
			{
				"description": "filter by project ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectIds",
				"type": "array"
			},
			{
				"description": "project health\n\n0: not set\n1: bad\n2: ok\n3: good",
				"in": "query",
				"items": { "enum": ["0", "1", "2", "3"], "type": "integer" },
				"name": "projectHealths",
				"type": "array"
			},
			{
				"description": "filter by company ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectCompanyIds",
				"type": "array"
			},
			{
				"description": "filter by project category ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectCategoryIds",
				"type": "array"
			}
		],
		"description": "Get number of owned and un-assigned projects",
		"group": "Projects"
	},
	{
		"endpoint": "/projects/api/v3/projects/metrics/unbilled.json",
		"method": "get",
		"parameters": [
			{
				"description": "filter by starred projects only",
				"in": "query",
				"name": "onlyStarredProjects",
				"type": "boolean"
			},
			{
				"description": "match all project tags",
				"in": "query",
				"name": "matchAllProjectTags",
				"type": "boolean"
			},
			{
				"description": "include archived projects",
				"in": "query",
				"name": "includeArchivedProjects",
				"type": "boolean"
			},
			{
				"description": "filter by project tag ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectTagIds",
				"type": "array"
			},
			{
				"description": "project status",
				"in": "query",
				"items": {
					"enum": ["active", "current", "late", "upcoming", "completed", "deleted"],
					"type": "string"
				},
				"name": "projectStatuses",
				"type": "array"
			},
			{
				"description": "filter by project owner ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectOwnerIds",
				"type": "array"
			},
			{
				"description": "filter by project ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectIds",
				"type": "array"
			},
			{
				"description": "project health\n\n0: not set\n1: bad\n2: ok\n3: good",
				"in": "query",
				"items": { "enum": ["0", "1", "2", "3"], "type": "integer" },
				"name": "projectHealths",
				"type": "array"
			},
			{
				"description": "filter by company ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectCompanyIds",
				"type": "array"
			},
			{
				"description": "filter by project category ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectCategoryIds",
				"type": "array"
			}
		],
		"description": "Return un-billed expenses across all projects",
		"group": "Projects"
	},
	{
		"endpoint": "/projects/api/v3/projects/starred.json",
		"method": "get",
		"parameters": [
			{
				"description": "updated after",
				"format": "date-time",
				"in": "query",
				"name": "updatedAfter",
				"type": "string"
			},
			{
				"description": "filter by project name",
				"in": "query",
				"name": "searchTerm",
				"type": "string"
			},
			{
				"default": "project",
				"description": "define the type of the report",
				"enum": ["project", "health"],
				"in": "query",
				"name": "reportType",
				"type": "string"
			},
			{
				"description": "Optional to configure the report dates displayed in a timezone",
				"in": "query",
				"name": "reportTimezone",
				"type": "string"
			},
			{
				"default": "pdf",
				"description": "define the format of the report",
				"enum": ["csv", "html", "pdf", "xls"],
				"in": "query",
				"name": "reportFormat",
				"type": "string"
			},
			{
				"description": "filter by project type",
				"in": "query",
				"name": "projectType",
				"type": "string"
			},
			{
				"default": "asc",
				"description": "order mode",
				"enum": ["asc", "desc"],
				"in": "query",
				"name": "orderMode",
				"type": "string"
			},
			{
				"default": "name",
				"description": "order by",
				"enum": [
					"companyname",
					"datecreated",
					"duedate",
					"lastactivity",
					"name",
					"namecaseinsensitive",
					"ownercompany",
					"starred",
					"categoryname"
				],
				"in": "query",
				"name": "orderBy",
				"type": "string"
			},
			{
				"description": "filter by min last activity date",
				"format": "date",
				"in": "query",
				"name": "minLastActivityDate",
				"type": "string"
			},
			{
				"description": "filter by max last activity date",
				"format": "date",
				"in": "query",
				"name": "maxLastActivityDate",
				"type": "string"
			},
			{
				"description": "currency symbol for report export",
				"in": "query",
				"name": "currencySymbol",
				"type": "string"
			},
			{ "description": "filter by user id", "in": "query", "name": "userId", "type": "integer" },
			{
				"default": "50",
				"description": "number of items in a page (not used when generating reports)",
				"in": "query",
				"name": "pageSize",
				"type": "integer"
			},
			{
				"default": "1",
				"description": "page number (not used when generating reports)",
				"in": "query",
				"name": "page",
				"type": "integer"
			},
			{
				"description": "order by custom field id when orderBy is equal to customfield",
				"in": "query",
				"name": "orderByCustomFieldId",
				"type": "integer"
			},
			{
				"description": "include companies in the search",
				"in": "query",
				"name": "searchCompanies",
				"type": "boolean"
			},
			{
				"description": "search projects beginning with the search term character only when it contains a single character.",
				"in": "query",
				"name": "searchByLetter",
				"type": "boolean"
			},
			{
				"description": "filter by starred projects only",
				"in": "query",
				"name": "onlyStarredProjects",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "only show projects with explicit membership",
				"in": "query",
				"name": "onlyProjectsWithExplicitMembership",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "return only archived projects",
				"in": "query",
				"name": "onlyArchivedProjects",
				"type": "boolean"
			},
			{
				"description": "match all project tags",
				"in": "query",
				"name": "matchAllProjectTags",
				"type": "boolean"
			},
			{
				"description": "match all excluded project tags",
				"in": "query",
				"name": "matchAllExcludedTags",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "generate a report document",
				"in": "query",
				"name": "isReportDownload",
				"type": "boolean"
			},
			{
				"description": "include project status counts for tasks columns billing events milestones",
				"in": "query",
				"name": "includeStats",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "fetch user-specific data such as isStarred",
				"in": "query",
				"name": "includeProjectUserInfo",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "include custom fields",
				"in": "query",
				"name": "includeCustomFields",
				"type": "boolean"
			},
			{
				"description": "include project related counts",
				"in": "query",
				"name": "includeCounts",
				"type": "boolean"
			},
			{
				"description": "optional to include completed projects when filtering by project statuses \"current,late\".",
				"in": "query",
				"name": "includeCompletedStatus",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "include archived projects",
				"in": "query",
				"name": "includeArchivedProjects",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "hide projects where the logged-in user is just an observer",
				"in": "query",
				"name": "hideObservedProjects",
				"type": "boolean"
			},
			{
				"description": "includes filters when project ids are provided",
				"in": "query",
				"name": "alwaysIncludeFiltering",
				"type": "boolean"
			},
			{
				"description": "filter by projects that contain users associated with the team ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "teamIds",
				"type": "array"
			},
			{
				"description": "select the columns to use in exports.",
				"in": "query",
				"items": { "type": "string" },
				"name": "selectedColumns",
				"type": "array"
			},
			{
				"description": "filter by project tag ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectTagIds",
				"type": "array"
			},
			{
				"description": "filter by project status",
				"in": "query",
				"items": {
					"enum": ["active", "current", "late", "upcoming", "completed", "deleted"],
					"type": "string"
				},
				"name": "projectStatuses",
				"type": "array"
			},
			{
				"description": "filter by project owner ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectOwnerIds",
				"type": "array"
			},
			{
				"description": "filter by project ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectIds",
				"type": "array"
			},
			{
				"description": "filter by project healths\n\n0: not set\n1: bad\n2: ok\n3: good",
				"in": "query",
				"items": { "enum": ["0", "1", "2", "3"], "type": "integer" },
				"name": "projectHealths",
				"type": "array"
			},
			{
				"description": "filter by company ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectCompanyIds",
				"type": "array"
			},
			{
				"description": "filter by project category ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectCategoryIds",
				"type": "array"
			},
			{
				"description": "include (not used when generating reports)",
				"in": "query",
				"items": {
					"enum": [
						"projectOwners",
						"projectUpdates",
						"companies",
						"companies.countries",
						"companies.industries",
						"projectCategories",
						"portfolioCards",
						"portfolioBoards",
						"portfolioColumns",
						"tags",
						"customfields",
						"customfieldProjects",
						"projectBudgets",
						"activities.latest",
						"users",
						"createdBy",
						"updatedBy",
						"completedBy",
						"deletedBy"
					],
					"type": "string"
				},
				"name": "include",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"firstName",
						"lastName",
						"title",
						"email",
						"companyId",
						"company",
						"isAdmin",
						"isClientUser",
						"isServiceAccount",
						"type",
						"deleted",
						"avatarUrl",
						"lengthOfDay",
						"workingHoursId",
						"workingHour",
						"userRate",
						"userCost",
						"canAddProjects"
					],
					"type": "string"
				},
				"name": "fields[users]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name", "color", "count"], "type": "string" },
				"name": "fields[tags]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name"], "type": "string" },
				"name": "fields[projects]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name", "color"], "type": "string" },
				"name": "fields[projectcategories]",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"projectId",
						"text",
						"isActive",
						"health",
						"color",
						"dateCreated",
						"deleted",
						"deletedDate",
						"numLikes",
						"reactions"
					],
					"type": "string"
				},
				"name": "fields[projectUpdates]",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"projectId",
						"type",
						"status",
						"capacityUsed",
						"capacity",
						"originatorBudgetId",
						"isRepeating",
						"repeatPeriod",
						"repeatUnit",
						"repeatsRemaining",
						"sequenceNumber",
						"startDateTime",
						"endDateTime",
						"currencyCode",
						"timelogType",
						"expenseType",
						"defaultRate",
						"notificationIds",
						"createdByUserId",
						"dateCreated",
						"updatedUserId",
						"dateUpdated",
						"completedByUserId",
						"dateCompleted",
						"deletedByUserId",
						"dateDeleted"
					],
					"type": "string"
				},
				"name": "fields[projectBudgets]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name", "color"], "type": "string" },
				"name": "fields[portfolioColumns]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "columnId", "projectId"], "type": "string" },
				"name": "fields[portfolioCards]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name", "color"], "type": "string" },
				"name": "fields[portfolioBoards]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "type": "string" },
				"name": "fields[industries]",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"projectId",
						"entity",
						"name",
						"description",
						"type",
						"options",
						"visibilities",
						"isPrivate",
						"required",
						"createdAt",
						"createdByUserId",
						"updatedAt",
						"updatedByUserId",
						"deleted",
						"deletedAt",
						"deletedByUserId"
					],
					"type": "string"
				},
				"name": "fields[customfields]",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": ["id", "customfieldId", "value", "createdAt", "createdBy"],
					"type": "string"
				},
				"name": "fields[customfieldProjects]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "type": "string" },
				"name": "fields[countries]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name", "logoUploadedToServer", "logoImage"], "type": "string" },
				"name": "fields[companies]",
				"type": "array"
			},
			{
				"description": "exclude by project tag ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "excludeTagIds",
				"type": "array"
			}
		],
		"description": "Returns a list of starred projects",
		"group": "Projects"
	},
	{
		"endpoint": "/projects/api/v3/projects/teamwork/categories.json",
		"method": "get",
		"description": "Returns a list of teamwork project categories",
		"group": "Categories"
	},
	{
		"endpoint": "/projects/api/v3/projects/teamwork/samples.json",
		"method": "get",
		"parameters": [
			{
				"description": "filter by project name",
				"in": "query",
				"name": "searchTerm",
				"type": "string"
			},
			{
				"default": "50",
				"description": "number of items in a page (not used when generating reports)",
				"in": "query",
				"name": "pageSize",
				"type": "integer"
			},
			{
				"default": "1",
				"description": "page number (not used when generating reports)",
				"in": "query",
				"name": "page",
				"type": "integer"
			},
			{
				"description": "filter by sample ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "ids",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"name",
						"code",
						"description",
						"icon",
						"imagePreview",
						"categoryId",
						"content"
					],
					"type": "string"
				},
				"name": "fields[sampleprojects]",
				"type": "array"
			},
			{
				"description": "filter by category ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "categoryIds",
				"type": "array"
			}
		],
		"description": "Returns a list of teamwork sample projects",
		"group": "Projects"
	},
	{
		"endpoint": "/projects/api/v3/projects/templates.json",
		"method": "get",
		"parameters": [
			{
				"description": "updated after",
				"format": "date-time",
				"in": "query",
				"name": "updatedAfter",
				"type": "string"
			},
			{
				"description": "filter by project name",
				"in": "query",
				"name": "searchTerm",
				"type": "string"
			},
			{
				"default": "project",
				"description": "define the type of the report",
				"enum": ["project", "health"],
				"in": "query",
				"name": "reportType",
				"type": "string"
			},
			{
				"description": "Optional to configure the report dates displayed in a timezone",
				"in": "query",
				"name": "reportTimezone",
				"type": "string"
			},
			{
				"default": "pdf",
				"description": "define the format of the report",
				"enum": ["csv", "html", "pdf", "xls"],
				"in": "query",
				"name": "reportFormat",
				"type": "string"
			},
			{
				"description": "filter by project type",
				"in": "query",
				"name": "projectType",
				"type": "string"
			},
			{
				"default": "asc",
				"description": "order mode",
				"enum": ["asc", "desc"],
				"in": "query",
				"name": "orderMode",
				"type": "string"
			},
			{
				"default": "name",
				"description": "order by",
				"enum": [
					"companyname",
					"datecreated",
					"duedate",
					"lastactivity",
					"name",
					"namecaseinsensitive",
					"ownercompany",
					"starred",
					"categoryname"
				],
				"in": "query",
				"name": "orderBy",
				"type": "string"
			},
			{
				"description": "filter by min last activity date",
				"format": "date",
				"in": "query",
				"name": "minLastActivityDate",
				"type": "string"
			},
			{
				"description": "filter by max last activity date",
				"format": "date",
				"in": "query",
				"name": "maxLastActivityDate",
				"type": "string"
			},
			{
				"description": "currency symbol for report export",
				"in": "query",
				"name": "currencySymbol",
				"type": "string"
			},
			{ "description": "filter by user id", "in": "query", "name": "userId", "type": "integer" },
			{
				"default": "50",
				"description": "number of items in a page (not used when generating reports)",
				"in": "query",
				"name": "pageSize",
				"type": "integer"
			},
			{
				"default": "1",
				"description": "page number (not used when generating reports)",
				"in": "query",
				"name": "page",
				"type": "integer"
			},
			{
				"description": "order by custom field id when orderBy is equal to customfield",
				"in": "query",
				"name": "orderByCustomFieldId",
				"type": "integer"
			},
			{
				"description": "include companies in the search",
				"in": "query",
				"name": "searchCompanies",
				"type": "boolean"
			},
			{
				"description": "search projects beginning with the search term character only when it contains a single character.",
				"in": "query",
				"name": "searchByLetter",
				"type": "boolean"
			},
			{
				"description": "filter by starred projects only",
				"in": "query",
				"name": "onlyStarredProjects",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "only show projects with explicit membership",
				"in": "query",
				"name": "onlyProjectsWithExplicitMembership",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "return only archived projects",
				"in": "query",
				"name": "onlyArchivedProjects",
				"type": "boolean"
			},
			{
				"description": "match all project tags",
				"in": "query",
				"name": "matchAllProjectTags",
				"type": "boolean"
			},
			{
				"description": "match all excluded project tags",
				"in": "query",
				"name": "matchAllExcludedTags",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "generate a report document",
				"in": "query",
				"name": "isReportDownload",
				"type": "boolean"
			},
			{
				"description": "include project status counts for tasks columns billing events milestones",
				"in": "query",
				"name": "includeStats",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "fetch user-specific data such as isStarred",
				"in": "query",
				"name": "includeProjectUserInfo",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "include custom fields",
				"in": "query",
				"name": "includeCustomFields",
				"type": "boolean"
			},
			{
				"description": "include project related counts",
				"in": "query",
				"name": "includeCounts",
				"type": "boolean"
			},
			{
				"description": "optional to include completed projects when filtering by project statuses \"current,late\".",
				"in": "query",
				"name": "includeCompletedStatus",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "include archived projects",
				"in": "query",
				"name": "includeArchivedProjects",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "hide projects where the logged-in user is just an observer",
				"in": "query",
				"name": "hideObservedProjects",
				"type": "boolean"
			},
			{
				"description": "includes filters when project ids are provided",
				"in": "query",
				"name": "alwaysIncludeFiltering",
				"type": "boolean"
			},
			{
				"description": "filter by projects that contain users associated with the team ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "teamIds",
				"type": "array"
			},
			{
				"description": "select the columns to use in exports.",
				"in": "query",
				"items": { "type": "string" },
				"name": "selectedColumns",
				"type": "array"
			},
			{
				"description": "filter by project tag ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectTagIds",
				"type": "array"
			},
			{
				"description": "filter by project status",
				"in": "query",
				"items": {
					"enum": ["active", "current", "late", "upcoming", "completed", "deleted"],
					"type": "string"
				},
				"name": "projectStatuses",
				"type": "array"
			},
			{
				"description": "filter by project owner ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectOwnerIds",
				"type": "array"
			},
			{
				"description": "filter by project ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectIds",
				"type": "array"
			},
			{
				"description": "filter by project healths\n\n0: not set\n1: bad\n2: ok\n3: good",
				"in": "query",
				"items": { "enum": ["0", "1", "2", "3"], "type": "integer" },
				"name": "projectHealths",
				"type": "array"
			},
			{
				"description": "filter by company ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectCompanyIds",
				"type": "array"
			},
			{
				"description": "filter by project category ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectCategoryIds",
				"type": "array"
			},
			{
				"description": "include (not used when generating reports)",
				"in": "query",
				"items": {
					"enum": [
						"projectOwners",
						"projectUpdates",
						"companies",
						"companies.countries",
						"companies.industries",
						"projectCategories",
						"portfolioCards",
						"portfolioBoards",
						"portfolioColumns",
						"tags",
						"customfields",
						"customfieldProjects",
						"projectBudgets",
						"activities.latest",
						"users",
						"createdBy",
						"updatedBy",
						"completedBy",
						"deletedBy"
					],
					"type": "string"
				},
				"name": "include",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"firstName",
						"lastName",
						"title",
						"email",
						"companyId",
						"company",
						"isAdmin",
						"isClientUser",
						"isServiceAccount",
						"type",
						"deleted",
						"avatarUrl",
						"lengthOfDay",
						"workingHoursId",
						"workingHour",
						"userRate",
						"userCost",
						"canAddProjects"
					],
					"type": "string"
				},
				"name": "fields[users]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name", "color", "count"], "type": "string" },
				"name": "fields[tags]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name"], "type": "string" },
				"name": "fields[projects]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name", "color"], "type": "string" },
				"name": "fields[projectcategories]",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"projectId",
						"text",
						"isActive",
						"health",
						"color",
						"dateCreated",
						"deleted",
						"deletedDate",
						"numLikes",
						"reactions"
					],
					"type": "string"
				},
				"name": "fields[projectUpdates]",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"projectId",
						"type",
						"status",
						"capacityUsed",
						"capacity",
						"originatorBudgetId",
						"isRepeating",
						"repeatPeriod",
						"repeatUnit",
						"repeatsRemaining",
						"sequenceNumber",
						"startDateTime",
						"endDateTime",
						"currencyCode",
						"timelogType",
						"expenseType",
						"defaultRate",
						"notificationIds",
						"createdByUserId",
						"dateCreated",
						"updatedUserId",
						"dateUpdated",
						"completedByUserId",
						"dateCompleted",
						"deletedByUserId",
						"dateDeleted"
					],
					"type": "string"
				},
				"name": "fields[projectBudgets]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name", "color"], "type": "string" },
				"name": "fields[portfolioColumns]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "columnId", "projectId"], "type": "string" },
				"name": "fields[portfolioCards]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name", "color"], "type": "string" },
				"name": "fields[portfolioBoards]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "type": "string" },
				"name": "fields[industries]",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"projectId",
						"entity",
						"name",
						"description",
						"type",
						"options",
						"visibilities",
						"isPrivate",
						"required",
						"createdAt",
						"createdByUserId",
						"updatedAt",
						"updatedByUserId",
						"deleted",
						"deletedAt",
						"deletedByUserId"
					],
					"type": "string"
				},
				"name": "fields[customfields]",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": ["id", "customfieldId", "value", "createdAt", "createdBy"],
					"type": "string"
				},
				"name": "fields[customfieldProjects]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "type": "string" },
				"name": "fields[countries]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name", "logoUploadedToServer", "logoImage"], "type": "string" },
				"name": "fields[companies]",
				"type": "array"
			},
			{
				"description": "exclude by project tag ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "excludeTagIds",
				"type": "array"
			}
		],
		"description": "Returns a list of projects templates",
		"group": "Projects"
	},
	{
		"endpoint": "/projects/api/v3/projects/updates.json",
		"method": "get",
		"parameters": [
			{
				"description": "filter by project status",
				"in": "query",
				"name": "projectStatus",
				"type": "string"
			},
			{
				"default": "asc",
				"description": "order mode",
				"enum": ["asc", "desc"],
				"in": "query",
				"name": "orderMode",
				"type": "string"
			},
			{
				"default": "date",
				"description": "order by",
				"enum": ["date", "color", "health", "project", "user"],
				"in": "query",
				"name": "orderBy",
				"type": "string"
			},
			{
				"description": "filter by creation date",
				"format": "date-time",
				"in": "query",
				"name": "createdAfter",
				"type": "string"
			},
			{
				"description": "filter by project id",
				"in": "query",
				"name": "projectId",
				"type": "integer"
			},
			{
				"default": "50",
				"description": "number of items in a page",
				"in": "query",
				"name": "pageSize",
				"type": "integer"
			},
			{
				"default": "1",
				"description": "page number",
				"in": "query",
				"name": "page",
				"type": "integer"
			},
			{
				"default": "false",
				"description": "include deleted items",
				"in": "query",
				"name": "showDeleted",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "add reactions to the response",
				"in": "query",
				"name": "reactions",
				"type": "boolean"
			},
			{
				"description": "filter by starred projects only",
				"in": "query",
				"name": "onlyStarredProjects",
				"type": "boolean"
			},
			{
				"description": "match all project tags",
				"in": "query",
				"name": "matchAllProjectTags",
				"type": "boolean"
			},
			{
				"description": "include archived projects",
				"in": "query",
				"name": "includeArchivedProjects",
				"type": "boolean"
			},
			{
				"default": "true",
				"description": "parse emojis to unicode",
				"in": "query",
				"name": "emoji",
				"type": "boolean"
			},
			{
				"default": "true",
				"description": "filter by active",
				"in": "query",
				"name": "activeOnly",
				"type": "boolean"
			},
			{
				"description": "filter by project tag ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectTagIds",
				"type": "array"
			},
			{
				"description": "list of project status",
				"in": "query",
				"items": { "type": "string" },
				"name": "projectStatuses",
				"type": "array"
			},
			{
				"description": "filter by project owner ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectOwnerIds",
				"type": "array"
			},
			{
				"description": "filter by project health",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectHealths",
				"type": "array"
			},
			{
				"description": "filter by project health (deprecated, use projectHealths)",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectHealth",
				"type": "array"
			},
			{
				"description": "filter by company ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectCompanyIds",
				"type": "array"
			},
			{
				"description": "filter by project category ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectCategoryIds",
				"type": "array"
			},
			{
				"description": "include",
				"in": "query",
				"items": {
					"enum": ["projects", "createdBy", "deletedBy", "likes.users"],
					"type": "string"
				},
				"name": "include",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"firstName",
						"lastName",
						"title",
						"email",
						"companyId",
						"company",
						"isAdmin",
						"isClientUser",
						"isServiceAccount",
						"type",
						"deleted",
						"avatarUrl",
						"lengthOfDay",
						"workingHoursId",
						"workingHour",
						"userRate",
						"userCost",
						"canAddProjects"
					],
					"type": "string"
				},
				"name": "fields[users]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name"], "type": "string" },
				"name": "fields[projects]",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"projectId",
						"text",
						"isActive",
						"health",
						"color",
						"dateCreated",
						"deleted",
						"deletedDate",
						"numLikes",
						"reactions"
					],
					"type": "string"
				},
				"name": "fields[projectUpdates]",
				"type": "array"
			}
		],
		"description": "Get all project updates",
		"group": "ProjectUpdates"
	},
	{
		"endpoint": "/projects/api/v3/projects/{projectIds}/updates.json",
		"method": "get",
		"parameters": [
			{
				"description": "filter by project status",
				"in": "query",
				"name": "projectStatus",
				"type": "string"
			},
			{
				"default": "asc",
				"description": "order mode",
				"enum": ["asc", "desc"],
				"in": "query",
				"name": "orderMode",
				"type": "string"
			},
			{
				"default": "date",
				"description": "order by",
				"enum": ["date", "color", "health", "project", "user"],
				"in": "query",
				"name": "orderBy",
				"type": "string"
			},
			{
				"description": "filter by creation date",
				"format": "date-time",
				"in": "query",
				"name": "createdAfter",
				"type": "string"
			},
			{ "in": "path", "name": "projectIds", "required": true, "type": "integer" },
			{
				"description": "filter by project id",
				"in": "query",
				"name": "projectId",
				"type": "integer"
			},
			{
				"default": "50",
				"description": "number of items in a page",
				"in": "query",
				"name": "pageSize",
				"type": "integer"
			},
			{
				"default": "1",
				"description": "page number",
				"in": "query",
				"name": "page",
				"type": "integer"
			},
			{
				"default": "false",
				"description": "include deleted items",
				"in": "query",
				"name": "showDeleted",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "add reactions to the response",
				"in": "query",
				"name": "reactions",
				"type": "boolean"
			},
			{
				"description": "filter by starred projects only",
				"in": "query",
				"name": "onlyStarredProjects",
				"type": "boolean"
			},
			{
				"description": "match all project tags",
				"in": "query",
				"name": "matchAllProjectTags",
				"type": "boolean"
			},
			{
				"description": "include archived projects",
				"in": "query",
				"name": "includeArchivedProjects",
				"type": "boolean"
			},
			{
				"default": "true",
				"description": "parse emojis to unicode",
				"in": "query",
				"name": "emoji",
				"type": "boolean"
			},
			{
				"default": "true",
				"description": "filter by active",
				"in": "query",
				"name": "activeOnly",
				"type": "boolean"
			},
			{
				"description": "filter by project tag ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectTagIds",
				"type": "array"
			},
			{
				"description": "list of project status",
				"in": "query",
				"items": { "type": "string" },
				"name": "projectStatuses",
				"type": "array"
			},
			{
				"description": "filter by project owner ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectOwnerIds",
				"type": "array"
			},
			{
				"description": "filter by project health",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectHealths",
				"type": "array"
			},
			{
				"description": "filter by project health (deprecated, use projectHealths)",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectHealth",
				"type": "array"
			},
			{
				"description": "filter by company ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectCompanyIds",
				"type": "array"
			},
			{
				"description": "filter by project category ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectCategoryIds",
				"type": "array"
			},
			{
				"description": "include",
				"in": "query",
				"items": {
					"enum": ["projects", "createdBy", "deletedBy", "likes.users"],
					"type": "string"
				},
				"name": "include",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"firstName",
						"lastName",
						"title",
						"email",
						"companyId",
						"company",
						"isAdmin",
						"isClientUser",
						"isServiceAccount",
						"type",
						"deleted",
						"avatarUrl",
						"lengthOfDay",
						"workingHoursId",
						"workingHour",
						"userRate",
						"userCost",
						"canAddProjects"
					],
					"type": "string"
				},
				"name": "fields[users]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name"], "type": "string" },
				"name": "fields[projects]",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"projectId",
						"text",
						"isActive",
						"health",
						"color",
						"dateCreated",
						"deleted",
						"deletedDate",
						"numLikes",
						"reactions"
					],
					"type": "string"
				},
				"name": "fields[projectUpdates]",
				"type": "array"
			}
		],
		"description": "Get all updates from a specific project",
		"group": "ProjectUpdates"
	},
	{
		"endpoint": "/projects/api/v3/projects/{projectId}.json",
		"method": "get",
		"parameters": [
			{
				"description": "updated after",
				"format": "date-time",
				"in": "query",
				"name": "updatedAfter",
				"type": "string"
			},
			{
				"description": "filter by project name",
				"in": "query",
				"name": "searchTerm",
				"type": "string"
			},
			{
				"default": "project",
				"description": "define the type of the report",
				"enum": ["project", "health"],
				"in": "query",
				"name": "reportType",
				"type": "string"
			},
			{
				"description": "Optional to configure the report dates displayed in a timezone",
				"in": "query",
				"name": "reportTimezone",
				"type": "string"
			},
			{
				"default": "pdf",
				"description": "define the format of the report",
				"enum": ["csv", "html", "pdf", "xls"],
				"in": "query",
				"name": "reportFormat",
				"type": "string"
			},
			{
				"description": "filter by project type",
				"in": "query",
				"name": "projectType",
				"type": "string"
			},
			{
				"default": "asc",
				"description": "order mode",
				"enum": ["asc", "desc"],
				"in": "query",
				"name": "orderMode",
				"type": "string"
			},
			{
				"default": "name",
				"description": "order by",
				"enum": [
					"companyname",
					"datecreated",
					"duedate",
					"lastactivity",
					"name",
					"namecaseinsensitive",
					"ownercompany",
					"starred",
					"categoryname"
				],
				"in": "query",
				"name": "orderBy",
				"type": "string"
			},
			{
				"description": "filter by min last activity date",
				"format": "date",
				"in": "query",
				"name": "minLastActivityDate",
				"type": "string"
			},
			{
				"description": "filter by max last activity date",
				"format": "date",
				"in": "query",
				"name": "maxLastActivityDate",
				"type": "string"
			},
			{
				"description": "currency symbol for report export",
				"in": "query",
				"name": "currencySymbol",
				"type": "string"
			},
			{ "description": "filter by user id", "in": "query", "name": "userId", "type": "integer" },
			{ "in": "path", "name": "projectId", "required": true, "type": "integer" },
			{
				"default": "50",
				"description": "number of items in a page (not used when generating reports)",
				"in": "query",
				"name": "pageSize",
				"type": "integer"
			},
			{
				"default": "1",
				"description": "page number (not used when generating reports)",
				"in": "query",
				"name": "page",
				"type": "integer"
			},
			{
				"description": "order by custom field id when orderBy is equal to customfield",
				"in": "query",
				"name": "orderByCustomFieldId",
				"type": "integer"
			},
			{
				"description": "include companies in the search",
				"in": "query",
				"name": "searchCompanies",
				"type": "boolean"
			},
			{
				"description": "search projects beginning with the search term character only when it contains a single character.",
				"in": "query",
				"name": "searchByLetter",
				"type": "boolean"
			},
			{
				"description": "filter by starred projects only",
				"in": "query",
				"name": "onlyStarredProjects",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "only show projects with explicit membership",
				"in": "query",
				"name": "onlyProjectsWithExplicitMembership",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "return only archived projects",
				"in": "query",
				"name": "onlyArchivedProjects",
				"type": "boolean"
			},
			{
				"description": "match all project tags",
				"in": "query",
				"name": "matchAllProjectTags",
				"type": "boolean"
			},
			{
				"description": "match all excluded project tags",
				"in": "query",
				"name": "matchAllExcludedTags",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "generate a report document",
				"in": "query",
				"name": "isReportDownload",
				"type": "boolean"
			},
			{
				"description": "include project status counts for tasks columns billing events milestones",
				"in": "query",
				"name": "includeStats",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "fetch user-specific data such as isStarred",
				"in": "query",
				"name": "includeProjectUserInfo",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "include custom fields",
				"in": "query",
				"name": "includeCustomFields",
				"type": "boolean"
			},
			{
				"description": "include project related counts",
				"in": "query",
				"name": "includeCounts",
				"type": "boolean"
			},
			{
				"description": "optional to include completed projects when filtering by project statuses \"current,late\".",
				"in": "query",
				"name": "includeCompletedStatus",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "include archived projects",
				"in": "query",
				"name": "includeArchivedProjects",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "hide projects where the logged-in user is just an observer",
				"in": "query",
				"name": "hideObservedProjects",
				"type": "boolean"
			},
			{
				"description": "includes filters when project ids are provided",
				"in": "query",
				"name": "alwaysIncludeFiltering",
				"type": "boolean"
			},
			{
				"description": "filter by projects that contain users associated with the team ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "teamIds",
				"type": "array"
			},
			{
				"description": "select the columns to use in exports.",
				"in": "query",
				"items": { "type": "string" },
				"name": "selectedColumns",
				"type": "array"
			},
			{
				"description": "filter by project tag ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectTagIds",
				"type": "array"
			},
			{
				"description": "filter by project status",
				"in": "query",
				"items": {
					"enum": ["active", "current", "late", "upcoming", "completed", "deleted"],
					"type": "string"
				},
				"name": "projectStatuses",
				"type": "array"
			},
			{
				"description": "filter by project owner ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectOwnerIds",
				"type": "array"
			},
			{
				"description": "filter by project ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectIds",
				"type": "array"
			},
			{
				"description": "filter by project healths\n\n0: not set\n1: bad\n2: ok\n3: good",
				"in": "query",
				"items": { "enum": ["0", "1", "2", "3"], "type": "integer" },
				"name": "projectHealths",
				"type": "array"
			},
			{
				"description": "filter by company ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectCompanyIds",
				"type": "array"
			},
			{
				"description": "filter by project category ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectCategoryIds",
				"type": "array"
			},
			{
				"description": "include (not used when generating reports)",
				"in": "query",
				"items": {
					"enum": [
						"projectOwners",
						"projectUpdates",
						"companies",
						"companies.countries",
						"companies.industries",
						"projectCategories",
						"portfolioCards",
						"portfolioBoards",
						"portfolioColumns",
						"tags",
						"customfields",
						"customfieldProjects",
						"projectBudgets",
						"activities.latest",
						"users",
						"createdBy",
						"updatedBy",
						"completedBy",
						"deletedBy"
					],
					"type": "string"
				},
				"name": "include",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"firstName",
						"lastName",
						"title",
						"email",
						"companyId",
						"company",
						"isAdmin",
						"isClientUser",
						"isServiceAccount",
						"type",
						"deleted",
						"avatarUrl",
						"lengthOfDay",
						"workingHoursId",
						"workingHour",
						"userRate",
						"userCost",
						"canAddProjects"
					],
					"type": "string"
				},
				"name": "fields[users]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name", "color", "count"], "type": "string" },
				"name": "fields[tags]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name"], "type": "string" },
				"name": "fields[projects]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name", "color"], "type": "string" },
				"name": "fields[projectcategories]",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"projectId",
						"text",
						"isActive",
						"health",
						"color",
						"dateCreated",
						"deleted",
						"deletedDate",
						"numLikes",
						"reactions"
					],
					"type": "string"
				},
				"name": "fields[projectUpdates]",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"projectId",
						"type",
						"status",
						"capacityUsed",
						"capacity",
						"originatorBudgetId",
						"isRepeating",
						"repeatPeriod",
						"repeatUnit",
						"repeatsRemaining",
						"sequenceNumber",
						"startDateTime",
						"endDateTime",
						"currencyCode",
						"timelogType",
						"expenseType",
						"defaultRate",
						"notificationIds",
						"createdByUserId",
						"dateCreated",
						"updatedUserId",
						"dateUpdated",
						"completedByUserId",
						"dateCompleted",
						"deletedByUserId",
						"dateDeleted"
					],
					"type": "string"
				},
				"name": "fields[projectBudgets]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name", "color"], "type": "string" },
				"name": "fields[portfolioColumns]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "columnId", "projectId"], "type": "string" },
				"name": "fields[portfolioCards]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name", "color"], "type": "string" },
				"name": "fields[portfolioBoards]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "type": "string" },
				"name": "fields[industries]",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"projectId",
						"entity",
						"name",
						"description",
						"type",
						"options",
						"visibilities",
						"isPrivate",
						"required",
						"createdAt",
						"createdByUserId",
						"updatedAt",
						"updatedByUserId",
						"deleted",
						"deletedAt",
						"deletedByUserId"
					],
					"type": "string"
				},
				"name": "fields[customfields]",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": ["id", "customfieldId", "value", "createdAt", "createdBy"],
					"type": "string"
				},
				"name": "fields[customfieldProjects]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "type": "string" },
				"name": "fields[countries]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name", "logoUploadedToServer", "logoImage"], "type": "string" },
				"name": "fields[companies]",
				"type": "array"
			},
			{
				"description": "exclude by project tag ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "excludeTagIds",
				"type": "array"
			}
		],
		"description": "Returns a project",
		"group": "Projects"
	},
	{
		"endpoint": "/projects/api/v3/projects/{projectId}/activity",
		"method": "delete",
		"parameters": [{ "in": "path", "name": "projectId", "required": true, "type": "integer" }],
		"description": "Deletes a projects activity log.",
		"group": "Activity"
	},
	{
		"endpoint": "/projects/api/v3/projects/{projectId}/featureorder.json",
		"method": "get",
		"parameters": [{ "in": "path", "name": "projectId", "required": true, "type": "integer" }],
		"description": "Returns a project features order to display in tab",
		"group": "Projects"
	},
	{
		"endpoint": "/projects/api/v3/projects/{projectId}/featureorder.json",
		"method": "put",
		"parameters": [
			{
				"in": "body",
				"name": "project.FeatureOrder",
				"required": true,
				"schema": { "$ref": "#/definitions/project.FeatureOrder" }
			},
			{ "in": "path", "name": "projectId", "required": true, "type": "integer" }
		],
		"description": "Sets the the features order to display in tab",
		"group": "Projects"
	},
	{
		"endpoint": "/projects/api/v3/projects/{projectId}/latestactivity",
		"method": "get",
		"parameters": [
			{
				"description": "filter by updated after date",
				"format": "date-time",
				"in": "query",
				"name": "updatedAfter",
				"type": "string"
			},
			{
				"description": "filter by start datetime",
				"format": "date-time",
				"in": "query",
				"name": "startDate",
				"type": "string"
			},
			{
				"description": "sort by (deprecated, use orderBy)",
				"in": "query",
				"name": "sort",
				"type": "string"
			},
			{
				"description": "filter by project status",
				"in": "query",
				"name": "projectStatus",
				"type": "string"
			},
			{
				"description": "order mode",
				"enum": ["asc", "desc"],
				"in": "query",
				"name": "orderMode",
				"type": "string"
			},
			{ "description": "sort by", "in": "query", "name": "orderBy", "type": "string" },
			{
				"description": "filter by end datetime",
				"format": "date-time",
				"in": "query",
				"name": "endDate",
				"type": "string"
			},
			{ "in": "path", "name": "projectId", "required": true, "type": "integer" },
			{
				"description": "filter by project id",
				"in": "query",
				"name": "projectId",
				"type": "integer"
			},
			{
				"default": "50",
				"description": "number of items in a page",
				"in": "query",
				"name": "pageSize",
				"type": "integer"
			},
			{
				"default": "1",
				"description": "page number",
				"in": "query",
				"name": "page",
				"type": "integer"
			},
			{ "description": "activity id offset", "in": "query", "name": "maxId", "type": "integer" },
			{
				"description": "limit results from previous id",
				"in": "query",
				"name": "catchupFromId",
				"type": "integer"
			},
			{
				"default": "false",
				"description": "include deleted items",
				"in": "query",
				"name": "showDeleted",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "filter by starred projects only",
				"in": "query",
				"name": "onlyStarredProjects",
				"type": "boolean"
			},
			{
				"description": "only projects with explicit membership",
				"in": "query",
				"name": "onlyProjectsWithExplicitMembership",
				"type": "boolean"
			},
			{
				"description": "enforce all tag ids must be matched",
				"in": "query",
				"name": "matchAllProjectTags",
				"type": "boolean"
			},
			{
				"description": "include archived projects",
				"in": "query",
				"name": "includeArchivedProjects",
				"type": "boolean"
			},
			{
				"description": "group all activities on comments",
				"in": "query",
				"name": "groupCommentActivityType",
				"type": "boolean"
			},
			{
				"description": "filter by user ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "userIds",
				"type": "array"
			},
			{
				"description": "filter by project tag ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectTagIds",
				"type": "array"
			},
			{
				"description": "list of project status",
				"in": "query",
				"items": { "type": "string" },
				"name": "projectStatuses",
				"type": "array"
			},
			{
				"description": "filter by project owner ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectOwnerIds",
				"type": "array"
			},
			{
				"description": "list of project health",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectHealths",
				"type": "array"
			},
			{
				"description": "filter by company ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectCompanyIds",
				"type": "array"
			},
			{
				"description": "filter by project category ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectCategoryIds",
				"type": "array"
			},
			{
				"description": "include",
				"in": "query",
				"items": { "enum": ["projects", "users", "companies"], "type": "string" },
				"name": "include",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"firstName",
						"lastName",
						"title",
						"email",
						"companyId",
						"company",
						"isAdmin",
						"isClientUser",
						"isServiceAccount",
						"type",
						"deleted",
						"avatarUrl",
						"lengthOfDay",
						"workingHoursId",
						"workingHour",
						"userRate",
						"userCost",
						"canAddProjects"
					],
					"type": "string"
				},
				"name": "fields[users]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name"], "type": "string" },
				"name": "fields[projects]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name", "logoUploadedToServer", "logoImage"], "type": "string" },
				"name": "fields[companies]",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"dateTime",
						"activityType",
						"latestActivityType",
						"itemId",
						"itemLink",
						"itemType",
						"itemDescription",
						"itemExtraDescription",
						"itemExtraLink",
						"itemPublicInfo",
						"forUserId",
						"forUserName",
						"dueDate",
						"isPrivate",
						"lockdownId",
						"projectId",
						"companyId"
					],
					"type": "string"
				},
				"name": "fields[activities]",
				"type": "array"
			},
			{
				"description": "filter by activity types",
				"in": "query",
				"items": {
					"enum": [
						"task",
						"tasklist",
						"project",
						"message",
						"notebook",
						"milestone",
						"like",
						"file",
						"link",
						"billinginvoice",
						"task_comment",
						"milestone_comment",
						"file_comment",
						"link_comment",
						"comment"
					],
					"type": "string"
				},
				"name": "activityTypes",
				"type": "array"
			}
		],
		"description": "List latest activity for a specific project.",
		"group": "Activity"
	},
	{
		"endpoint": "/projects/api/v3/projects/{projectId}/milestones.json",
		"method": "get",
		"parameters": [
			{
				"description": "filter by updated after date (deprecated, use updatedAfter)",
				"format": "date-time",
				"in": "query",
				"name": "updatedAfterDate",
				"type": "string"
			},
			{
				"description": "filter by updated after date",
				"format": "date-time",
				"in": "query",
				"name": "updatedAfter",
				"type": "string"
			},
			{
				"description": "filter by milestone name and description",
				"in": "query",
				"name": "searchTerm",
				"type": "string"
			},
			{
				"default": "agenda",
				"description": "define the type of the report",
				"enum": ["plannedvsactual", "calendar", "agenda"],
				"in": "query",
				"name": "reportType",
				"type": "string"
			},
			{
				"description": "define the format of the report",
				"in": "query",
				"name": "reportFormat",
				"type": "string"
			},
			{
				"description": "filter by project status",
				"in": "query",
				"name": "projectStatus",
				"type": "string"
			},
			{
				"default": "asc",
				"description": "order mode",
				"enum": ["asc", "desc"],
				"in": "query",
				"name": "orderMode",
				"type": "string"
			},
			{
				"default": "date",
				"description": "order by",
				"enum": ["date", "dateonly", "name", "project", "user", "dateCreated", "dateUpdated"],
				"in": "query",
				"name": "orderBy",
				"type": "string"
			},
			{
				"description": "filter by due before date (deprecated, use dueBefore)",
				"format": "date",
				"in": "query",
				"name": "dueBeforeDate",
				"type": "string"
			},
			{
				"description": "filter by due before date",
				"format": "date",
				"in": "query",
				"name": "dueBefore",
				"type": "string"
			},
			{
				"description": "filter by due after date (deprecated, use dueAfter)",
				"format": "date",
				"in": "query",
				"name": "dueAfterDate",
				"type": "string"
			},
			{
				"description": "filter by due after date",
				"format": "date",
				"in": "query",
				"name": "dueAfter",
				"type": "string"
			},
			{ "in": "path", "name": "projectId", "required": true, "type": "integer" },
			{
				"default": "50",
				"description": "number of items in a page",
				"in": "query",
				"name": "pageSize",
				"type": "integer"
			},
			{
				"default": "1",
				"description": "page number",
				"in": "query",
				"name": "page",
				"type": "integer"
			},
			{
				"default": "true",
				"description": "show private milestones",
				"in": "query",
				"name": "showPrivate",
				"type": "boolean"
			},
			{
				"description": "show percentages completed",
				"in": "query",
				"name": "showPercentageCompleted",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "include deleted items",
				"in": "query",
				"name": "showDeleted",
				"type": "boolean"
			},
			{
				"description": "show attached tasklists",
				"in": "query",
				"name": "showAttachedTasklists",
				"type": "boolean"
			},
			{
				"description": "include companies and teams in the search term",
				"in": "query",
				"name": "searchCompaniesTeams",
				"type": "boolean"
			},
			{
				"description": "include assignees in the search",
				"in": "query",
				"name": "searchAssignees",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "include progress of each milestone",
				"in": "query",
				"name": "progress",
				"type": "boolean"
			},
			{
				"description": "filter by starred projects only",
				"in": "query",
				"name": "onlyStarredProjects",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "filter by projects that the logged-in user is related",
				"in": "query",
				"name": "onlyMyProjects",
				"type": "boolean"
			},
			{
				"description": "only include milestones from projects where the user is strictly a project admin.\nsite admins have visibility to all projects.",
				"in": "query",
				"name": "onlyAdminProjects",
				"type": "boolean"
			},
			{
				"description": "match all milestone tags",
				"in": "query",
				"name": "matchAllTags",
				"type": "boolean"
			},
			{
				"description": "match all project tags",
				"in": "query",
				"name": "matchAllProjectTags",
				"type": "boolean"
			},
			{
				"description": "generate a report document",
				"in": "query",
				"name": "isReportDownload",
				"type": "boolean"
			},
			{
				"description": "include milestones latest update action",
				"in": "query",
				"name": "includeUpdate",
				"type": "boolean"
			},
			{
				"default": "true",
				"description": "include today when milestone status is upcoming",
				"in": "query",
				"name": "includeToday",
				"type": "boolean"
			},
			{
				"default": "true",
				"description": "include team users to the responsible party ids",
				"in": "query",
				"name": "includeTeamUserIds",
				"type": "boolean"
			},
			{
				"default": "true",
				"description": "include tags in the reports",
				"in": "query",
				"name": "includeTags",
				"type": "boolean"
			},
			{
				"description": "include percentage of tasks completed for all linked tasklists",
				"in": "query",
				"name": "includeProgress",
				"type": "boolean"
			},
			{
				"description": "optional to include completed milestones",
				"in": "query",
				"name": "includeCompleted",
				"type": "boolean"
			},
			{
				"default": "true",
				"description": "include company users to the responsible party ids",
				"in": "query",
				"name": "includeCompanyUserIds",
				"type": "boolean"
			},
			{
				"description": "include teams related to the responsible user ids",
				"in": "query",
				"name": "includeAssigneeTeams",
				"type": "boolean"
			},
			{
				"description": "include companies related to the responsible user ids",
				"in": "query",
				"name": "includeAssigneeCompanies",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "include archived projects",
				"in": "query",
				"name": "includeArchivedProjects",
				"type": "boolean"
			},
			{
				"default": "true",
				"description": "convert emoji alias to unicode",
				"in": "query",
				"name": "emoji",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "count unread comments",
				"in": "query",
				"name": "countUnreadComments",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "enables the calendar style layout",
				"in": "query",
				"name": "calendar",
				"type": "boolean"
			},
			{
				"description": "filter by milestone tag ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "tagIds",
				"type": "array"
			},
			{
				"description": "filter by list of milestone status",
				"in": "query",
				"items": {
					"enum": [
						"all",
						"new",
						"reopened",
						"completed",
						"deleted",
						"pending",
						"incomplete",
						"late",
						"today",
						"upcoming"
					],
					"type": "string"
				},
				"name": "status",
				"type": "array"
			},
			{
				"description": "customise the report by selecting columns to be displayed.",
				"in": "query",
				"items": { "type": "string" },
				"name": "selectedColumns",
				"type": "array"
			},
			{
				"description": "filter by project tag ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectTagIds",
				"type": "array"
			},
			{
				"description": "filter by list of project status",
				"in": "query",
				"items": { "type": "string" },
				"name": "projectStatuses",
				"type": "array"
			},
			{
				"description": "filter by project owner ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectOwnerIds",
				"type": "array"
			},
			{
				"description": "filter by project ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectIds",
				"type": "array"
			},
			{
				"description": "filter by list of project health",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectHealths",
				"type": "array"
			},
			{
				"description": "filter by list of project health (deprecated, use projectHealths)",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectHealth",
				"type": "array"
			},
			{
				"description": "filter by company ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectCompanyIds",
				"type": "array"
			},
			{
				"description": "filter by project category ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectCategoryIds",
				"type": "array"
			},
			{
				"description": "include",
				"in": "query",
				"items": {
					"enum": [
						"projects",
						"projects.companies",
						"projects.categories",
						"users",
						"completedBy",
						"createdBy",
						"deletedBy",
						"updatedBy",
						"commentFollowers",
						"changeFollowers",
						"tags",
						"tasklists",
						"tasklisttaskstats"
					],
					"type": "string"
				},
				"name": "include",
				"type": "array"
			},
			{
				"description": "filter by ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "ids",
				"type": "array"
			},
			{
				"description": "filter by followers' ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "followerIds",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"firstName",
						"lastName",
						"title",
						"email",
						"companyId",
						"company",
						"isAdmin",
						"isClientUser",
						"isServiceAccount",
						"type",
						"deleted",
						"avatarUrl",
						"lengthOfDay",
						"workingHoursId",
						"workingHour",
						"userRate",
						"userCost",
						"canAddProjects"
					],
					"type": "string"
				},
				"name": "fields[users]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name", "projectId", "milestoneId"], "type": "string" },
				"name": "fields[tasklists]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name", "color", "count"], "type": "string" },
				"name": "fields[tags]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name"], "type": "string" },
				"name": "fields[projects]",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"name",
						"description",
						"deadline",
						"completed",
						"projectId",
						"createdOn",
						"lastChangedOn",
						"creatorUserId",
						"reminder",
						"private",
						"lockdownId",
						"status",
						"completedOn",
						"completerId",
						"percentageComplete"
					],
					"type": "string"
				},
				"name": "fields[milestones]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name", "logoUploadedToServer", "logoImage"], "type": "string" },
				"name": "fields[companies]",
				"type": "array"
			},
			{
				"description": "filter by creators' ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "creatorIds",
				"type": "array"
			},
			{
				"description": "filter by assigned user ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "assignedToUserIds",
				"type": "array"
			},
			{
				"description": "filter by assigned team ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "assignedToTeamIds",
				"type": "array"
			},
			{
				"description": "filter by assigned company ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "assignedToCompanyIds",
				"type": "array"
			}
		],
		"description": "Get milestones in a project",
		"group": "Milestones"
	},
	{
		"endpoint": "/projects/api/v3/projects/{projectId}/notebooks.json",
		"method": "post",
		"parameters": [
			{
				"in": "body",
				"name": "notebook.Request",
				"required": true,
				"schema": { "$ref": "#/definitions/notebook.Request" }
			},
			{ "in": "path", "name": "projectId", "required": true, "type": "integer" },
			{
				"default": "true",
				"description": "parse emojis to unicode",
				"in": "query",
				"name": "getEmoji",
				"type": "boolean"
			},
			{
				"description": "include",
				"in": "query",
				"items": {
					"enum": ["projects", "tags", "users", "notebookCategories", "companies", "teams"],
					"type": "string"
				},
				"name": "include",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"firstName",
						"lastName",
						"title",
						"email",
						"companyId",
						"company",
						"isAdmin",
						"isClientUser",
						"isServiceAccount",
						"type",
						"deleted",
						"avatarUrl",
						"lengthOfDay",
						"workingHoursId",
						"workingHour",
						"userRate",
						"userCost",
						"canAddProjects"
					],
					"type": "string"
				},
				"name": "fields[users]",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": ["id", "name", "teamLogo", "teamLogoIcon", "teamLogoColor"],
					"type": "string"
				},
				"name": "fields[teams]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name", "color", "count"], "type": "string" },
				"name": "fields[tags]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name"], "type": "string" },
				"name": "fields[projects]",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"name",
						"description",
						"contents",
						"type",
						"isPrivate",
						"locked",
						"lockdownId",
						"secureContent",
						"projectId",
						"createdByUserID",
						"updatedByUserID",
						"deletedByUserID",
						"dateUpdated",
						"dateCreated",
						"dateDeleted",
						"deleted",
						"categoryId",
						"notebookVersionID",
						"notebookVersionCreatedDateTime",
						"notebookVersionUpdatedDateTime",
						"latestVersionNo",
						"commentsCount",
						"readCommentsCount",
						"contentHTML",
						"privacy",
						"commentFollowers",
						"changeFollowers",
						"projectNotifyCommentIncludeCreator",
						"tagIds"
					],
					"type": "string"
				},
				"name": "fields[notebooks]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "type": "string" },
				"name": "fields[notebookCategories]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name", "logoUploadedToServer", "logoImage"], "type": "string" },
				"name": "fields[companies]",
				"type": "array"
			}
		],
		"description": "Create a new notebook.",
		"group": "Notebooks"
	},
	{
		"endpoint": "/projects/api/v3/projects/{projectId}/people.json",
		"method": "get",
		"parameters": [
			{
				"description": "user type",
				"enum": ["account", "collaborator", "contact"],
				"in": "query",
				"name": "userType",
				"type": "string"
			},
			{
				"description": "date time",
				"format": "date-time",
				"in": "query",
				"name": "updatedAfter",
				"type": "string"
			},
			{
				"description": "filter by comment content",
				"in": "query",
				"name": "searchTerm",
				"type": "string"
			},
			{
				"default": "asc",
				"description": "order mode",
				"enum": ["asc", "desc"],
				"in": "query",
				"name": "orderMode",
				"type": "string"
			},
			{
				"default": "name",
				"description": "order by",
				"enum": ["name", "namecaseinsensitive", "company"],
				"in": "query",
				"name": "orderBy",
				"type": "string"
			},
			{ "format": "date-time", "in": "query", "name": "lastLoginAfter", "type": "string" },
			{ "in": "path", "name": "projectId", "required": true, "type": "integer" },
			{
				"default": "50",
				"description": "number of items in a page (not used when generating reports)",
				"in": "query",
				"name": "pageSize",
				"type": "integer"
			},
			{
				"default": "1",
				"description": "page number (not used when generating reports)",
				"in": "query",
				"name": "page",
				"type": "integer"
			},
			{
				"default": "false",
				"description": "include deleted items",
				"in": "query",
				"name": "showDeleted",
				"type": "boolean"
			},
			{ "default": "false", "in": "query", "name": "onlySiteOwner", "type": "boolean" },
			{
				"default": "false",
				"description": "return people only from the owner company. This will replace any provided\ncompany ID.",
				"in": "query",
				"name": "onlyOwnerCompany",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "include service accounts",
				"in": "query",
				"name": "includeServiceAccounts",
				"type": "boolean"
			},
			{
				"default": "true",
				"description": "include project observers",
				"in": "query",
				"name": "includeObservers",
				"type": "boolean"
			},
			{
				"default": "true",
				"description": "exclude collaborators types, returning only account and contact.",
				"in": "query",
				"name": "includeCollaborators",
				"type": "boolean"
			},
			{
				"default": "true",
				"description": "include clients",
				"in": "query",
				"name": "includeClients",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "exclude contact types, returning only account and collaborator.",
				"in": "query",
				"name": "excludeContacts",
				"type": "boolean"
			},
			{
				"description": "team ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "teamIds",
				"type": "array"
			},
			{
				"description": "filter by project ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectIds",
				"type": "array"
			},
			{
				"description": "include (not used when generating reports)",
				"in": "query",
				"items": { "enum": ["companies", "permissions"], "type": "string" },
				"name": "include",
				"type": "array"
			},
			{
				"description": "filter by user ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "ids",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": ["id", "name", "teamLogo", "teamLogoIcon", "teamLogoColor"],
					"type": "string"
				},
				"name": "fields[teams]",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"firstName",
						"lastName",
						"title",
						"email",
						"companyId",
						"company",
						"isAdmin",
						"isClientUser",
						"isServiceAccount",
						"type",
						"deleted",
						"avatarUrl",
						"lengthOfDay",
						"workingHoursId",
						"workingHour",
						"userRate",
						"userCost",
						"canAddProjects"
					],
					"type": "string"
				},
				"name": "fields[people]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name", "logoUploadedToServer", "logoImage"], "type": "string" },
				"name": "fields[companies]",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"viewMessagesAndFiles",
						"viewTasksAndMilestones",
						"viewTime",
						"viewNotebooks",
						"viewRiskRegister",
						"viewEstimatedTime",
						"viewInvoices",
						"addTasks",
						"addRisks",
						"manageCustomFields",
						"addExpenses",
						"editAllTasks",
						"addMilestones",
						"addTaskLists",
						"addMessages",
						"addFiles",
						"addTime",
						"addNotebooks",
						"viewLinks",
						"addLinks",
						"canViewForms",
						"addForms",
						"viewAllTimeLogs",
						"setPrivacy",
						"projectAdministrator",
						"viewProjectUpdate",
						"addProjectUpdate",
						"canViewProjectMembers",
						"canViewProjectBudget",
						"canManageProjectBudget",
						"canViewRates",
						"canManageRates",
						"canViewSchedule",
						"canManageSchedule",
						"receiveEmailNotifications",
						"isObserving",
						"isArchived",
						"active",
						"canAccess",
						"inOwnerCompany",
						"canManagePeople",
						"canViewProjectTemplates",
						"canManageProjectTemplates"
					],
					"type": "string"
				},
				"name": "fields[ProjectPermissions]",
				"type": "array"
			},
			{
				"description": "exclude people assigned to certain project id",
				"in": "query",
				"items": { "type": "integer" },
				"name": "excludeProjectIds",
				"type": "array"
			},
			{
				"description": "company ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "companyIds",
				"type": "array"
			}
		],
		"description": "Returns a list of people on a project",
		"group": "People"
	},
	{
		"endpoint": "/projects/api/v3/projects/{projectId}/people.json",
		"method": "put",
		"parameters": [
			{
				"in": "body",
				"name": "people.UsersPayload",
				"required": true,
				"schema": { "$ref": "#/definitions/people.UsersPayload" }
			},
			{ "in": "path", "name": "projectId", "required": true, "type": "integer" }
		],
		"description": "Add people to a project",
		"group": "People"
	},
	{
		"endpoint": "/projects/api/v3/projects/{projectId}/people/{personId}.json",
		"method": "get",
		"parameters": [
			{
				"description": "user type",
				"enum": ["account", "collaborator", "contact"],
				"in": "query",
				"name": "userType",
				"type": "string"
			},
			{
				"description": "date time",
				"format": "date-time",
				"in": "query",
				"name": "updatedAfter",
				"type": "string"
			},
			{
				"description": "filter by comment content",
				"in": "query",
				"name": "searchTerm",
				"type": "string"
			},
			{
				"default": "asc",
				"description": "order mode",
				"enum": ["asc", "desc"],
				"in": "query",
				"name": "orderMode",
				"type": "string"
			},
			{
				"default": "name",
				"description": "order by",
				"enum": ["name", "namecaseinsensitive", "company"],
				"in": "query",
				"name": "orderBy",
				"type": "string"
			},
			{ "format": "date-time", "in": "query", "name": "lastLoginAfter", "type": "string" },
			{ "in": "path", "name": "projectId", "required": true, "type": "integer" },
			{ "in": "path", "name": "personId", "required": true, "type": "integer" },
			{
				"default": "50",
				"description": "number of items in a page (not used when generating reports)",
				"in": "query",
				"name": "pageSize",
				"type": "integer"
			},
			{
				"default": "1",
				"description": "page number (not used when generating reports)",
				"in": "query",
				"name": "page",
				"type": "integer"
			},
			{
				"default": "false",
				"description": "include deleted items",
				"in": "query",
				"name": "showDeleted",
				"type": "boolean"
			},
			{ "default": "false", "in": "query", "name": "onlySiteOwner", "type": "boolean" },
			{
				"default": "false",
				"description": "return people only from the owner company. This will replace any provided\ncompany ID.",
				"in": "query",
				"name": "onlyOwnerCompany",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "include service accounts",
				"in": "query",
				"name": "includeServiceAccounts",
				"type": "boolean"
			},
			{
				"default": "true",
				"description": "exclude collaborators types, returning only account and contact.",
				"in": "query",
				"name": "includeCollaborators",
				"type": "boolean"
			},
			{
				"default": "true",
				"description": "include clients",
				"in": "query",
				"name": "includeClients",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "exclude contact types, returning only account and collaborator.",
				"in": "query",
				"name": "excludeContacts",
				"type": "boolean"
			},
			{
				"description": "team ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "teamIds",
				"type": "array"
			},
			{
				"description": "filter by project ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectIds",
				"type": "array"
			},
			{
				"description": "include (not used when generating reports)",
				"in": "query",
				"items": { "enum": ["companies"], "type": "string" },
				"name": "include",
				"type": "array"
			},
			{
				"description": "filter by user ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "ids",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": ["id", "name", "teamLogo", "teamLogoIcon", "teamLogoColor"],
					"type": "string"
				},
				"name": "fields[teams]",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"firstName",
						"lastName",
						"title",
						"email",
						"companyId",
						"company",
						"isAdmin",
						"isClientUser",
						"isServiceAccount",
						"type",
						"deleted",
						"avatarUrl",
						"lengthOfDay",
						"workingHoursId",
						"workingHour",
						"userRate",
						"userCost",
						"canAddProjects"
					],
					"type": "string"
				},
				"name": "fields[people]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name", "logoUploadedToServer", "logoImage"], "type": "string" },
				"name": "fields[companies]",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"viewMessagesAndFiles",
						"viewTasksAndMilestones",
						"viewTime",
						"viewNotebooks",
						"viewRiskRegister",
						"viewEstimatedTime",
						"viewInvoices",
						"addTasks",
						"addRisks",
						"manageCustomFields",
						"addExpenses",
						"editAllTasks",
						"addMilestones",
						"addTaskLists",
						"addMessages",
						"addFiles",
						"addTime",
						"addNotebooks",
						"viewLinks",
						"addLinks",
						"canViewForms",
						"addForms",
						"viewAllTimeLogs",
						"setPrivacy",
						"projectAdministrator",
						"viewProjectUpdate",
						"addProjectUpdate",
						"canViewProjectMembers",
						"canViewProjectBudget",
						"canManageProjectBudget",
						"canViewRates",
						"canManageRates",
						"canViewSchedule",
						"canManageSchedule",
						"receiveEmailNotifications",
						"isObserving",
						"isArchived",
						"active",
						"canAccess",
						"inOwnerCompany",
						"canManagePeople",
						"canViewProjectTemplates",
						"canManageProjectTemplates"
					],
					"type": "string"
				},
				"name": "fields[ProjectPermissions]",
				"type": "array"
			},
			{
				"description": "exclude people assigned to certain project id",
				"in": "query",
				"items": { "type": "integer" },
				"name": "excludeProjectIds",
				"type": "array"
			},
			{
				"description": "company ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "companyIds",
				"type": "array"
			}
		],
		"description": "Returns a person on a project",
		"group": "Person"
	},
	{
		"endpoint": "/projects/api/v3/projects/{projectId}/risks",
		"method": "get",
		"parameters": [
			{
				"description": "filter by risks updated after specified date (deprecated, use updatedAfter)",
				"format": "date-time",
				"in": "query",
				"name": "updatedAfterDate",
				"type": "string"
			},
			{
				"description": "filter by risks updated after specified date",
				"format": "date-time",
				"in": "query",
				"name": "updatedAfter",
				"type": "string"
			},
			{
				"description": "sort order (deprecated, use orderMode)",
				"enum": ["asc", "desc"],
				"in": "query",
				"name": "sortOrder",
				"type": "string"
			},
			{
				"description": "sort by (deprecated, use orderBy)",
				"enum": ["datecreated", "source", "probability", "impact", "result", "project"],
				"in": "query",
				"name": "sort",
				"type": "string"
			},
			{ "description": "search term", "in": "query", "name": "searchTerm", "type": "string" },
			{
				"default": "pdf",
				"description": "define the format of the report",
				"in": "query",
				"name": "reportFormat",
				"type": "string"
			},
			{
				"description": "sort order",
				"enum": ["asc", "desc"],
				"in": "query",
				"name": "orderMode",
				"type": "string"
			},
			{
				"description": "sort by",
				"enum": ["datecreated", "source", "probability", "impact", "result", "project"],
				"in": "query",
				"name": "orderBy",
				"type": "string"
			},
			{ "in": "path", "name": "projectId", "required": true, "type": "integer" },
			{
				"description": "filter by probability",
				"in": "query",
				"name": "probabilityTo",
				"type": "integer"
			},
			{
				"description": "filter by probability",
				"in": "query",
				"name": "probabilityFrom",
				"type": "integer"
			},
			{
				"default": "50",
				"description": "number of items in a page",
				"in": "query",
				"name": "pageSize",
				"type": "integer"
			},
			{
				"default": "1",
				"description": "page number",
				"in": "query",
				"name": "page",
				"type": "integer"
			},
			{ "description": "filter by impact", "in": "query", "name": "impactTo", "type": "integer" },
			{ "description": "filter by impact", "in": "query", "name": "impactFrom", "type": "integer" },
			{
				"default": "false",
				"description": "include deleted items",
				"in": "query",
				"name": "showDeleted",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "filter by starred projects only",
				"in": "query",
				"name": "onlyStarredProjects",
				"type": "boolean"
			},
			{
				"description": "enforce all tag ids must be matched",
				"in": "query",
				"name": "matchAllProjectTags",
				"type": "boolean"
			},
			{
				"description": "generate a report document",
				"in": "query",
				"name": "isReportDownload",
				"type": "boolean"
			},
			{
				"description": "include archived projects",
				"in": "query",
				"name": "includeArchivedProjects",
				"type": "boolean"
			},
			{
				"description": "filter by risks that impact schedule",
				"in": "query",
				"name": "impactSchedule",
				"type": "boolean"
			},
			{
				"description": "filter by risks that impact performance",
				"in": "query",
				"name": "impactPerformance",
				"type": "boolean"
			},
			{
				"description": "filter by risks that impact cost",
				"in": "query",
				"name": "impactCost",
				"type": "boolean"
			},
			{
				"description": "filter by risk statuses",
				"in": "query",
				"items": { "enum": ["new", "pending", "closed"], "type": "string" },
				"name": "statuses",
				"type": "array"
			},
			{
				"description": "filter by project tag ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectTagIds",
				"type": "array"
			},
			{
				"description": "list of project statuses",
				"in": "query",
				"items": { "type": "string" },
				"name": "projectStatuses",
				"type": "array"
			},
			{
				"description": "filter by project owner ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectOwnerIds",
				"type": "array"
			},
			{
				"description": "filter by project ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectIds",
				"type": "array"
			},
			{
				"description": "list of project health",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectHealths",
				"type": "array"
			},
			{
				"description": "filter by company ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectCompanyIds",
				"type": "array"
			},
			{
				"description": "filter by project category ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectCategoryIds",
				"type": "array"
			},
			{
				"description": "include",
				"in": "query",
				"items": { "enum": ["projects", "users", "projects.companies"], "type": "string" },
				"name": "include",
				"type": "array"
			},
			{
				"description": "filter by specific ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "ids",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"firstName",
						"lastName",
						"title",
						"email",
						"companyId",
						"company",
						"isAdmin",
						"isClientUser",
						"isServiceAccount",
						"type",
						"deleted",
						"avatarUrl",
						"lengthOfDay",
						"workingHoursId",
						"workingHour",
						"userRate",
						"userCost",
						"canAddProjects"
					],
					"type": "string"
				},
				"name": "fields[users]",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"source",
						"probability",
						"probabilityValue",
						"impact",
						"impactValue",
						"impactCost",
						"impactSchedule",
						"impactPerformance",
						"createdOn",
						"createdByUserId",
						"lastChangedOn",
						"lastChangedByUserId",
						"result",
						"mitigationPlan",
						"stats",
						"projectId",
						"deleted",
						"canEdit"
					],
					"type": "string"
				},
				"name": "fields[risks]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name"], "type": "string" },
				"name": "fields[projects]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name", "logoUploadedToServer", "logoImage"], "type": "string" },
				"name": "fields[companies]",
				"type": "array"
			}
		],
		"description": "Get risks for a specific project",
		"group": "Risks"
	},
	{
		"endpoint": "/projects/api/v3/projects/{projectId}/risks/copy",
		"method": "put",
		"parameters": [{ "in": "path", "name": "projectId", "required": true, "type": "integer" }],
		"description": "Copies project risks",
		"group": "Risks"
	},
	{
		"endpoint": "/projects/api/v3/projects/{projectId}/summary.json",
		"method": "get",
		"parameters": [
			{
				"description": "used to limit the since counters to a specific period",
				"enum": ["now", "timeRange"],
				"in": "query",
				"name": "until",
				"type": "string"
			},
			{
				"description": "filter by start datetime",
				"format": "date-time",
				"in": "query",
				"name": "timeRangeStart",
				"type": "string"
			},
			{
				"description": "filter by end datetime",
				"format": "date-time",
				"in": "query",
				"name": "timeRangeEnd",
				"type": "string"
			},
			{
				"description": "filter by time range. It will be ignored if timeRangeStart and timeRangeEnd\nwere informed.",
				"enum": [
					"yesterday",
					"today",
					"thisweek",
					"lastweek",
					"thismonth",
					"lastmonth",
					"last3months",
					"last6months"
				],
				"in": "query",
				"name": "timeRange",
				"type": "string"
			},
			{ "in": "path", "name": "projectId", "required": true, "type": "integer" },
			{
				"default": "7",
				"description": "number of days remaining to event's start",
				"in": "query",
				"name": "eventsDaysAhead",
				"type": "integer"
			},
			{
				"description": "enforce today is considered as start date for today's tasks",
				"in": "query",
				"name": "useStartDatesForTodaysTasks",
				"type": "boolean"
			},
			{
				"description": "filter by my unread messages only",
				"in": "query",
				"name": "unreadMessagesMineOnly",
				"type": "boolean"
			},
			{
				"description": "filter by my unread comments only",
				"in": "query",
				"name": "unreadCommentsMineOnly",
				"type": "boolean"
			},
			{
				"description": "filter by starred projects only",
				"in": "query",
				"name": "onlyStarredProjects",
				"type": "boolean"
			},
			{
				"description": "filter only project events",
				"in": "query",
				"name": "onlyProjectEvents",
				"type": "boolean"
			},
			{
				"description": "enforce all tag ids must be matched",
				"in": "query",
				"name": "matchAllProjectTags",
				"type": "boolean"
			},
			{
				"description": "include teams related to the taskAssigneeUserIds",
				"in": "query",
				"name": "includeAssigneeTeams",
				"type": "boolean"
			},
			{
				"description": "include archived projects",
				"in": "query",
				"name": "includeArchivedProjects",
				"type": "boolean"
			},
			{
				"description": "count only events that the users are attending",
				"in": "query",
				"name": "eventsAttendingOnly",
				"type": "boolean"
			},
			{
				"description": "the since section will only use taskAssigneeUserIds if this flag is true\n(keeps backward compatibility)",
				"in": "query",
				"name": "applyTaskAssigneeUsersToSince",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "when enabled unread counters will respect the time range period.",
				"in": "query",
				"name": "applySinceOnUnread",
				"type": "boolean"
			},
			{
				"description": "filter by user ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "userIds",
				"type": "array"
			},
			{
				"description": "filter by user ids who time logged",
				"in": "query",
				"items": { "type": "integer" },
				"name": "timeLoggedByUserIds",
				"type": "array"
			},
			{
				"description": "filter by user ids with tasks assigned",
				"in": "query",
				"items": { "type": "integer" },
				"name": "taskAssigneeUserIds",
				"type": "array"
			},
			{
				"description": "filter by project tag ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectTagIds",
				"type": "array"
			},
			{
				"description": "project statuses",
				"in": "query",
				"items": {
					"enum": ["active", "current", "late", "upcoming", "completed", "deleted"],
					"type": "string"
				},
				"name": "projectStatuses",
				"type": "array"
			},
			{
				"description": "filter by project owner ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectOwnerIds",
				"type": "array"
			},
			{
				"description": "filter by project ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectIds",
				"type": "array"
			},
			{
				"description": "project healths\n\n0: not set\n1: bad\n2: ok\n3: good",
				"in": "query",
				"items": { "enum": ["0", "1", "2", "3"], "type": "integer" },
				"name": "projectHealths",
				"type": "array"
			},
			{
				"description": "filter by company ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectCompanyIds",
				"type": "array"
			},
			{
				"description": "filter by project category ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectCategoryIds",
				"type": "array"
			},
			{
				"description": "filter by user ids with milestones assigned",
				"in": "query",
				"items": { "type": "integer" },
				"name": "milestoneAssigneeUserIds",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["comments", "messages"], "type": "string" },
				"name": "fields[unread]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["mine", "all"], "type": "string" },
				"name": "fields[time]",
				"type": "array"
			},
			{
				"description": "sparse fields",
				"in": "query",
				"items": { "enum": ["everyone", "mine"], "type": "string" },
				"name": "fields[tasks]",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": ["tasksComplete", "tasksCreated", "events", "dateTime"],
					"type": "string"
				},
				"name": "fields[since]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["total", "open", "pending", "closed"], "type": "string" },
				"name": "fields[risks]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["everyone", "mine"], "type": "string" },
				"name": "fields[milestones]",
				"type": "array"
			},
			{
				"description": "0: not set\n1: bad\n2: ok\n3: good",
				"in": "query",
				"items": { "enum": ["0", "1", "2", "3"], "type": "string" },
				"name": "fields[health]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["today", "upcoming"], "type": "string" },
				"name": "fields[events]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["count", "data"], "type": "string" },
				"name": "fields[columns]",
				"type": "array"
			},
			{
				"description": "filter by user ids with tasks or milestones assigned",
				"in": "query",
				"items": { "type": "integer" },
				"name": "assigneeUserIds",
				"type": "array"
			}
		],
		"description": "Get project summary dashboard",
		"group": "Summary"
	},
	{
		"endpoint": "/projects/api/v3/projects/{projectId}/tasklists",
		"method": "get",
		"parameters": [
			{
				"description": "filter by updated after date",
				"format": "date-time",
				"in": "query",
				"name": "updatedAfter",
				"type": "string"
			},
			{
				"description": "filter by search term",
				"in": "query",
				"name": "searchTerm",
				"type": "string"
			},
			{
				"description": "filter by project type",
				"in": "query",
				"name": "projectType",
				"type": "string"
			},
			{
				"default": "asc",
				"description": "order mode",
				"enum": ["asc", "desc"],
				"in": "query",
				"name": "orderMode",
				"type": "string"
			},
			{
				"default": "displayorder",
				"description": "order by",
				"enum": ["displayorder", "name", "status", "createdat", "updatedat", "project"],
				"in": "query",
				"name": "orderBy",
				"type": "string"
			},
			{ "in": "path", "name": "projectId", "required": true, "type": "integer" },
			{
				"default": "nil",
				"description": "filter the task list budget by its parent project budget id, if none\nis provided it weill default to the current active budget.",
				"in": "query",
				"name": "projectBudgetId",
				"type": "integer"
			},
			{
				"default": "50",
				"description": "number of items in a page",
				"in": "query",
				"name": "pageSize",
				"type": "integer"
			},
			{
				"default": "1",
				"description": "page number",
				"in": "query",
				"name": "page",
				"type": "integer"
			},
			{
				"default": "true",
				"description": "include private items",
				"in": "query",
				"name": "showPrivate",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "include deleted items",
				"in": "query",
				"name": "showDeleted",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "this means use the tasklist report endpoint, which has totally different query params",
				"in": "query",
				"name": "isReportDownload",
				"type": "boolean"
			},
			{
				"description": "include archived projects",
				"in": "query",
				"name": "includeArchivedProjects",
				"type": "boolean"
			},
			{
				"description": "filter by project ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectIds",
				"type": "array"
			},
			{
				"description": "include",
				"in": "query",
				"items": {
					"enum": [
						"defaultTasks",
						"createdBy",
						"updatedBy",
						"companies",
						"projects",
						"milestones",
						"defaultCustomfields",
						"defaultCustomfieldTasks",
						"defaultColumns",
						"lockdowns",
						"lockdowns.users",
						"lockdowns.companies",
						"lockdowns.teams",
						"lockdowns.users.companies",
						"lockdowns.companies.users",
						"lockdowns.teams.users"
					],
					"type": "string"
				},
				"name": "include",
				"type": "array"
			},
			{
				"description": "filter by ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "ids",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"firstName",
						"lastName",
						"title",
						"email",
						"companyId",
						"company",
						"isAdmin",
						"isClientUser",
						"isServiceAccount",
						"type",
						"deleted",
						"avatarUrl",
						"lengthOfDay",
						"workingHoursId",
						"workingHour",
						"userRate",
						"userCost",
						"canAddProjects"
					],
					"type": "string"
				},
				"name": "fields[users]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name", "color", "count"], "type": "string" },
				"name": "fields[tags]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name"], "type": "string" },
				"name": "fields[projects]",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"name",
						"description",
						"deadline",
						"completed",
						"projectId",
						"createdOn",
						"lastChangedOn",
						"creatorUserId",
						"reminder",
						"private",
						"lockdownId",
						"status",
						"completedOn",
						"completerId",
						"percentageComplete"
					],
					"type": "string"
				},
				"name": "fields[milestones]",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": ["id", "userID", "updatedAt", "itemType", "itemID", "grantAccessTo"],
					"type": "string"
				},
				"name": "fields[lockdowns]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name", "logoUploadedToServer", "logoImage"], "type": "string" },
				"name": "fields[companies]",
				"type": "array"
			}
		],
		"description": "Get tasklists in a project",
		"group": "TaskLists"
	},
	{
		"endpoint": "/projects/api/v3/projects/{projectId}/tasklists.csv",
		"method": "get",
		"parameters": [
			{
				"default": "anytime",
				"description": "filter by task date",
				"enum": [
					"all",
					"anytime",
					"completed",
					"created",
					"overdue",
					"today",
					"yesterday",
					"started",
					"tomorrow",
					"thisweek",
					"within7",
					"within14",
					"within30",
					"within365",
					"nodate",
					"noduedate",
					"nostartdate",
					"newTaskDefaults",
					"hasDate"
				],
				"in": "query",
				"name": "taskDate",
				"type": "string"
			},
			{
				"description": "filter by start datetime",
				"format": "date-time",
				"in": "query",
				"name": "startDate",
				"type": "string"
			},
			{
				"description": "define the format of the report",
				"in": "query",
				"name": "reportFormat",
				"type": "string"
			},
			{
				"default": "asc",
				"description": "order mode",
				"enum": ["asc", "desc"],
				"in": "query",
				"name": "orderMode",
				"type": "string"
			},
			{
				"default": "manual",
				"description": "order by",
				"enum": [
					"startdate",
					"createdat",
					"priority",
					"project",
					"flattenedtasklist",
					"company",
					"manual",
					"active",
					"completedatdesc",
					"completedat",
					"duestartdate",
					"duestartdatedesc",
					"alldates",
					"alldatesdesc",
					"duedateDESC",
					"tasklistname",
					"tasklistdisplayorder",
					"tasklistid",
					"duedate",
					"updatedat",
					"taskname"
				],
				"in": "query",
				"name": "orderBy",
				"type": "string"
			},
			{
				"description": "filter by end datetime",
				"format": "date-time",
				"in": "query",
				"name": "endDate",
				"type": "string"
			},
			{
				"default": "asc",
				"description": "order mode of the comments",
				"enum": ["asc", "desc"],
				"in": "query",
				"name": "commentsOrderMode",
				"type": "string"
			},
			{
				"description": "filter by task list",
				"in": "query",
				"name": "tasklistId",
				"type": "integer"
			},
			{ "in": "path", "name": "projectId", "required": true, "type": "integer" },
			{ "description": "filter by project", "in": "query", "name": "projectId", "type": "integer" },
			{
				"default": "false",
				"description": "only completed tasks",
				"in": "query",
				"name": "onlyCompletedTasks",
				"type": "boolean"
			},
			{
				"description": "generate a report document",
				"in": "query",
				"name": "isReportDownload",
				"type": "boolean"
			},
			{ "description": "include time", "in": "query", "name": "includeTime", "type": "boolean" },
			{
				"default": "true",
				"description": "include tags",
				"in": "query",
				"name": "includeTags",
				"type": "boolean"
			},
			{
				"default": "true",
				"description": "include private items",
				"in": "query",
				"name": "includePrivateItems",
				"type": "boolean"
			},
			{
				"description": "include late tasks",
				"in": "query",
				"name": "includeLateTasks",
				"type": "boolean"
			},
			{
				"default": "true",
				"description": "include estimated time",
				"in": "query",
				"name": "includeEstimatedTime",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "include custom fields",
				"in": "query",
				"name": "includeCustomFields",
				"type": "boolean"
			},
			{
				"default": "true",
				"description": "include completed tasks",
				"in": "query",
				"name": "includeCompletedTasks",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "include comments",
				"in": "query",
				"name": "includeComments",
				"type": "boolean"
			},
			{
				"description": "include comment avatars",
				"in": "query",
				"name": "includeCommentAvatars",
				"type": "boolean"
			},
			{
				"default": "true",
				"description": "include columns",
				"in": "query",
				"name": "includeColumns",
				"type": "boolean"
			},
			{
				"description": "include anytime tasks",
				"in": "query",
				"name": "includeAnytimeTasks",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "include all comments",
				"in": "query",
				"name": "includeAllComments",
				"type": "boolean"
			},
			{
				"description": "ignore task start dates",
				"in": "query",
				"name": "ignoreStartDates",
				"type": "boolean"
			},
			{
				"description": "group by task lists",
				"in": "query",
				"name": "groupByTasklists",
				"type": "boolean"
			},
			{
				"description": "filter by tag names",
				"in": "query",
				"items": { "type": "string" },
				"name": "tags",
				"type": "array"
			},
			{
				"description": "filter by tag ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "tagIds",
				"type": "array"
			},
			{
				"description": "filter by assigned user ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "assignedToUserIds",
				"type": "array"
			},
			{
				"description": "filter by assigned team ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "assignedToTeamIds",
				"type": "array"
			},
			{
				"description": "filter by assigned company ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "assignedToCompanyIds",
				"type": "array"
			}
		],
		"description": "Generate tasklist report in CSV format",
		"group": "TaskLists"
	},
	{
		"endpoint": "/projects/api/v3/projects/{projectId}/tasklists.html",
		"method": "get",
		"parameters": [
			{
				"default": "anytime",
				"description": "filter by task date",
				"enum": [
					"all",
					"anytime",
					"completed",
					"created",
					"overdue",
					"today",
					"yesterday",
					"started",
					"tomorrow",
					"thisweek",
					"within7",
					"within14",
					"within30",
					"within365",
					"nodate",
					"noduedate",
					"nostartdate",
					"newTaskDefaults",
					"hasDate"
				],
				"in": "query",
				"name": "taskDate",
				"type": "string"
			},
			{
				"description": "filter by start datetime",
				"format": "date-time",
				"in": "query",
				"name": "startDate",
				"type": "string"
			},
			{
				"description": "define the format of the report",
				"in": "query",
				"name": "reportFormat",
				"type": "string"
			},
			{
				"default": "asc",
				"description": "order mode",
				"enum": ["asc", "desc"],
				"in": "query",
				"name": "orderMode",
				"type": "string"
			},
			{
				"default": "manual",
				"description": "order by",
				"enum": [
					"startdate",
					"createdat",
					"priority",
					"project",
					"flattenedtasklist",
					"company",
					"manual",
					"active",
					"completedatdesc",
					"completedat",
					"duestartdate",
					"duestartdatedesc",
					"alldates",
					"alldatesdesc",
					"duedateDESC",
					"tasklistname",
					"tasklistdisplayorder",
					"tasklistid",
					"duedate",
					"updatedat",
					"taskname"
				],
				"in": "query",
				"name": "orderBy",
				"type": "string"
			},
			{
				"description": "filter by end datetime",
				"format": "date-time",
				"in": "query",
				"name": "endDate",
				"type": "string"
			},
			{
				"default": "asc",
				"description": "order mode of the comments",
				"enum": ["asc", "desc"],
				"in": "query",
				"name": "commentsOrderMode",
				"type": "string"
			},
			{
				"description": "filter by task list",
				"in": "query",
				"name": "tasklistId",
				"type": "integer"
			},
			{ "in": "path", "name": "projectId", "required": true, "type": "integer" },
			{ "description": "filter by project", "in": "query", "name": "projectId", "type": "integer" },
			{
				"default": "false",
				"description": "only completed tasks",
				"in": "query",
				"name": "onlyCompletedTasks",
				"type": "boolean"
			},
			{
				"description": "generate a report document",
				"in": "query",
				"name": "isReportDownload",
				"type": "boolean"
			},
			{ "description": "include time", "in": "query", "name": "includeTime", "type": "boolean" },
			{
				"default": "true",
				"description": "include tags",
				"in": "query",
				"name": "includeTags",
				"type": "boolean"
			},
			{
				"default": "true",
				"description": "include private items",
				"in": "query",
				"name": "includePrivateItems",
				"type": "boolean"
			},
			{
				"description": "include late tasks",
				"in": "query",
				"name": "includeLateTasks",
				"type": "boolean"
			},
			{
				"default": "true",
				"description": "include estimated time",
				"in": "query",
				"name": "includeEstimatedTime",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "include custom fields",
				"in": "query",
				"name": "includeCustomFields",
				"type": "boolean"
			},
			{
				"default": "true",
				"description": "include completed tasks",
				"in": "query",
				"name": "includeCompletedTasks",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "include comments",
				"in": "query",
				"name": "includeComments",
				"type": "boolean"
			},
			{
				"description": "include comment avatars",
				"in": "query",
				"name": "includeCommentAvatars",
				"type": "boolean"
			},
			{
				"default": "true",
				"description": "include columns",
				"in": "query",
				"name": "includeColumns",
				"type": "boolean"
			},
			{
				"description": "include anytime tasks",
				"in": "query",
				"name": "includeAnytimeTasks",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "include all comments",
				"in": "query",
				"name": "includeAllComments",
				"type": "boolean"
			},
			{
				"description": "ignore task start dates",
				"in": "query",
				"name": "ignoreStartDates",
				"type": "boolean"
			},
			{
				"description": "group by task lists",
				"in": "query",
				"name": "groupByTasklists",
				"type": "boolean"
			},
			{
				"description": "filter by tag names",
				"in": "query",
				"items": { "type": "string" },
				"name": "tags",
				"type": "array"
			},
			{
				"description": "filter by tag ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "tagIds",
				"type": "array"
			},
			{
				"description": "filter by assigned user ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "assignedToUserIds",
				"type": "array"
			},
			{
				"description": "filter by assigned team ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "assignedToTeamIds",
				"type": "array"
			},
			{
				"description": "filter by assigned company ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "assignedToCompanyIds",
				"type": "array"
			}
		],
		"description": "Generate tasklist report in HTML format",
		"group": "TaskLists"
	},
	{
		"endpoint": "/projects/api/v3/projects/{projectId}/tasklists.pdf",
		"method": "get",
		"parameters": [
			{
				"default": "anytime",
				"description": "filter by task date",
				"enum": [
					"all",
					"anytime",
					"completed",
					"created",
					"overdue",
					"today",
					"yesterday",
					"started",
					"tomorrow",
					"thisweek",
					"within7",
					"within14",
					"within30",
					"within365",
					"nodate",
					"noduedate",
					"nostartdate",
					"newTaskDefaults",
					"hasDate"
				],
				"in": "query",
				"name": "taskDate",
				"type": "string"
			},
			{
				"description": "filter by start datetime",
				"format": "date-time",
				"in": "query",
				"name": "startDate",
				"type": "string"
			},
			{
				"description": "define the format of the report",
				"in": "query",
				"name": "reportFormat",
				"type": "string"
			},
			{
				"default": "asc",
				"description": "order mode",
				"enum": ["asc", "desc"],
				"in": "query",
				"name": "orderMode",
				"type": "string"
			},
			{
				"default": "manual",
				"description": "order by",
				"enum": [
					"startdate",
					"createdat",
					"priority",
					"project",
					"flattenedtasklist",
					"company",
					"manual",
					"active",
					"completedatdesc",
					"completedat",
					"duestartdate",
					"duestartdatedesc",
					"alldates",
					"alldatesdesc",
					"duedateDESC",
					"tasklistname",
					"tasklistdisplayorder",
					"tasklistid",
					"duedate",
					"updatedat",
					"taskname"
				],
				"in": "query",
				"name": "orderBy",
				"type": "string"
			},
			{
				"description": "filter by end datetime",
				"format": "date-time",
				"in": "query",
				"name": "endDate",
				"type": "string"
			},
			{
				"default": "asc",
				"description": "order mode of the comments",
				"enum": ["asc", "desc"],
				"in": "query",
				"name": "commentsOrderMode",
				"type": "string"
			},
			{
				"description": "filter by task list",
				"in": "query",
				"name": "tasklistId",
				"type": "integer"
			},
			{ "in": "path", "name": "projectId", "required": true, "type": "integer" },
			{ "description": "filter by project", "in": "query", "name": "projectId", "type": "integer" },
			{
				"default": "false",
				"description": "only completed tasks",
				"in": "query",
				"name": "onlyCompletedTasks",
				"type": "boolean"
			},
			{
				"description": "generate a report document",
				"in": "query",
				"name": "isReportDownload",
				"type": "boolean"
			},
			{ "description": "include time", "in": "query", "name": "includeTime", "type": "boolean" },
			{
				"default": "true",
				"description": "include tags",
				"in": "query",
				"name": "includeTags",
				"type": "boolean"
			},
			{
				"default": "true",
				"description": "include private items",
				"in": "query",
				"name": "includePrivateItems",
				"type": "boolean"
			},
			{
				"description": "include late tasks",
				"in": "query",
				"name": "includeLateTasks",
				"type": "boolean"
			},
			{
				"default": "true",
				"description": "include estimated time",
				"in": "query",
				"name": "includeEstimatedTime",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "include custom fields",
				"in": "query",
				"name": "includeCustomFields",
				"type": "boolean"
			},
			{
				"default": "true",
				"description": "include completed tasks",
				"in": "query",
				"name": "includeCompletedTasks",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "include comments",
				"in": "query",
				"name": "includeComments",
				"type": "boolean"
			},
			{
				"description": "include comment avatars",
				"in": "query",
				"name": "includeCommentAvatars",
				"type": "boolean"
			},
			{
				"default": "true",
				"description": "include columns",
				"in": "query",
				"name": "includeColumns",
				"type": "boolean"
			},
			{
				"description": "include anytime tasks",
				"in": "query",
				"name": "includeAnytimeTasks",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "include all comments",
				"in": "query",
				"name": "includeAllComments",
				"type": "boolean"
			},
			{
				"description": "ignore task start dates",
				"in": "query",
				"name": "ignoreStartDates",
				"type": "boolean"
			},
			{
				"description": "group by task lists",
				"in": "query",
				"name": "groupByTasklists",
				"type": "boolean"
			},
			{
				"description": "filter by tag names",
				"in": "query",
				"items": { "type": "string" },
				"name": "tags",
				"type": "array"
			},
			{
				"description": "filter by tag ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "tagIds",
				"type": "array"
			},
			{
				"description": "filter by assigned user ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "assignedToUserIds",
				"type": "array"
			},
			{
				"description": "filter by assigned team ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "assignedToTeamIds",
				"type": "array"
			},
			{
				"description": "filter by assigned company ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "assignedToCompanyIds",
				"type": "array"
			}
		],
		"description": "Generate tasklist report in PDF format",
		"group": "TaskLists"
	},
	{
		"endpoint": "/projects/api/v3/projects/{projectId}/tasklists.xlsx",
		"method": "get",
		"parameters": [
			{
				"default": "anytime",
				"description": "filter by task date",
				"enum": [
					"all",
					"anytime",
					"completed",
					"created",
					"overdue",
					"today",
					"yesterday",
					"started",
					"tomorrow",
					"thisweek",
					"within7",
					"within14",
					"within30",
					"within365",
					"nodate",
					"noduedate",
					"nostartdate",
					"newTaskDefaults",
					"hasDate"
				],
				"in": "query",
				"name": "taskDate",
				"type": "string"
			},
			{
				"description": "filter by start datetime",
				"format": "date-time",
				"in": "query",
				"name": "startDate",
				"type": "string"
			},
			{
				"description": "define the format of the report",
				"in": "query",
				"name": "reportFormat",
				"type": "string"
			},
			{
				"default": "asc",
				"description": "order mode",
				"enum": ["asc", "desc"],
				"in": "query",
				"name": "orderMode",
				"type": "string"
			},
			{
				"default": "manual",
				"description": "order by",
				"enum": [
					"startdate",
					"createdat",
					"priority",
					"project",
					"flattenedtasklist",
					"company",
					"manual",
					"active",
					"completedatdesc",
					"completedat",
					"duestartdate",
					"duestartdatedesc",
					"alldates",
					"alldatesdesc",
					"duedateDESC",
					"tasklistname",
					"tasklistdisplayorder",
					"tasklistid",
					"duedate",
					"updatedat",
					"taskname"
				],
				"in": "query",
				"name": "orderBy",
				"type": "string"
			},
			{
				"description": "filter by end datetime",
				"format": "date-time",
				"in": "query",
				"name": "endDate",
				"type": "string"
			},
			{
				"default": "asc",
				"description": "order mode of the comments",
				"enum": ["asc", "desc"],
				"in": "query",
				"name": "commentsOrderMode",
				"type": "string"
			},
			{
				"description": "filter by task list",
				"in": "query",
				"name": "tasklistId",
				"type": "integer"
			},
			{ "in": "path", "name": "projectId", "required": true, "type": "integer" },
			{ "description": "filter by project", "in": "query", "name": "projectId", "type": "integer" },
			{
				"default": "false",
				"description": "only completed tasks",
				"in": "query",
				"name": "onlyCompletedTasks",
				"type": "boolean"
			},
			{
				"description": "generate a report document",
				"in": "query",
				"name": "isReportDownload",
				"type": "boolean"
			},
			{ "description": "include time", "in": "query", "name": "includeTime", "type": "boolean" },
			{
				"default": "true",
				"description": "include tags",
				"in": "query",
				"name": "includeTags",
				"type": "boolean"
			},
			{
				"default": "true",
				"description": "include private items",
				"in": "query",
				"name": "includePrivateItems",
				"type": "boolean"
			},
			{
				"description": "include late tasks",
				"in": "query",
				"name": "includeLateTasks",
				"type": "boolean"
			},
			{
				"default": "true",
				"description": "include estimated time",
				"in": "query",
				"name": "includeEstimatedTime",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "include custom fields",
				"in": "query",
				"name": "includeCustomFields",
				"type": "boolean"
			},
			{
				"default": "true",
				"description": "include completed tasks",
				"in": "query",
				"name": "includeCompletedTasks",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "include comments",
				"in": "query",
				"name": "includeComments",
				"type": "boolean"
			},
			{
				"description": "include comment avatars",
				"in": "query",
				"name": "includeCommentAvatars",
				"type": "boolean"
			},
			{
				"default": "true",
				"description": "include columns",
				"in": "query",
				"name": "includeColumns",
				"type": "boolean"
			},
			{
				"description": "include anytime tasks",
				"in": "query",
				"name": "includeAnytimeTasks",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "include all comments",
				"in": "query",
				"name": "includeAllComments",
				"type": "boolean"
			},
			{
				"description": "ignore task start dates",
				"in": "query",
				"name": "ignoreStartDates",
				"type": "boolean"
			},
			{
				"description": "group by task lists",
				"in": "query",
				"name": "groupByTasklists",
				"type": "boolean"
			},
			{
				"description": "filter by tag names",
				"in": "query",
				"items": { "type": "string" },
				"name": "tags",
				"type": "array"
			},
			{
				"description": "filter by tag ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "tagIds",
				"type": "array"
			},
			{
				"description": "filter by assigned user ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "assignedToUserIds",
				"type": "array"
			},
			{
				"description": "filter by assigned team ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "assignedToTeamIds",
				"type": "array"
			},
			{
				"description": "filter by assigned company ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "assignedToCompanyIds",
				"type": "array"
			}
		],
		"description": "Generate tasklist report in XLSX format",
		"group": "TaskLists"
	},
	{
		"endpoint": "/projects/api/v3/projects/{projectId}/time.json",
		"method": "get",
		"parameters": [
			{
				"description": "filter by updated after date",
				"format": "date-time",
				"in": "query",
				"name": "updatedAfter",
				"type": "string"
			},
			{
				"description": "filter by a starting date",
				"format": "date-time",
				"in": "query",
				"name": "startDate",
				"type": "string"
			},
			{
				"description": "define the format of the report",
				"in": "query",
				"name": "reportFormat",
				"type": "string"
			},
			{
				"description": "filter by project status",
				"enum": ["active", "current", "late", "upcoming", "completed", "deleted"],
				"in": "query",
				"name": "projectStatus",
				"type": "string"
			},
			{
				"default": "asc",
				"description": "order mode",
				"enum": ["asc", "desc"],
				"in": "query",
				"name": "orderMode",
				"type": "string"
			},
			{
				"default": "date",
				"description": "sort order",
				"enum": ["company", "date", "dateupdated", "project", "task", "tasklist", "user"],
				"in": "query",
				"name": "orderBy",
				"type": "string"
			},
			{
				"default": "all",
				"description": "filter by invoiced type",
				"enum": ["all", "invoiced", "noninvoiced"],
				"in": "query",
				"name": "invoicedType",
				"type": "string"
			},
			{
				"description": "filter by an ending date",
				"format": "date-time",
				"in": "query",
				"name": "endDate",
				"type": "string"
			},
			{
				"default": "all",
				"description": "filter by billable type",
				"enum": ["all", "billable", "non-billable"],
				"in": "query",
				"name": "billableType",
				"type": "string"
			},
			{
				"description": "filter by ticket id",
				"in": "query",
				"name": "ticketId",
				"type": "integer"
			},
			{
				"description": "filter by tasklist id",
				"in": "query",
				"name": "tasklistId",
				"type": "integer"
			},
			{
				"description": "filter by task id (deprecated, use taskIds)",
				"in": "query",
				"name": "taskId",
				"type": "integer"
			},
			{ "in": "path", "name": "projectId", "required": true, "type": "integer" },
			{
				"description": "filter by project id (deprecated, use projectIds)",
				"in": "query",
				"name": "projectId",
				"type": "integer"
			},
			{
				"default": "50",
				"description": "number of items in a page",
				"in": "query",
				"name": "pageSize",
				"type": "integer"
			},
			{
				"default": "1",
				"description": "page number",
				"in": "query",
				"name": "page",
				"type": "integer"
			},
			{
				"description": "filter by budget id",
				"in": "query",
				"name": "budgetId",
				"type": "integer"
			},
			{
				"description": "filter by allocation id",
				"in": "query",
				"name": "allocationId",
				"type": "integer"
			},
			{
				"default": "false",
				"description": "include deleted items",
				"in": "query",
				"name": "showDeleted",
				"type": "boolean"
			},
			{
				"description": "filter by starred projects only",
				"in": "query",
				"name": "onlyStarredProjects",
				"type": "boolean"
			},
			{
				"description": "match all task tags",
				"in": "query",
				"name": "matchAllTaskTags",
				"type": "boolean"
			},
			{ "description": "match all tags", "in": "query", "name": "matchAllTags", "type": "boolean" },
			{
				"description": "match all project tags",
				"in": "query",
				"name": "matchAllProjectTags",
				"type": "boolean"
			},
			{
				"description": "generate a report document",
				"in": "query",
				"name": "isReportDownload",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "include totals",
				"in": "query",
				"name": "includeTotals",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "include permissions",
				"in": "query",
				"name": "includePermissions",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "include descendants",
				"in": "query",
				"name": "includeDescendants",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "include archived projects",
				"in": "query",
				"name": "includeArchivedProjects",
				"type": "boolean"
			},
			{
				"description": "filter by task tag ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "taskTagIds",
				"type": "array"
			},
			{
				"description": "filter by task ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "taskIds",
				"type": "array"
			},
			{
				"description": "filter by tag ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "tagIds",
				"type": "array"
			},
			{
				"description": "customise the report by selecting columns",
				"in": "query",
				"items": { "type": "string" },
				"name": "selectedColumns",
				"type": "array"
			},
			{
				"description": "filter by project company ids (deprecated, use projectCompanyIds)",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectsFromCompanyId",
				"type": "array"
			},
			{
				"description": "filter by project tag ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectTagIds",
				"type": "array"
			},
			{
				"description": "filter by project statuses",
				"in": "query",
				"items": {
					"enum": ["active", "current", "late", "upcoming", "completed", "deleted"],
					"type": "string"
				},
				"name": "projectStatuses",
				"type": "array"
			},
			{
				"description": "filter by project owner ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectOwnerIds",
				"type": "array"
			},
			{
				"description": "filter by project ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectIds",
				"type": "array"
			},
			{
				"description": "filter by project healths\n\n0: not set\n1: bad\n2: ok\n3: good",
				"in": "query",
				"items": { "enum": ["0", "1", "2", "3"], "type": "integer" },
				"name": "projectHealths",
				"type": "array"
			},
			{
				"description": "filter by project company ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectCompanyIds",
				"type": "array"
			},
			{
				"description": "filter by project category ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectCategoryIds",
				"type": "array"
			},
			{
				"description": "include",
				"in": "query",
				"items": {
					"enum": [
						"projects",
						"projects.companies",
						"projects.categories",
						"tags",
						"tasks",
						"tasks.parentTasks",
						"tasks.tasklists",
						"users"
					],
					"type": "string"
				},
				"name": "include",
				"type": "array"
			},
			{
				"description": "filter by ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "ids",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"firstName",
						"lastName",
						"title",
						"email",
						"companyId",
						"company",
						"isAdmin",
						"isClientUser",
						"isServiceAccount",
						"type",
						"deleted",
						"avatarUrl",
						"lengthOfDay",
						"workingHoursId",
						"workingHour",
						"userRate",
						"userCost",
						"canAddProjects"
					],
					"type": "string"
				},
				"name": "fields[users]",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"dateCreated",
						"minutes",
						"description",
						"timeLogged",
						"billable",
						"deleted",
						"dateDeleted",
						"hasStartTime",
						"dateEdited",
						"deskTicketId",
						"userId",
						"taskId",
						"projectId",
						"loggedByUserId",
						"deletedByUserId",
						"editedByUserId",
						"taskIdPreMove",
						"projectBillingInvoiceId"
					],
					"type": "string"
				},
				"name": "fields[timelogs]",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"name",
						"dateUpdated",
						"parentTaskId",
						"isPrivate",
						"status",
						"tasklistId",
						"startDate",
						"dueDate"
					],
					"type": "string"
				},
				"name": "fields[tasks]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name", "projectId", "milestoneId"], "type": "string" },
				"name": "fields[tasklists]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name", "color", "count"], "type": "string" },
				"name": "fields[tags]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name"], "type": "string" },
				"name": "fields[projects]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name", "color"], "type": "string" },
				"name": "fields[projectcategories]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name", "logoUploadedToServer", "logoImage"], "type": "string" },
				"name": "fields[companies]",
				"type": "array"
			},
			{
				"description": "filter by assigned user ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "assignedToUserIds",
				"type": "array"
			},
			{
				"description": "filter by assigned team ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "assignedToTeamIds",
				"type": "array"
			},
			{
				"description": "filter by assigned company ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "assignedToCompanyIds",
				"type": "array"
			}
		],
		"description": "Get time entries for a specific project",
		"group": "TimeTracking"
	},
	{
		"endpoint": "/projects/api/v3/projects/{projectId}/time.json",
		"method": "post",
		"parameters": [
			{
				"in": "body",
				"name": "timelog.Request",
				"required": true,
				"schema": { "$ref": "#/definitions/timelog.Request" }
			},
			{ "in": "path", "name": "projectId", "required": true, "type": "integer" }
		],
		"description": "Create a time entry in a specific project.",
		"group": "TimeTracking"
	},
	{
		"endpoint": "/projects/api/v3/projects/{projectId}/time/total.json",
		"method": "get",
		"parameters": [
			{
				"description": "filter by a starting date",
				"format": "date",
				"in": "query",
				"name": "startDate",
				"type": "string"
			},
			{
				"description": "filter by project status",
				"enum": ["active", "current", "late", "upcoming", "completed", "deleted"],
				"in": "query",
				"name": "projectStatus",
				"type": "string"
			},
			{
				"description": "filter by an ending date",
				"format": "date",
				"in": "query",
				"name": "endDate",
				"type": "string"
			},
			{
				"description": "filter by user id (deprecated, use assignedToUserIds)",
				"in": "query",
				"name": "userId",
				"type": "integer"
			},
			{
				"description": "filter by tasklist id",
				"in": "query",
				"name": "tasklistId",
				"type": "integer"
			},
			{
				"description": "filter by task id (deprecated, use taskIds)",
				"in": "query",
				"name": "taskId",
				"type": "integer"
			},
			{ "in": "path", "name": "projectId", "required": true, "type": "integer" },
			{
				"description": "filter by project id",
				"in": "query",
				"name": "projectId",
				"type": "integer"
			},
			{
				"description": "filter by desk ticket id",
				"in": "query",
				"name": "deskTicketId",
				"type": "integer"
			},
			{
				"description": "filter by starred projects only",
				"in": "query",
				"name": "onlyStarredProjects",
				"type": "boolean"
			},
			{
				"description": "match all project tags",
				"in": "query",
				"name": "matchAllProjectTags",
				"type": "boolean"
			},
			{
				"description": "get subtask totals",
				"in": "query",
				"name": "includeDescendants",
				"type": "boolean"
			},
			{
				"description": "filter by user ids (deprecated, use assignedToUserIds)",
				"in": "query",
				"items": { "type": "integer" },
				"name": "userIds",
				"type": "array"
			},
			{
				"description": "filter by task ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "taskIds",
				"type": "array"
			},
			{
				"description": "filter by project tag ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectTagIds",
				"type": "array"
			},
			{
				"description": "filter by project statuses",
				"in": "query",
				"items": {
					"enum": ["active", "current", "late", "upcoming", "completed", "deleted"],
					"type": "string"
				},
				"name": "projectStatuses",
				"type": "array"
			},
			{
				"description": "filter by project owner ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectOwnerIds",
				"type": "array"
			},
			{
				"description": "filter by project ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectIds",
				"type": "array"
			},
			{
				"description": "filter by project healths\n\n0: not set\n1: bad\n2: ok\n3: good",
				"in": "query",
				"items": { "enum": ["0", "1", "2", "3"], "type": "integer" },
				"name": "projectHealths",
				"type": "array"
			},
			{
				"description": "filter by project company ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectCompanyIds",
				"type": "array"
			},
			{
				"description": "filter by project category ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectCategoryIds",
				"type": "array"
			},
			{
				"description": "filter by company ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "companyIds",
				"type": "array"
			},
			{
				"description": "filter by assigned user ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "assignedToUserIds",
				"type": "array"
			},
			{
				"description": "filter by assigned team ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "assignedToTeamIds",
				"type": "array"
			},
			{
				"description": "filter by assigned company ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "assignedToCompanyIds",
				"type": "array"
			}
		],
		"description": "Get timelog totals for a specific project.",
		"group": "TimeTracking"
	},
	{
		"endpoint": "/projects/api/v3/risks.json",
		"method": "get",
		"parameters": [
			{
				"description": "filter by risks updated after specified date (deprecated, use updatedAfter)",
				"format": "date-time",
				"in": "query",
				"name": "updatedAfterDate",
				"type": "string"
			},
			{
				"description": "filter by risks updated after specified date",
				"format": "date-time",
				"in": "query",
				"name": "updatedAfter",
				"type": "string"
			},
			{
				"description": "sort order (deprecated, use orderMode)",
				"enum": ["asc", "desc"],
				"in": "query",
				"name": "sortOrder",
				"type": "string"
			},
			{
				"description": "sort by (deprecated, use orderBy)",
				"enum": ["datecreated", "source", "probability", "impact", "result", "project"],
				"in": "query",
				"name": "sort",
				"type": "string"
			},
			{ "description": "search term", "in": "query", "name": "searchTerm", "type": "string" },
			{
				"default": "pdf",
				"description": "define the format of the report",
				"in": "query",
				"name": "reportFormat",
				"type": "string"
			},
			{
				"description": "sort order",
				"enum": ["asc", "desc"],
				"in": "query",
				"name": "orderMode",
				"type": "string"
			},
			{
				"description": "sort by",
				"enum": ["datecreated", "source", "probability", "impact", "result", "project"],
				"in": "query",
				"name": "orderBy",
				"type": "string"
			},
			{
				"description": "filter by probability",
				"in": "query",
				"name": "probabilityTo",
				"type": "integer"
			},
			{
				"description": "filter by probability",
				"in": "query",
				"name": "probabilityFrom",
				"type": "integer"
			},
			{
				"default": "50",
				"description": "number of items in a page",
				"in": "query",
				"name": "pageSize",
				"type": "integer"
			},
			{
				"default": "1",
				"description": "page number",
				"in": "query",
				"name": "page",
				"type": "integer"
			},
			{ "description": "filter by impact", "in": "query", "name": "impactTo", "type": "integer" },
			{ "description": "filter by impact", "in": "query", "name": "impactFrom", "type": "integer" },
			{
				"default": "false",
				"description": "include deleted items",
				"in": "query",
				"name": "showDeleted",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "filter by starred projects only",
				"in": "query",
				"name": "onlyStarredProjects",
				"type": "boolean"
			},
			{
				"description": "enforce all tag ids must be matched",
				"in": "query",
				"name": "matchAllProjectTags",
				"type": "boolean"
			},
			{
				"description": "generate a report document",
				"in": "query",
				"name": "isReportDownload",
				"type": "boolean"
			},
			{
				"description": "include archived projects",
				"in": "query",
				"name": "includeArchivedProjects",
				"type": "boolean"
			},
			{
				"description": "filter by risks that impact schedule",
				"in": "query",
				"name": "impactSchedule",
				"type": "boolean"
			},
			{
				"description": "filter by risks that impact performance",
				"in": "query",
				"name": "impactPerformance",
				"type": "boolean"
			},
			{
				"description": "filter by risks that impact cost",
				"in": "query",
				"name": "impactCost",
				"type": "boolean"
			},
			{
				"description": "filter by risk statuses",
				"in": "query",
				"items": { "enum": ["new", "pending", "closed"], "type": "string" },
				"name": "statuses",
				"type": "array"
			},
			{
				"description": "filter by project tag ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectTagIds",
				"type": "array"
			},
			{
				"description": "list of project statuses",
				"in": "query",
				"items": { "type": "string" },
				"name": "projectStatuses",
				"type": "array"
			},
			{
				"description": "filter by project owner ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectOwnerIds",
				"type": "array"
			},
			{
				"description": "filter by project ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectIds",
				"type": "array"
			},
			{
				"description": "list of project health",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectHealths",
				"type": "array"
			},
			{
				"description": "filter by company ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectCompanyIds",
				"type": "array"
			},
			{
				"description": "filter by project category ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectCategoryIds",
				"type": "array"
			},
			{
				"description": "include",
				"in": "query",
				"items": { "enum": ["projects", "users", "projects.companies"], "type": "string" },
				"name": "include",
				"type": "array"
			},
			{
				"description": "filter by specific ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "ids",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"firstName",
						"lastName",
						"title",
						"email",
						"companyId",
						"company",
						"isAdmin",
						"isClientUser",
						"isServiceAccount",
						"type",
						"deleted",
						"avatarUrl",
						"lengthOfDay",
						"workingHoursId",
						"workingHour",
						"userRate",
						"userCost",
						"canAddProjects"
					],
					"type": "string"
				},
				"name": "fields[users]",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"source",
						"probability",
						"probabilityValue",
						"impact",
						"impactValue",
						"impactCost",
						"impactSchedule",
						"impactPerformance",
						"createdOn",
						"createdByUserId",
						"lastChangedOn",
						"lastChangedByUserId",
						"result",
						"mitigationPlan",
						"stats",
						"projectId",
						"deleted",
						"canEdit"
					],
					"type": "string"
				},
				"name": "fields[risks]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name"], "type": "string" },
				"name": "fields[projects]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name", "logoUploadedToServer", "logoImage"], "type": "string" },
				"name": "fields[companies]",
				"type": "array"
			}
		],
		"description": "Get all risks",
		"group": "Risks"
	},
	{
		"endpoint": "/projects/api/v3/statuses.json",
		"method": "get",
		"parameters": [
			{
				"description": "return only statuses updated after a specific date",
				"format": "date-time",
				"in": "query",
				"name": "updatedAfter",
				"type": "string"
			},
			{
				"description": "filter by the user name or status message",
				"in": "query",
				"name": "searchTerm",
				"type": "string"
			},
			{ "description": "filter by team", "in": "query", "name": "teamId", "type": "integer" },
			{
				"default": "100",
				"description": "number of items in a page",
				"in": "query",
				"name": "pageSize",
				"type": "integer"
			},
			{
				"default": "1",
				"description": "page number",
				"in": "query",
				"name": "page",
				"type": "integer"
			},
			{
				"description": "show also users without status",
				"in": "query",
				"name": "showEveryone",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "showDeleted statuses",
				"in": "query",
				"name": "showDeleted",
				"type": "boolean"
			},
			{
				"description": "also include statuses from subteams",
				"in": "query",
				"name": "includeSubteams",
				"type": "boolean"
			},
			{
				"description": "include",
				"in": "query",
				"items": { "enum": ["statuses", "users", "userevents"], "type": "string" },
				"name": "include",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"firstName",
						"lastName",
						"title",
						"email",
						"companyId",
						"company",
						"isAdmin",
						"isClientUser",
						"isServiceAccount",
						"type",
						"deleted",
						"avatarUrl",
						"lengthOfDay",
						"workingHoursId",
						"workingHour",
						"userRate",
						"userCost",
						"canAddProjects"
					],
					"type": "string"
				},
				"name": "fields[users]",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": ["id", "userId", "emoji", "text", "dateTime", "ipAddress", "dateLastUpdated"],
					"type": "string"
				},
				"name": "fields[statuses]",
				"type": "array"
			}
		],
		"description": "Get all statuses",
		"group": "PeopleStatus"
	},
	{
		"endpoint": "/projects/api/v3/statuses/timeline.json",
		"method": "get",
		"parameters": [
			{
				"description": "filter by the user name or status message",
				"in": "query",
				"name": "searchTerm",
				"type": "string"
			},
			{ "description": "filter by team", "in": "query", "name": "teamId", "type": "integer" },
			{
				"default": "50",
				"description": "number of items in a page",
				"in": "query",
				"name": "pageSize",
				"type": "integer"
			},
			{
				"default": "1",
				"description": "page number",
				"in": "query",
				"name": "page",
				"type": "integer"
			},
			{
				"default": "false",
				"description": "showDeleted statuses",
				"in": "query",
				"name": "showDeleted",
				"type": "boolean"
			},
			{
				"description": "also include statuses from subteams",
				"in": "query",
				"name": "includeSubteams",
				"type": "boolean"
			},
			{
				"description": "include",
				"in": "query",
				"items": { "enum": ["users", "userevents"], "type": "string" },
				"name": "include",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"firstName",
						"lastName",
						"title",
						"email",
						"companyId",
						"company",
						"isAdmin",
						"isClientUser",
						"isServiceAccount",
						"type",
						"deleted",
						"avatarUrl",
						"lengthOfDay",
						"workingHoursId",
						"workingHour",
						"userRate",
						"userCost",
						"canAddProjects"
					],
					"type": "string"
				},
				"name": "fields[users]",
				"type": "array"
			}
		],
		"description": "Get the people statuses timeline.",
		"group": "PeopleStatus"
	},
	{
		"endpoint": "/projects/api/v3/summary.json",
		"method": "get",
		"parameters": [
			{
				"description": "used to limit the since counters to a specific period",
				"enum": ["now", "timeRange"],
				"in": "query",
				"name": "until",
				"type": "string"
			},
			{
				"description": "filter by start datetime",
				"format": "date-time",
				"in": "query",
				"name": "timeRangeStart",
				"type": "string"
			},
			{
				"description": "filter by end datetime",
				"format": "date-time",
				"in": "query",
				"name": "timeRangeEnd",
				"type": "string"
			},
			{
				"description": "filter by time range. It will be ignored if timeRangeStart and timeRangeEnd\nare provided.",
				"enum": [
					"yesterday",
					"today",
					"thisweek",
					"lastweek",
					"thismonth",
					"lastmonth",
					"last3months",
					"last6months"
				],
				"in": "query",
				"name": "timeRange",
				"type": "string"
			},
			{
				"default": "7",
				"description": "number of days remaining to event's start",
				"in": "query",
				"name": "eventsDaysAhead",
				"type": "integer"
			},
			{
				"description": "enforce today is considered as start date for today's tasks",
				"in": "query",
				"name": "useStartDatesForTodaysTasks",
				"type": "boolean"
			},
			{
				"description": "filter by my unread messages only",
				"in": "query",
				"name": "unreadMessagesMineOnly",
				"type": "boolean"
			},
			{
				"description": "filter by my unread comments only",
				"in": "query",
				"name": "unreadCommentsMineOnly",
				"type": "boolean"
			},
			{
				"description": "filter by starred projects only",
				"in": "query",
				"name": "onlyStarredProjects",
				"type": "boolean"
			},
			{
				"description": "filter only project events",
				"in": "query",
				"name": "onlyProjectEvents",
				"type": "boolean"
			},
			{
				"description": "enforce all tag ids must be matched",
				"in": "query",
				"name": "matchAllProjectTags",
				"type": "boolean"
			},
			{
				"description": "include teams related to the taskAssigneeUserIds",
				"in": "query",
				"name": "includeAssigneeTeams",
				"type": "boolean"
			},
			{
				"description": "include archived projects",
				"in": "query",
				"name": "includeArchivedProjects",
				"type": "boolean"
			},
			{
				"description": "count only events that the users are attending",
				"in": "query",
				"name": "eventsAttendingOnly",
				"type": "boolean"
			},
			{
				"description": "the since section will only use taskAssigneeUserIds if this flag is true\n(keeps backward compatibility)",
				"in": "query",
				"name": "applyTaskAssigneeUsersToSince",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "when enabled unread counters will respect the time range period.",
				"in": "query",
				"name": "applySinceOnUnread",
				"type": "boolean"
			},
			{
				"description": "filter by user ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "userIds",
				"type": "array"
			},
			{
				"description": "filter by user ids who time logged",
				"in": "query",
				"items": { "type": "integer" },
				"name": "timeLoggedByUserIds",
				"type": "array"
			},
			{
				"description": "filter by user ids with tasks assigned",
				"in": "query",
				"items": { "type": "integer" },
				"name": "taskAssigneeUserIds",
				"type": "array"
			},
			{
				"description": "filter by project tag ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectTagIds",
				"type": "array"
			},
			{
				"description": "project statuses",
				"in": "query",
				"items": {
					"enum": ["active", "current", "late", "upcoming", "completed", "deleted"],
					"type": "string"
				},
				"name": "projectStatuses",
				"type": "array"
			},
			{
				"description": "filter by project owner ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectOwnerIds",
				"type": "array"
			},
			{
				"description": "filter by project ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectIds",
				"type": "array"
			},
			{
				"description": "project healths\n\n0: not set\n1: bad\n2: ok\n3: good",
				"in": "query",
				"items": { "enum": ["0", "1", "2", "3"], "type": "integer" },
				"name": "projectHealths",
				"type": "array"
			},
			{
				"description": "filter by company ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectCompanyIds",
				"type": "array"
			},
			{
				"description": "filter by project category ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectCategoryIds",
				"type": "array"
			},
			{
				"description": "filter by user ids with milestones assigned",
				"in": "query",
				"items": { "type": "integer" },
				"name": "milestoneAssigneeUserIds",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["comments", "messages"], "type": "string" },
				"name": "fields[unread]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["estimates", "totals"], "type": "string" },
				"name": "fields[time]",
				"type": "array"
			},
			{
				"description": "sparse fields",
				"in": "query",
				"items": {
					"enum": ["nodate", "today", "late", "started", "complete", "upcoming", "active"],
					"type": "string"
				},
				"name": "fields[tasks]",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": ["tasksComplete", "tasksCreated", "events", "dateTime"],
					"type": "string"
				},
				"name": "fields[since]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["total", "open", "pending", "closed"], "type": "string" },
				"name": "fields[risks]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["today", "late", "complete", "upcoming", "active"], "type": "string" },
				"name": "fields[milestones]",
				"type": "array"
			},
			{
				"description": "0: not set\n1: bad\n2: ok\n3: good",
				"in": "query",
				"items": { "enum": ["0", "1", "2", "3"], "type": "string" },
				"name": "fields[health]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["today", "upcoming"], "type": "string" },
				"name": "fields[events]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["count", "data"], "type": "string" },
				"name": "fields[columns]",
				"type": "array"
			},
			{
				"description": "filter by user ids with tasks or milestones assigned",
				"in": "query",
				"items": { "type": "integer" },
				"name": "assigneeUserIds",
				"type": "array"
			}
		],
		"description": "Get installation summary dashboard",
		"group": "Summary"
	},
	{
		"endpoint": "/projects/api/v3/tags.json",
		"method": "get",
		"parameters": [
			{
				"description": "search for tags updated after the provided date",
				"format": "date-time",
				"in": "query",
				"name": "updatedAfter",
				"type": "string"
			},
			{
				"description": "filter by search term",
				"in": "query",
				"name": "searchTerm",
				"type": "string"
			},
			{
				"default": "asc",
				"description": "order mode",
				"enum": ["asc", "desc"],
				"in": "query",
				"name": "orderMode",
				"type": "string"
			},
			{
				"default": "name",
				"description": "order by",
				"enum": ["name", "count", "project", "color", "datelastupdated", "projectdatelastused"],
				"in": "query",
				"name": "orderBy",
				"type": "string"
			},
			{
				"default": "all",
				"description": "filter by item type",
				"enum": [
					"all",
					"project",
					"task",
					"tasklist",
					"milestone",
					"message",
					"comment",
					"timelog",
					"file",
					"user",
					"company",
					"invoice",
					"risk",
					"notebook",
					"link",
					"event",
					"notebookversion",
					"fileversion"
				],
				"in": "query",
				"name": "itemType",
				"type": "string"
			},
			{
				"default": "all",
				"description": "mode used when filtering the tags",
				"enum": ["all", "recent"],
				"in": "query",
				"name": "filter",
				"type": "string"
			},
			{
				"default": "500",
				"description": "number of items in a page",
				"in": "query",
				"name": "pageSize",
				"type": "integer"
			},
			{
				"default": "1",
				"description": "page number",
				"in": "query",
				"name": "page",
				"type": "integer"
			},
			{
				"default": "false",
				"description": "include in the response the number of items that use the tag",
				"in": "query",
				"name": "withCounters",
				"type": "boolean"
			},
			{
				"default": "true",
				"description": "do not include in the response special tags",
				"in": "query",
				"name": "skipSpecial",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "search term will be placed as a prefix to match the tag names",
				"in": "query",
				"name": "searchRightOnly",
				"type": "boolean"
			},
			{
				"description": "skip from the result tags with the defined ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "skipIds",
				"type": "array"
			},
			{
				"description": "filter by projects",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectIds",
				"type": "array"
			},
			{
				"description": "filter by ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "ids",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name", "color", "count"], "type": "string" },
				"name": "fields[tags]",
				"type": "array"
			}
		],
		"description": "Get all tags",
		"group": "Tags"
	},
	{
		"endpoint": "/projects/api/v3/tags.json",
		"method": "post",
		"parameters": [
			{
				"in": "body",
				"name": "tag.Request",
				"required": true,
				"schema": { "$ref": "#/definitions/tag.Request" }
			}
		],
		"description": "Create a single tag",
		"group": "Tags"
	},
	{
		"endpoint": "/projects/api/v3/tags/bulk/delete.json",
		"method": "post",
		"parameters": [
			{
				"in": "body",
				"name": "tag.BulkDeleteRequest",
				"required": true,
				"schema": { "$ref": "#/definitions/tag.BulkDeleteRequest" }
			}
		],
		"description": "Delete many tags at once",
		"group": "Tags"
	},
	{
		"endpoint": "/projects/api/v3/tags/{tagId}.json",
		"method": "delete",
		"parameters": [{ "in": "path", "name": "tagId", "required": true, "type": "integer" }],
		"description": "Deletes a tag",
		"group": "Tags"
	},
	{
		"endpoint": "/projects/api/v3/tags/{tagId}.json",
		"method": "get",
		"parameters": [{ "in": "path", "name": "tagId", "required": true, "type": "integer" }],
		"description": "Get details of an individual tag",
		"group": "Tags"
	},
	{
		"endpoint": "/projects/api/v3/tags/{tagId}.json",
		"method": "patch",
		"parameters": [
			{
				"in": "body",
				"name": "tag.Request",
				"required": true,
				"schema": { "$ref": "#/definitions/tag.Request" }
			},
			{ "in": "path", "name": "tagId", "required": true, "type": "integer" }
		],
		"description": "Update a single tag",
		"group": "Tags"
	},
	{
		"endpoint": "/projects/api/v3/tasklists",
		"method": "get",
		"parameters": [
			{
				"description": "filter by updated after date",
				"format": "date-time",
				"in": "query",
				"name": "updatedAfter",
				"type": "string"
			},
			{
				"description": "filter by search term",
				"in": "query",
				"name": "searchTerm",
				"type": "string"
			},
			{
				"description": "filter by project type",
				"in": "query",
				"name": "projectType",
				"type": "string"
			},
			{
				"default": "asc",
				"description": "order mode",
				"enum": ["asc", "desc"],
				"in": "query",
				"name": "orderMode",
				"type": "string"
			},
			{
				"default": "displayorder",
				"description": "order by",
				"enum": ["displayorder", "name", "status", "createdat", "updatedat", "project"],
				"in": "query",
				"name": "orderBy",
				"type": "string"
			},
			{
				"default": "nil",
				"description": "filter the task list budget by its parent project budget id, if none\nis provided it weill default to the current active budget.",
				"in": "query",
				"name": "projectBudgetId",
				"type": "integer"
			},
			{
				"default": "50",
				"description": "number of items in a page",
				"in": "query",
				"name": "pageSize",
				"type": "integer"
			},
			{
				"default": "1",
				"description": "page number",
				"in": "query",
				"name": "page",
				"type": "integer"
			},
			{
				"default": "true",
				"description": "include private items",
				"in": "query",
				"name": "showPrivate",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "include deleted items",
				"in": "query",
				"name": "showDeleted",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "this means use the tasklist report endpoint, which has totally different query params",
				"in": "query",
				"name": "isReportDownload",
				"type": "boolean"
			},
			{
				"description": "include archived projects",
				"in": "query",
				"name": "includeArchivedProjects",
				"type": "boolean"
			},
			{
				"description": "filter by project ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectIds",
				"type": "array"
			},
			{
				"description": "include",
				"in": "query",
				"items": {
					"enum": [
						"defaultTasks",
						"createdBy",
						"updatedBy",
						"companies",
						"projects",
						"milestones",
						"defaultCustomfields",
						"defaultCustomfieldTasks",
						"defaultColumns",
						"lockdowns",
						"lockdowns.users",
						"lockdowns.companies",
						"lockdowns.teams",
						"lockdowns.users.companies",
						"lockdowns.companies.users",
						"lockdowns.teams.users"
					],
					"type": "string"
				},
				"name": "include",
				"type": "array"
			},
			{
				"description": "filter by ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "ids",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"firstName",
						"lastName",
						"title",
						"email",
						"companyId",
						"company",
						"isAdmin",
						"isClientUser",
						"isServiceAccount",
						"type",
						"deleted",
						"avatarUrl",
						"lengthOfDay",
						"workingHoursId",
						"workingHour",
						"userRate",
						"userCost",
						"canAddProjects"
					],
					"type": "string"
				},
				"name": "fields[users]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name", "color", "count"], "type": "string" },
				"name": "fields[tags]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name"], "type": "string" },
				"name": "fields[projects]",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"name",
						"description",
						"deadline",
						"completed",
						"projectId",
						"createdOn",
						"lastChangedOn",
						"creatorUserId",
						"reminder",
						"private",
						"lockdownId",
						"status",
						"completedOn",
						"completerId",
						"percentageComplete"
					],
					"type": "string"
				},
				"name": "fields[milestones]",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": ["id", "userID", "updatedAt", "itemType", "itemID", "grantAccessTo"],
					"type": "string"
				},
				"name": "fields[lockdowns]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name", "logoUploadedToServer", "logoImage"], "type": "string" },
				"name": "fields[companies]",
				"type": "array"
			}
		],
		"description": "Get all tasklists",
		"group": "TaskLists"
	},
	{
		"endpoint": "/projects/api/v3/tasklists/{tasklistId}",
		"method": "get",
		"parameters": [
			{
				"description": "filter by updated after date",
				"format": "date-time",
				"in": "query",
				"name": "updatedAfter",
				"type": "string"
			},
			{
				"description": "filter by search term",
				"in": "query",
				"name": "searchTerm",
				"type": "string"
			},
			{
				"description": "filter by project type",
				"in": "query",
				"name": "projectType",
				"type": "string"
			},
			{
				"default": "asc",
				"description": "order mode",
				"enum": ["asc", "desc"],
				"in": "query",
				"name": "orderMode",
				"type": "string"
			},
			{
				"default": "displayorder",
				"description": "order by",
				"enum": ["displayorder", "name", "status", "createdat", "updatedat", "project"],
				"in": "query",
				"name": "orderBy",
				"type": "string"
			},
			{ "in": "path", "name": "tasklistId", "required": true, "type": "integer" },
			{
				"default": "nil",
				"description": "filter the task list budget by its parent project budget id, if none\nis provided it weill default to the current active budget.",
				"in": "query",
				"name": "projectBudgetId",
				"type": "integer"
			},
			{
				"default": "50",
				"description": "number of items in a page",
				"in": "query",
				"name": "pageSize",
				"type": "integer"
			},
			{
				"default": "1",
				"description": "page number",
				"in": "query",
				"name": "page",
				"type": "integer"
			},
			{
				"default": "true",
				"description": "include private items",
				"in": "query",
				"name": "showPrivate",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "include deleted items",
				"in": "query",
				"name": "showDeleted",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "this means use the tasklist report endpoint, which has totally different query params",
				"in": "query",
				"name": "isReportDownload",
				"type": "boolean"
			},
			{
				"description": "include archived projects",
				"in": "query",
				"name": "includeArchivedProjects",
				"type": "boolean"
			},
			{
				"description": "filter by project ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectIds",
				"type": "array"
			},
			{
				"description": "include",
				"in": "query",
				"items": {
					"enum": [
						"defaultTasks",
						"createdBy",
						"updatedBy",
						"companies",
						"projects",
						"milestones",
						"defaultCustomfields",
						"defaultCustomfieldTasks",
						"defaultColumns",
						"lockdowns",
						"lockdowns.users",
						"lockdowns.companies",
						"lockdowns.teams",
						"lockdowns.users.companies",
						"lockdowns.companies.users",
						"lockdowns.teams.users"
					],
					"type": "string"
				},
				"name": "include",
				"type": "array"
			},
			{
				"description": "filter by ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "ids",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"firstName",
						"lastName",
						"title",
						"email",
						"companyId",
						"company",
						"isAdmin",
						"isClientUser",
						"isServiceAccount",
						"type",
						"deleted",
						"avatarUrl",
						"lengthOfDay",
						"workingHoursId",
						"workingHour",
						"userRate",
						"userCost",
						"canAddProjects"
					],
					"type": "string"
				},
				"name": "fields[users]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name", "color", "count"], "type": "string" },
				"name": "fields[tags]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name"], "type": "string" },
				"name": "fields[projects]",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"name",
						"description",
						"deadline",
						"completed",
						"projectId",
						"createdOn",
						"lastChangedOn",
						"creatorUserId",
						"reminder",
						"private",
						"lockdownId",
						"status",
						"completedOn",
						"completerId",
						"percentageComplete"
					],
					"type": "string"
				},
				"name": "fields[milestones]",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": ["id", "userID", "updatedAt", "itemType", "itemID", "grantAccessTo"],
					"type": "string"
				},
				"name": "fields[lockdowns]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name", "logoUploadedToServer", "logoImage"], "type": "string" },
				"name": "fields[companies]",
				"type": "array"
			}
		],
		"description": "Get specific tasklist",
		"group": "TaskLists"
	},
	{
		"endpoint": "/projects/api/v3/tasklists/{tasklistId}.json",
		"method": "delete",
		"parameters": [{ "in": "path", "name": "tasklistId", "required": true, "type": "integer" }],
		"description": "Delete an existing tasklist.",
		"group": "Tasklists"
	},
	{
		"endpoint": "/projects/api/v3/tasklists/{tasklistId}/time/total.json",
		"method": "get",
		"parameters": [{ "in": "path", "name": "tasklistId", "required": true, "type": "integer" }],
		"description": "Get timelog totals for a specific task.",
		"group": "TimeTracking"
	},
	{
		"endpoint": "/projects/api/v3/tasks/metrics/complete.json",
		"method": "get",
		"description": "Total count of completed tasks",
		"group": "Tasks"
	},
	{
		"endpoint": "/projects/api/v3/tasks/metrics/late.json",
		"method": "get",
		"description": "Get total count of late tasks",
		"group": "Tasks"
	},
	{
		"endpoint": "/projects/api/v3/tasks/{taskId}/comments.json",
		"method": "get",
		"parameters": [
			{
				"description": "filter by updated after date (deprecated, use updatedAfter)",
				"format": "date-time",
				"in": "query",
				"name": "updatedAfterDate",
				"type": "string"
			},
			{
				"description": "filter by updated after date",
				"format": "date-time",
				"in": "query",
				"name": "updatedAfter",
				"type": "string"
			},
			{
				"description": "filter by comment content (like v1 filterText param)",
				"in": "query",
				"name": "searchTerm",
				"type": "string"
			},
			{
				"description": "filter by published after date",
				"format": "date",
				"in": "query",
				"name": "publishedStartDate",
				"type": "string"
			},
			{
				"description": "filter by published before date",
				"format": "date",
				"in": "query",
				"name": "publishedEndDate",
				"type": "string"
			},
			{
				"default": "asc",
				"description": "order mode",
				"enum": ["asc", "desc"],
				"in": "query",
				"name": "orderMode",
				"type": "string"
			},
			{
				"default": "data",
				"description": "order by",
				"enum": ["all", "date", "project", "user", "type"],
				"in": "query",
				"name": "orderBy",
				"type": "string"
			},
			{
				"description": "filter by commment status",
				"enum": ["all", "read", "unread"],
				"in": "query",
				"name": "commentStatus",
				"type": "string"
			},
			{ "in": "path", "name": "taskId", "required": true, "type": "integer" },
			{
				"default": "50",
				"description": "number of items in a page",
				"in": "query",
				"name": "pageSize",
				"type": "integer"
			},
			{
				"default": "1",
				"description": "page number",
				"in": "query",
				"name": "page",
				"type": "integer"
			},
			{
				"default": "false",
				"description": "use strict html filtering fto content",
				"in": "query",
				"name": "strictHTML",
				"type": "boolean"
			},
			{
				"description": "get reactions count",
				"in": "query",
				"name": "getReactionsCount",
				"type": "boolean"
			},
			{
				"description": "filter by user ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "userIds",
				"type": "array"
			},
			{
				"description": "filter by users who got notified for the comments",
				"in": "query",
				"items": { "type": "integer" },
				"name": "notifiedUserIds",
				"type": "array"
			},
			{
				"description": "include",
				"in": "query",
				"items": { "enum": ["reactions", "users"], "type": "string" },
				"name": "include",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"firstName",
						"lastName",
						"title",
						"email",
						"companyId",
						"company",
						"isAdmin",
						"isClientUser",
						"isServiceAccount",
						"type",
						"deleted",
						"avatarUrl",
						"lengthOfDay",
						"workingHoursId",
						"workingHour",
						"userRate",
						"userCost",
						"canAddProjects"
					],
					"type": "string"
				},
				"name": "fields[users]",
				"type": "array"
			}
		],
		"description": "Get a list of comments for a task",
		"group": "TaskComments"
	},
	{
		"endpoint": "/projects/api/v3/tasks/{taskId}/time.json",
		"method": "get",
		"parameters": [
			{
				"description": "filter by updated after date",
				"format": "date-time",
				"in": "query",
				"name": "updatedAfter",
				"type": "string"
			},
			{
				"description": "filter by a starting date",
				"format": "date-time",
				"in": "query",
				"name": "startDate",
				"type": "string"
			},
			{
				"description": "define the format of the report",
				"in": "query",
				"name": "reportFormat",
				"type": "string"
			},
			{
				"description": "filter by project status",
				"enum": ["active", "current", "late", "upcoming", "completed", "deleted"],
				"in": "query",
				"name": "projectStatus",
				"type": "string"
			},
			{
				"default": "asc",
				"description": "order mode",
				"enum": ["asc", "desc"],
				"in": "query",
				"name": "orderMode",
				"type": "string"
			},
			{
				"default": "date",
				"description": "sort order",
				"enum": ["company", "date", "dateupdated", "project", "task", "tasklist", "user"],
				"in": "query",
				"name": "orderBy",
				"type": "string"
			},
			{
				"default": "all",
				"description": "filter by invoiced type",
				"enum": ["all", "invoiced", "noninvoiced"],
				"in": "query",
				"name": "invoicedType",
				"type": "string"
			},
			{
				"description": "filter by an ending date",
				"format": "date-time",
				"in": "query",
				"name": "endDate",
				"type": "string"
			},
			{
				"default": "all",
				"description": "filter by billable type",
				"enum": ["all", "billable", "non-billable"],
				"in": "query",
				"name": "billableType",
				"type": "string"
			},
			{
				"description": "filter by ticket id",
				"in": "query",
				"name": "ticketId",
				"type": "integer"
			},
			{
				"description": "filter by tasklist id",
				"in": "query",
				"name": "tasklistId",
				"type": "integer"
			},
			{ "in": "path", "name": "taskId", "required": true, "type": "integer" },
			{
				"description": "filter by task id (deprecated, use taskIds)",
				"in": "query",
				"name": "taskId",
				"type": "integer"
			},
			{
				"description": "filter by project id (deprecated, use projectIds)",
				"in": "query",
				"name": "projectId",
				"type": "integer"
			},
			{
				"default": "50",
				"description": "number of items in a page",
				"in": "query",
				"name": "pageSize",
				"type": "integer"
			},
			{
				"default": "1",
				"description": "page number",
				"in": "query",
				"name": "page",
				"type": "integer"
			},
			{
				"description": "filter by budget id",
				"in": "query",
				"name": "budgetId",
				"type": "integer"
			},
			{
				"description": "filter by allocation id",
				"in": "query",
				"name": "allocationId",
				"type": "integer"
			},
			{
				"default": "false",
				"description": "include deleted items",
				"in": "query",
				"name": "showDeleted",
				"type": "boolean"
			},
			{
				"description": "filter by starred projects only",
				"in": "query",
				"name": "onlyStarredProjects",
				"type": "boolean"
			},
			{
				"description": "match all task tags",
				"in": "query",
				"name": "matchAllTaskTags",
				"type": "boolean"
			},
			{ "description": "match all tags", "in": "query", "name": "matchAllTags", "type": "boolean" },
			{
				"description": "match all project tags",
				"in": "query",
				"name": "matchAllProjectTags",
				"type": "boolean"
			},
			{
				"description": "generate a report document",
				"in": "query",
				"name": "isReportDownload",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "include totals",
				"in": "query",
				"name": "includeTotals",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "include permissions",
				"in": "query",
				"name": "includePermissions",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "include descendants",
				"in": "query",
				"name": "includeDescendants",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "include archived projects",
				"in": "query",
				"name": "includeArchivedProjects",
				"type": "boolean"
			},
			{
				"description": "filter by task tag ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "taskTagIds",
				"type": "array"
			},
			{
				"description": "filter by task ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "taskIds",
				"type": "array"
			},
			{
				"description": "filter by tag ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "tagIds",
				"type": "array"
			},
			{
				"description": "customise the report by selecting columns",
				"in": "query",
				"items": { "type": "string" },
				"name": "selectedColumns",
				"type": "array"
			},
			{
				"description": "filter by project company ids (deprecated, use projectCompanyIds)",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectsFromCompanyId",
				"type": "array"
			},
			{
				"description": "filter by project tag ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectTagIds",
				"type": "array"
			},
			{
				"description": "filter by project statuses",
				"in": "query",
				"items": {
					"enum": ["active", "current", "late", "upcoming", "completed", "deleted"],
					"type": "string"
				},
				"name": "projectStatuses",
				"type": "array"
			},
			{
				"description": "filter by project owner ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectOwnerIds",
				"type": "array"
			},
			{
				"description": "filter by project ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectIds",
				"type": "array"
			},
			{
				"description": "filter by project healths\n\n0: not set\n1: bad\n2: ok\n3: good",
				"in": "query",
				"items": { "enum": ["0", "1", "2", "3"], "type": "integer" },
				"name": "projectHealths",
				"type": "array"
			},
			{
				"description": "filter by project company ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectCompanyIds",
				"type": "array"
			},
			{
				"description": "filter by project category ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectCategoryIds",
				"type": "array"
			},
			{
				"description": "include",
				"in": "query",
				"items": {
					"enum": [
						"projects",
						"projects.companies",
						"projects.categories",
						"tags",
						"tasks",
						"tasks.parentTasks",
						"tasks.tasklists",
						"users"
					],
					"type": "string"
				},
				"name": "include",
				"type": "array"
			},
			{
				"description": "filter by ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "ids",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"firstName",
						"lastName",
						"title",
						"email",
						"companyId",
						"company",
						"isAdmin",
						"isClientUser",
						"isServiceAccount",
						"type",
						"deleted",
						"avatarUrl",
						"lengthOfDay",
						"workingHoursId",
						"workingHour",
						"userRate",
						"userCost",
						"canAddProjects"
					],
					"type": "string"
				},
				"name": "fields[users]",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"dateCreated",
						"minutes",
						"description",
						"timeLogged",
						"billable",
						"deleted",
						"dateDeleted",
						"hasStartTime",
						"dateEdited",
						"deskTicketId",
						"userId",
						"taskId",
						"projectId",
						"loggedByUserId",
						"deletedByUserId",
						"editedByUserId",
						"taskIdPreMove",
						"projectBillingInvoiceId"
					],
					"type": "string"
				},
				"name": "fields[timelogs]",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"name",
						"dateUpdated",
						"parentTaskId",
						"isPrivate",
						"status",
						"tasklistId",
						"startDate",
						"dueDate"
					],
					"type": "string"
				},
				"name": "fields[tasks]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name", "projectId", "milestoneId"], "type": "string" },
				"name": "fields[tasklists]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name", "color", "count"], "type": "string" },
				"name": "fields[tags]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name"], "type": "string" },
				"name": "fields[projects]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name", "color"], "type": "string" },
				"name": "fields[projectcategories]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name", "logoUploadedToServer", "logoImage"], "type": "string" },
				"name": "fields[companies]",
				"type": "array"
			},
			{
				"description": "filter by assigned user ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "assignedToUserIds",
				"type": "array"
			},
			{
				"description": "filter by assigned team ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "assignedToTeamIds",
				"type": "array"
			},
			{
				"description": "filter by assigned company ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "assignedToCompanyIds",
				"type": "array"
			}
		],
		"description": "Get time entries for a specific task",
		"group": "TimeTracking"
	},
	{
		"endpoint": "/projects/api/v3/tasks/{taskId}/time.json",
		"method": "post",
		"parameters": [
			{
				"in": "body",
				"name": "timelog.Request",
				"required": true,
				"schema": { "$ref": "#/definitions/timelog.Request" }
			},
			{ "in": "path", "name": "taskId", "required": true, "type": "integer" }
		],
		"description": "Create a time entry linked to a specific task.",
		"group": "TimeTracking"
	},
	{
		"endpoint": "/projects/api/v3/tasks/{taskId}/time/total.json",
		"method": "get",
		"parameters": [{ "in": "path", "name": "taskId", "required": true, "type": "integer" }],
		"description": "Get timelog totals for a specific task.",
		"group": "TimeTracking"
	},
	{
		"endpoint": "/projects/api/v3/teams/{teamId}/statuses/timeline.json",
		"method": "get",
		"parameters": [
			{
				"description": "filter by the user name or status message",
				"in": "query",
				"name": "searchTerm",
				"type": "string"
			},
			{ "in": "path", "name": "teamId", "required": true, "type": "integer" },
			{ "description": "filter by team", "in": "query", "name": "teamId", "type": "integer" },
			{
				"default": "50",
				"description": "number of items in a page",
				"in": "query",
				"name": "pageSize",
				"type": "integer"
			},
			{
				"default": "1",
				"description": "page number",
				"in": "query",
				"name": "page",
				"type": "integer"
			},
			{
				"default": "false",
				"description": "showDeleted statuses",
				"in": "query",
				"name": "showDeleted",
				"type": "boolean"
			},
			{
				"description": "also include statuses from subteams",
				"in": "query",
				"name": "includeSubteams",
				"type": "boolean"
			},
			{
				"description": "include",
				"in": "query",
				"items": { "enum": ["users", "userevents"], "type": "string" },
				"name": "include",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"firstName",
						"lastName",
						"title",
						"email",
						"companyId",
						"company",
						"isAdmin",
						"isClientUser",
						"isServiceAccount",
						"type",
						"deleted",
						"avatarUrl",
						"lengthOfDay",
						"workingHoursId",
						"workingHour",
						"userRate",
						"userCost",
						"canAddProjects"
					],
					"type": "string"
				},
				"name": "fields[users]",
				"type": "array"
			}
		],
		"description": "Get statuses timeline for a specific team",
		"group": "PeopleStatus"
	},
	{
		"endpoint": "/projects/api/v3/time.json",
		"method": "get",
		"parameters": [
			{
				"description": "filter by updated after date",
				"format": "date-time",
				"in": "query",
				"name": "updatedAfter",
				"type": "string"
			},
			{
				"description": "filter by a starting date",
				"format": "date-time",
				"in": "query",
				"name": "startDate",
				"type": "string"
			},
			{
				"description": "define the format of the report",
				"in": "query",
				"name": "reportFormat",
				"type": "string"
			},
			{
				"description": "filter by project status",
				"enum": ["active", "current", "late", "upcoming", "completed", "deleted"],
				"in": "query",
				"name": "projectStatus",
				"type": "string"
			},
			{
				"default": "asc",
				"description": "order mode",
				"enum": ["asc", "desc"],
				"in": "query",
				"name": "orderMode",
				"type": "string"
			},
			{
				"default": "date",
				"description": "sort order",
				"enum": ["company", "date", "dateupdated", "project", "task", "tasklist", "user"],
				"in": "query",
				"name": "orderBy",
				"type": "string"
			},
			{
				"default": "all",
				"description": "filter by invoiced type",
				"enum": ["all", "invoiced", "noninvoiced"],
				"in": "query",
				"name": "invoicedType",
				"type": "string"
			},
			{
				"description": "filter by an ending date",
				"format": "date-time",
				"in": "query",
				"name": "endDate",
				"type": "string"
			},
			{
				"default": "all",
				"description": "filter by billable type",
				"enum": ["all", "billable", "non-billable"],
				"in": "query",
				"name": "billableType",
				"type": "string"
			},
			{
				"description": "filter by ticket id",
				"in": "query",
				"name": "ticketId",
				"type": "integer"
			},
			{
				"description": "filter by tasklist id",
				"in": "query",
				"name": "tasklistId",
				"type": "integer"
			},
			{
				"description": "filter by task id (deprecated, use taskIds)",
				"in": "query",
				"name": "taskId",
				"type": "integer"
			},
			{
				"description": "filter by project id (deprecated, use projectIds)",
				"in": "query",
				"name": "projectId",
				"type": "integer"
			},
			{
				"default": "50",
				"description": "number of items in a page",
				"in": "query",
				"name": "pageSize",
				"type": "integer"
			},
			{
				"default": "1",
				"description": "page number",
				"in": "query",
				"name": "page",
				"type": "integer"
			},
			{
				"description": "filter by budget id",
				"in": "query",
				"name": "budgetId",
				"type": "integer"
			},
			{
				"description": "filter by allocation id",
				"in": "query",
				"name": "allocationId",
				"type": "integer"
			},
			{
				"default": "false",
				"description": "include deleted items",
				"in": "query",
				"name": "showDeleted",
				"type": "boolean"
			},
			{
				"description": "filter by starred projects only",
				"in": "query",
				"name": "onlyStarredProjects",
				"type": "boolean"
			},
			{
				"description": "match all task tags",
				"in": "query",
				"name": "matchAllTaskTags",
				"type": "boolean"
			},
			{ "description": "match all tags", "in": "query", "name": "matchAllTags", "type": "boolean" },
			{
				"description": "match all project tags",
				"in": "query",
				"name": "matchAllProjectTags",
				"type": "boolean"
			},
			{
				"description": "generate a report document",
				"in": "query",
				"name": "isReportDownload",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "include totals",
				"in": "query",
				"name": "includeTotals",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "include permissions",
				"in": "query",
				"name": "includePermissions",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "include descendants",
				"in": "query",
				"name": "includeDescendants",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "include archived projects",
				"in": "query",
				"name": "includeArchivedProjects",
				"type": "boolean"
			},
			{
				"description": "filter by task tag ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "taskTagIds",
				"type": "array"
			},
			{
				"description": "filter by task ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "taskIds",
				"type": "array"
			},
			{
				"description": "filter by tag ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "tagIds",
				"type": "array"
			},
			{
				"description": "customise the report by selecting columns",
				"in": "query",
				"items": { "type": "string" },
				"name": "selectedColumns",
				"type": "array"
			},
			{
				"description": "filter by project company ids (deprecated, use projectCompanyIds)",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectsFromCompanyId",
				"type": "array"
			},
			{
				"description": "filter by project tag ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectTagIds",
				"type": "array"
			},
			{
				"description": "filter by project statuses",
				"in": "query",
				"items": {
					"enum": ["active", "current", "late", "upcoming", "completed", "deleted"],
					"type": "string"
				},
				"name": "projectStatuses",
				"type": "array"
			},
			{
				"description": "filter by project owner ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectOwnerIds",
				"type": "array"
			},
			{
				"description": "filter by project ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectIds",
				"type": "array"
			},
			{
				"description": "filter by project healths\n\n0: not set\n1: bad\n2: ok\n3: good",
				"in": "query",
				"items": { "enum": ["0", "1", "2", "3"], "type": "integer" },
				"name": "projectHealths",
				"type": "array"
			},
			{
				"description": "filter by project company ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectCompanyIds",
				"type": "array"
			},
			{
				"description": "filter by project category ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectCategoryIds",
				"type": "array"
			},
			{
				"description": "include",
				"in": "query",
				"items": {
					"enum": [
						"projects",
						"projects.companies",
						"projects.categories",
						"tags",
						"tasks",
						"tasks.parentTasks",
						"tasks.tasklists",
						"users"
					],
					"type": "string"
				},
				"name": "include",
				"type": "array"
			},
			{
				"description": "filter by ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "ids",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"firstName",
						"lastName",
						"title",
						"email",
						"companyId",
						"company",
						"isAdmin",
						"isClientUser",
						"isServiceAccount",
						"type",
						"deleted",
						"avatarUrl",
						"lengthOfDay",
						"workingHoursId",
						"workingHour",
						"userRate",
						"userCost",
						"canAddProjects"
					],
					"type": "string"
				},
				"name": "fields[users]",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"dateCreated",
						"minutes",
						"description",
						"timeLogged",
						"billable",
						"deleted",
						"dateDeleted",
						"hasStartTime",
						"dateEdited",
						"deskTicketId",
						"userId",
						"taskId",
						"projectId",
						"loggedByUserId",
						"deletedByUserId",
						"editedByUserId",
						"taskIdPreMove",
						"projectBillingInvoiceId"
					],
					"type": "string"
				},
				"name": "fields[timelogs]",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"name",
						"dateUpdated",
						"parentTaskId",
						"isPrivate",
						"status",
						"tasklistId",
						"startDate",
						"dueDate"
					],
					"type": "string"
				},
				"name": "fields[tasks]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name", "projectId", "milestoneId"], "type": "string" },
				"name": "fields[tasklists]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name", "color", "count"], "type": "string" },
				"name": "fields[tags]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name"], "type": "string" },
				"name": "fields[projects]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name", "color"], "type": "string" },
				"name": "fields[projectcategories]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name", "logoUploadedToServer", "logoImage"], "type": "string" },
				"name": "fields[companies]",
				"type": "array"
			},
			{
				"description": "filter by assigned user ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "assignedToUserIds",
				"type": "array"
			},
			{
				"description": "filter by assigned team ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "assignedToTeamIds",
				"type": "array"
			},
			{
				"description": "filter by assigned company ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "assignedToCompanyIds",
				"type": "array"
			}
		],
		"description": "Get all time entries",
		"group": "TimeTracking"
	},
	{
		"endpoint": "/projects/api/v3/time/total.json",
		"method": "get",
		"parameters": [
			{
				"description": "filter by a starting date",
				"format": "date",
				"in": "query",
				"name": "startDate",
				"type": "string"
			},
			{
				"description": "filter by project status",
				"enum": ["active", "current", "late", "upcoming", "completed", "deleted"],
				"in": "query",
				"name": "projectStatus",
				"type": "string"
			},
			{
				"description": "filter by an ending date",
				"format": "date",
				"in": "query",
				"name": "endDate",
				"type": "string"
			},
			{
				"description": "filter by user id (deprecated, use assignedToUserIds)",
				"in": "query",
				"name": "userId",
				"type": "integer"
			},
			{
				"description": "filter by tasklist id",
				"in": "query",
				"name": "tasklistId",
				"type": "integer"
			},
			{
				"description": "filter by task id (deprecated, use taskIds)",
				"in": "query",
				"name": "taskId",
				"type": "integer"
			},
			{
				"description": "filter by project id",
				"in": "query",
				"name": "projectId",
				"type": "integer"
			},
			{
				"description": "filter by desk ticket id",
				"in": "query",
				"name": "deskTicketId",
				"type": "integer"
			},
			{
				"description": "filter by starred projects only",
				"in": "query",
				"name": "onlyStarredProjects",
				"type": "boolean"
			},
			{
				"description": "match all project tags",
				"in": "query",
				"name": "matchAllProjectTags",
				"type": "boolean"
			},
			{
				"description": "get subtask totals",
				"in": "query",
				"name": "includeDescendants",
				"type": "boolean"
			},
			{
				"description": "filter by user ids (deprecated, use assignedToUserIds)",
				"in": "query",
				"items": { "type": "integer" },
				"name": "userIds",
				"type": "array"
			},
			{
				"description": "filter by task ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "taskIds",
				"type": "array"
			},
			{
				"description": "filter by project tag ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectTagIds",
				"type": "array"
			},
			{
				"description": "filter by project statuses",
				"in": "query",
				"items": {
					"enum": ["active", "current", "late", "upcoming", "completed", "deleted"],
					"type": "string"
				},
				"name": "projectStatuses",
				"type": "array"
			},
			{
				"description": "filter by project owner ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectOwnerIds",
				"type": "array"
			},
			{
				"description": "filter by project ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectIds",
				"type": "array"
			},
			{
				"description": "filter by project healths\n\n0: not set\n1: bad\n2: ok\n3: good",
				"in": "query",
				"items": { "enum": ["0", "1", "2", "3"], "type": "integer" },
				"name": "projectHealths",
				"type": "array"
			},
			{
				"description": "filter by project company ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectCompanyIds",
				"type": "array"
			},
			{
				"description": "filter by project category ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectCategoryIds",
				"type": "array"
			},
			{
				"description": "filter by company ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "companyIds",
				"type": "array"
			},
			{
				"description": "filter by assigned user ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "assignedToUserIds",
				"type": "array"
			},
			{
				"description": "filter by assigned team ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "assignedToTeamIds",
				"type": "array"
			},
			{
				"description": "filter by assigned company ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "assignedToCompanyIds",
				"type": "array"
			}
		],
		"description": "Get timelog totals.",
		"group": "TimeTracking"
	},
	{
		"endpoint": "/projects/api/v3/time/{timelogId}.json",
		"method": "delete",
		"parameters": [{ "in": "path", "name": "timelogId", "required": true, "type": "integer" }],
		"description": "Delete an existing timelog.",
		"group": "TimeTracking"
	},
	{
		"endpoint": "/projects/api/v3/time/{timelogId}.json",
		"method": "get",
		"parameters": [{ "in": "path", "name": "timelogId", "required": true, "type": "integer" }],
		"description": "Get a specific time entry",
		"group": "TimeTracking"
	},
	{
		"endpoint": "/projects/api/v3/time/{timelogId}.json",
		"method": "patch",
		"parameters": [
			{
				"in": "body",
				"name": "timelog.Request",
				"required": true,
				"schema": { "$ref": "#/definitions/timelog.Request" }
			},
			{ "in": "path", "name": "timelogId", "required": true, "type": "integer" }
		],
		"description": "Update an existing time entry.",
		"group": "TimeTracking"
	},
	{
		"endpoint": "/projects/api/v3/timers.json",
		"method": "get",
		"parameters": [
			{
				"description": "filter by updated after date (deprecated, use updatedAfter)",
				"format": "date-time",
				"in": "query",
				"name": "updatedAfterDate",
				"type": "string"
			},
			{
				"description": "filter by updated after date",
				"format": "date-time",
				"in": "query",
				"name": "updatedAfter",
				"type": "string"
			},
			{ "description": "filter by user id", "in": "query", "name": "userId", "type": "integer" },
			{ "description": "filter by task id", "in": "query", "name": "taskId", "type": "integer" },
			{
				"description": "filter by project id",
				"in": "query",
				"name": "projectId",
				"type": "integer"
			},
			{
				"default": "50",
				"description": "number of items in a page",
				"in": "query",
				"name": "pageSize",
				"type": "integer"
			},
			{
				"default": "1",
				"description": "page number",
				"in": "query",
				"name": "page",
				"type": "integer"
			},
			{
				"default": "false",
				"description": "include deleted items",
				"in": "query",
				"name": "showDeleted",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "enforce running timers only",
				"in": "query",
				"name": "runningTimersOnly",
				"type": "boolean"
			},
			{
				"description": "include",
				"in": "query",
				"items": {
					"enum": ["projects", "tasks", "tasks.parentTasks", "tasks.tasklists", "users"],
					"type": "string"
				},
				"name": "include",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"firstName",
						"lastName",
						"title",
						"email",
						"companyId",
						"company",
						"isAdmin",
						"isClientUser",
						"isServiceAccount",
						"type",
						"deleted",
						"avatarUrl",
						"lengthOfDay",
						"workingHoursId",
						"workingHour",
						"userRate",
						"userCost",
						"canAddProjects"
					],
					"type": "string"
				},
				"name": "fields[users]",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"userId",
						"taskId",
						"projectId",
						"description",
						"running",
						"billable",
						"deleted",
						"dateCreated",
						"dateDeleted",
						"duration",
						"lastStartedAt",
						"serverTime",
						"intervals"
					],
					"type": "string"
				},
				"name": "fields[timers]",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"name",
						"dateUpdated",
						"parentTaskId",
						"isPrivate",
						"status",
						"tasklistId",
						"startDate",
						"dueDate"
					],
					"type": "string"
				},
				"name": "fields[tasks]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name", "projectId", "milestoneId"], "type": "string" },
				"name": "fields[tasklists]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name"], "type": "string" },
				"name": "fields[projects]",
				"type": "array"
			}
		],
		"description": "Get all running timers",
		"group": "TimeTracking"
	},
	{
		"endpoint": "/projects/api/v3/timers/{timerId}.json",
		"method": "get",
		"parameters": [
			{ "description": "filter by user id", "in": "query", "name": "userId", "type": "integer" },
			{ "in": "path", "name": "timerId", "required": true, "type": "integer" },
			{
				"description": "filter by task id",
				"in": "query",
				"name": "showDeleted",
				"type": "boolean"
			},
			{
				"description": "include",
				"in": "query",
				"items": {
					"enum": ["projects", "tasks", "tasks.parentTasks", "tasks.tasklists", "users"],
					"type": "string"
				},
				"name": "include",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"firstName",
						"lastName",
						"title",
						"email",
						"companyId",
						"company",
						"isAdmin",
						"isClientUser",
						"isServiceAccount",
						"type",
						"deleted",
						"avatarUrl",
						"lengthOfDay",
						"workingHoursId",
						"workingHour",
						"userRate",
						"userCost",
						"canAddProjects"
					],
					"type": "string"
				},
				"name": "fields[users]",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"userId",
						"taskId",
						"projectId",
						"description",
						"running",
						"billable",
						"deleted",
						"dateCreated",
						"dateDeleted",
						"duration",
						"lastStartedAt",
						"serverTime",
						"intervals"
					],
					"type": "string"
				},
				"name": "fields[timers]",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"name",
						"dateUpdated",
						"parentTaskId",
						"isPrivate",
						"status",
						"tasklistId",
						"startDate",
						"dueDate"
					],
					"type": "string"
				},
				"name": "fields[tasks]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name", "projectId", "milestoneId"], "type": "string" },
				"name": "fields[tasklists]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name"], "type": "string" },
				"name": "fields[projects]",
				"type": "array"
			}
		],
		"description": "Get a specific timer",
		"group": "TimeTracking"
	},
	{
		"endpoint": "/projects/api/v3/workload/planners.json",
		"method": "get",
		"parameters": [
			{
				"description": "define the start date of the planner",
				"format": "date",
				"in": "query",
				"name": "startDate",
				"type": "string"
			},
			{
				"description": "filter by user name",
				"in": "query",
				"name": "searchUserName",
				"type": "string"
			},
			{
				"description": "filter by task name",
				"in": "query",
				"name": "searchTaskName",
				"type": "string"
			},
			{
				"description": "filter by project status",
				"in": "query",
				"name": "projectStatus",
				"type": "string"
			},
			{
				"default": "asc",
				"description": "order mode",
				"enum": ["asc", "desc"],
				"in": "query",
				"name": "orderMode",
				"type": "string"
			},
			{
				"default": "name",
				"description": "order by",
				"enum": ["name", "company"],
				"in": "query",
				"name": "orderBy",
				"type": "string"
			},
			{
				"description": "define the end date of the planner",
				"format": "date",
				"in": "query",
				"name": "endDate",
				"type": "string"
			},
			{
				"default": "50",
				"description": "number of items in a page",
				"in": "query",
				"name": "pageSize",
				"type": "integer"
			},
			{
				"default": "1",
				"description": "page number",
				"in": "query",
				"name": "page",
				"type": "integer"
			},
			{
				"description": "subtract logged time from task estimated time",
				"in": "query",
				"name": "subtractLoggedTimeFromEstimates",
				"type": "boolean"
			},
			{
				"default": "false",
				"description": "include tasks that have the start and due dates outside the window range",
				"in": "query",
				"name": "prorating",
				"type": "boolean"
			},
			{
				"description": "filter ony untagged tasks",
				"in": "query",
				"name": "onlyUntaggedTasks",
				"type": "boolean"
			},
			{
				"description": "filter by starred projects only",
				"in": "query",
				"name": "onlyStarredProjects",
				"type": "boolean"
			},
			{
				"description": "enforce all tag ids must be matched",
				"in": "query",
				"name": "matchAllProjectTags",
				"type": "boolean"
			},
			{
				"default": "true",
				"description": "include team users to the responsible party ids",
				"in": "query",
				"name": "includeTeamUserIds",
				"type": "boolean"
			},
			{
				"description": "include tasks without start or due date",
				"in": "query",
				"name": "includeTasksWithoutDates",
				"type": "boolean"
			},
			{
				"description": "include completed tasks",
				"in": "query",
				"name": "includeCompletedTasks",
				"type": "boolean"
			},
			{
				"default": "true",
				"description": "include company users to the responsible party ids",
				"in": "query",
				"name": "includeCompanyUserIds",
				"type": "boolean"
			},
			{
				"description": "include calendar events on capacity calculation",
				"in": "query",
				"name": "includeCalendarEvents",
				"type": "boolean"
			},
			{
				"description": "include teams related to the responsible party ids",
				"in": "query",
				"name": "includeAssigneeTeams",
				"type": "boolean"
			},
			{
				"description": "include companies related to the responsible party ids",
				"in": "query",
				"name": "includeAssigneeCompanies",
				"type": "boolean"
			},
			{
				"description": "include archived projects",
				"in": "query",
				"name": "includeArchivedProjects",
				"type": "boolean"
			},
			{
				"description": "distribute the estimated time for a task between all the assignees",
				"in": "query",
				"name": "distribute",
				"type": "boolean"
			},
			{
				"description": "filter by member of team ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "teamIds",
				"type": "array"
			},
			{
				"description": "filter by task tag ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "tagIds",
				"type": "array"
			},
			{
				"description": "filter by responsible party ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "responsiblePartyIds",
				"type": "array"
			},
			{
				"description": "filter by project tag ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectTagIds",
				"type": "array"
			},
			{
				"description": "list of project status",
				"in": "query",
				"items": { "type": "string" },
				"name": "projectStatuses",
				"type": "array"
			},
			{
				"description": "filter by project owner ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectOwnerIds",
				"type": "array"
			},
			{
				"description": "filter by project ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectIds",
				"type": "array"
			},
			{
				"description": "list of project health",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectHealths",
				"type": "array"
			},
			{
				"description": "filter by company ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectCompanyIds",
				"type": "array"
			},
			{
				"description": "filter by project category ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "projectCategoryIds",
				"type": "array"
			},
			{
				"description": "filter by member of project ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "memberOfProjectIds",
				"type": "array"
			},
			{
				"description": "include",
				"in": "query",
				"items": {
					"enum": [
						"users",
						"users.workingHours",
						"users.workingHours.workingHoursEntry",
						"tasks",
						"tasks.timelogs",
						"tasklists",
						"milestones",
						"companies",
						"calendarEvents"
					],
					"type": "string"
				},
				"name": "include",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"objectType",
						"objectId",
						"name",
						"description",
						"dateCreated",
						"dateUpdated",
						"entryIds"
					],
					"type": "string"
				},
				"name": "fields[workingHours]",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"workingHourId",
						"weekday",
						"startTime",
						"endTime",
						"taskHours",
						"timezone"
					],
					"type": "string"
				},
				"name": "fields[workingHourEntries]",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"firstName",
						"lastName",
						"title",
						"email",
						"companyId",
						"company",
						"isAdmin",
						"isClientUser",
						"isServiceAccount",
						"type",
						"deleted",
						"avatarUrl",
						"lengthOfDay",
						"workingHoursId",
						"workingHour",
						"userRate",
						"userCost",
						"canAddProjects"
					],
					"type": "string"
				},
				"name": "fields[users]",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"dateCreated",
						"minutes",
						"description",
						"timeLogged",
						"billable",
						"deleted",
						"dateDeleted",
						"hasStartTime",
						"dateEdited",
						"deskTicketId",
						"userId",
						"taskId",
						"projectId",
						"loggedByUserId",
						"deletedByUserId",
						"editedByUserId",
						"taskIdPreMove",
						"projectBillingInvoiceId"
					],
					"type": "string"
				},
				"name": "fields[timelogs]",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"name",
						"dateUpdated",
						"parentTaskId",
						"isPrivate",
						"status",
						"tasklistId",
						"startDate",
						"dueDate"
					],
					"type": "string"
				},
				"name": "fields[tasks]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name", "projectId", "milestoneId"], "type": "string" },
				"name": "fields[tasklists]",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"name",
						"description",
						"deadline",
						"completed",
						"projectId",
						"createdOn",
						"lastChangedOn",
						"creatorUserId",
						"reminder",
						"private",
						"lockdownId",
						"status",
						"completedOn",
						"completerId",
						"percentageComplete"
					],
					"type": "string"
				},
				"name": "fields[milestones]",
				"type": "array"
			},
			{
				"in": "query",
				"items": { "enum": ["id", "name", "logoUploadedToServer", "logoImage"], "type": "string" },
				"name": "fields[companies]",
				"type": "array"
			},
			{
				"in": "query",
				"items": {
					"enum": [
						"id",
						"title",
						"startDate",
						"endDate",
						"typeId",
						"privacyType",
						"allDay",
						"location",
						"description",
						"showAsBusy",
						"attendeesCanEdit",
						"projectUsersCanEdit",
						"monthlyRepeatType",
						"dateLastUpdated",
						"createdDateTime",
						"deleted",
						"dateDeleted",
						"additionalProperties",
						"currentUserAssociationType",
						"sequenceId",
						"projectId",
						"ownerUserId",
						"deletedByUserId",
						"createdByUserId",
						"updatedByUserId"
					],
					"type": "string"
				},
				"name": "fields[calendarEvents]",
				"type": "array"
			},
			{
				"description": "filter by removing task tag ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "excludeTagIds",
				"type": "array"
			},
			{
				"description": "filter by user company id",
				"in": "query",
				"items": { "type": "integer" },
				"name": "companyIds",
				"type": "array"
			},
			{
				"description": "filter by assignee team ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "assigneeTeamIds",
				"type": "array"
			},
			{
				"description": "filter by assignee company ids",
				"in": "query",
				"items": { "type": "integer" },
				"name": "assigneeCompanyIds",
				"type": "array"
			}
		],
		"description": "Retrieve user workload planner",
		"group": "Workload"
	}
]
